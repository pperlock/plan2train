[{"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\index.js":"1","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\reportWebVitals.js":"2","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\App.js":"3","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Trainer\\Trainer.jsx":"4","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Intro\\Intro.jsx":"5","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Programs\\Programs.jsx":"6","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Clients\\Clients.jsx":"7","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\User\\User.jsx":"8","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Schedule\\Schedule.jsx":"9","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\SideBar\\SideBar.jsx":"10","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ProgramContent\\ProgramContent.jsx":"11","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientProfile\\ClientProfile.jsx":"12","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientLessons\\ClientLessons.jsx":"13","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientList\\ClientList.jsx":"14","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\List\\List.jsx":"15","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ModalContainer\\ModalContainer.jsx":"16","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ProgramBar\\ProgramBar.jsx":"17","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\TriggerModalButton\\TriggerModalButton.jsx":"18","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Modal\\Modal.jsx":"19","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\PersonalDetailsForm\\PersonalDetailsForm.jsx":"20","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewClientForm\\NewClientForm.jsx":"21","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewProgramForm\\NewProgramForm.jsx":"22","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\firebase.js":"23","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DeleteModal\\DeleteModal.jsx":"24","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonDetailsForm\\LessonDetailsForm.jsx":"25","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonResources\\LessonResources.jsx":"26","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\AppliedResources\\AppliedResources.jsx":"27","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DNDList\\DNDList.jsx":"28","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Map\\Map.jsx":"29","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\mapStyles.js":"30"},{"size":479,"mtime":1609516748053,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":1179,"mtime":1611520289879,"results":"34","hashOfConfig":"32"},{"size":9633,"mtime":1611616106366,"results":"35","hashOfConfig":"32"},{"size":819,"mtime":1611086917935,"results":"36","hashOfConfig":"32"},{"size":9242,"mtime":1611580186016,"results":"37","hashOfConfig":"32"},{"size":4730,"mtime":1611619507171,"results":"38","hashOfConfig":"32"},{"size":4103,"mtime":1611584305293,"results":"39","hashOfConfig":"32"},{"size":168,"mtime":1611712457260,"results":"40","hashOfConfig":"32"},{"size":3898,"mtime":1611577404491,"results":"41","hashOfConfig":"32"},{"size":872,"mtime":1611172017746,"results":"42","hashOfConfig":"32"},{"size":5627,"mtime":1611712457265,"results":"43","hashOfConfig":"32"},{"size":19351,"mtime":1611712457263,"results":"44","hashOfConfig":"32"},{"size":1459,"mtime":1611171263971,"results":"45","hashOfConfig":"32"},{"size":1276,"mtime":1611612430536,"results":"46","hashOfConfig":"32"},{"size":9116,"mtime":1611609345509,"results":"47","hashOfConfig":"32"},{"size":961,"mtime":1609618837760,"results":"48","hashOfConfig":"32"},{"size":271,"mtime":1609852900686,"results":"49","hashOfConfig":"32"},{"size":2410,"mtime":1611607450381,"results":"50","hashOfConfig":"32"},{"size":3924,"mtime":1611608323414,"results":"51","hashOfConfig":"32"},{"size":2450,"mtime":1611167347958,"results":"52","hashOfConfig":"32"},{"size":1011,"mtime":1611172348051,"results":"53","hashOfConfig":"32"},{"size":464,"mtime":1611194250386,"results":"54","hashOfConfig":"32"},{"size":2188,"mtime":1611622871959,"results":"55","hashOfConfig":"32"},{"size":1981,"mtime":1611534495920,"results":"56","hashOfConfig":"32"},{"size":5629,"mtime":1611577461572,"results":"57","hashOfConfig":"32"},{"size":1362,"mtime":1611577284211,"results":"58","hashOfConfig":"32"},{"size":1258,"mtime":1611520289890,"results":"59","hashOfConfig":"32"},{"size":1686,"mtime":1611712457268,"results":"60","hashOfConfig":"32"},{"size":3522,"mtime":1611712457269,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"l44x0r",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"64"},"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\index.js",[],["131","132"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\reportWebVitals.js",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\App.js",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Trainer\\Trainer.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Intro\\Intro.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Programs\\Programs.jsx",["133"],"import React from 'react';\r\nimport \"./Programs.scss\";\r\nimport firebase from '../../firebase';\r\n\r\nimport ClientList from '../../components/ClientList/ClientList';\r\nimport List from '../../components/List/List';\r\nimport ModalContainer from '../../components/ModalContainer/ModalContainer';\r\n\r\n/**\r\n *  programs={this.state.programs} \r\n    currentProgramId={match.params.programId} \r\n    match={match}\r\n    addProgram={this.addProgram}\r\n    addResource={this.addResource} \r\n */\r\n\r\n/**\r\n * Props Passed in by Trainer\r\n * @param {Object} currentClient \r\n * @param {string} currentProgramId \r\n * @param {Object} match \r\n * @param {function} addProgram\r\n * @param {function} deleteProgram\r\n * @param {function} addResource\r\n * @param {function} deleteResource\r\n */\r\n \r\nclass Programs extends React.Component {\r\n\r\n    state={selectedFile:null, showRadio:false, addActivated:false, uploaded:false, uploadType:\"\"}\r\n\r\n    componentDidUpdate(){\r\n        console.log(\"programs - did update\")\r\n    }\r\n\r\n    // fired by clicking on a radio button\r\n    uploadType = (event) => {\r\n        const type = event.target.value;\r\n        if (type ===\"file\"){\r\n                console.log( this.fileInput)\r\n                this.fileInput.click()\r\n        }else{\r\n            this.setState({uploadType:type, showRadio:false})\r\n        }\r\n    }\r\n\r\n    // fired through reference in uploadType - event to handle choosing a file type from file picker\r\n    fileSelectedHandler = event =>{\r\n        //files is an array - if they choose more than one\r\n        this.setState({selectedFile:event.target.files[0], uploadType:\"file\", showRadio:false});\r\n    }\r\n\r\n    // fired by clicking the upload button\r\n    fileUpload=(event,uploadType)=>{\r\n        event.preventDefault();\r\n\r\n        // if the resource to be added is a file the save it to firebase and send the resulting url to db\r\n        if (uploadType === \"file\"){\r\n            let bucketName = this.props.programs[0].trainerId;\r\n            let file = this.state.selectedFile;\r\n            let storageRef = firebase.storage().ref(`/${bucketName}/${file.name}`);\r\n            let uploadTask = storageRef.put(file);\r\n            // uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED,\r\n            //     ()=>{\r\n            //         let downloadURL = uploadTask.snapshot.getDownloadURL;\r\n            //     })\r\n            \r\n            let storageLoc = firebase.storage().ref();\r\n            storageLoc.child(`/${bucketName}/${file.name}`).getDownloadURL()\r\n            .then((url)=>{\r\n                const newResource={\r\n                    name:event.target.uploadName.value,\r\n                    url:url,\r\n                    type:\"pdf\"\r\n                }\r\n                this.props.addResource(newResource, this.props.match.params.programId);\r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n            })\r\n        //if the resource is a url then capture the url and send it to db\r\n        }else{\r\n            const newResource={\r\n                name:event.target.uploadName.value,\r\n                url:event.target.uploadURL.value,\r\n                type:\"url\"\r\n            }\r\n            this.props.addResource(newResource, this.props.match.params.programId);\r\n        }\r\n\r\n        // return the add button to the screen and hide the resource input elements\r\n        this.setState({addActivated:false, uploadType:\"\"});\r\n    }\r\n\r\n\r\n    render(){\r\n        const {programs, match, addProgram}=this.props;\r\n        const program = programs.find(program=>program.id===match.params.programId)\r\n        \r\n        return (\r\n            <div className=\"programs__container\">\r\n                <ClientList list={programs} match={match} onSubmitTrainer={addProgram}/>\r\n                <div className=\"program\">\r\n                    <div className=\"component program__resources\">\r\n                        <div className=\"program__header\">\r\n                            <p className=\"program__header-title\">{program.name}</p>\r\n                            <p className=\"program__header-description\">{program.description}</p>\r\n                        </div>\r\n\r\n                        <ModalContainer \r\n                            modalType = \"delete\" \r\n                            modalName = \"delete\" \r\n                            buttonText=\"Delete\" \r\n                            onSubmitTrainer={this.props.deleteProgram}\r\n                            deleteString= {program.name}\r\n                            deleteId={program.id}\r\n                        />\r\n\r\n                        {program.resources.length === 0 && \r\n                            <div onClick={()=>this.setState({addActivated:true, showRadio:true})} className=\"empty-container\">\r\n                                <img className=\"empty-container__icon\" src=\"/icons/add-icon.svg\" alt=\"add icon\"></img>\r\n                                <p>Click to Add Resources</p>\r\n                            </div>}     \r\n\r\n                        <div className=\"list\">\r\n                                {program.resources.map(resource=> \r\n                                    <List \r\n                                        key={resource.id} \r\n                                        content={resource.name} \r\n                                        id={resource.id} \r\n                                        link={resource.url} \r\n                                        description={resource.type} \r\n                                        deleteBtn={true}\r\n                                        deleteType=\"modal\" \r\n                                        deleteFunction={this.props.deleteResource}\r\n                                    />)}\r\n                        </div>\r\n\r\n                        {/* a reference is a way to reference another element in the dom */}\r\n                        {/* ref takes a function that binds a property of our class to a reference of this input */}        \r\n                        {/* input box used to access the file picker */}\r\n                        <input \r\n                            style={{display:'none'}} \r\n                            type=\"file\"\r\n                            // when file is selected it sets the state to the file, hides the radio and sets type of file in state\r\n                            onChange={this.fileSelectedHandler} \r\n                            //input box is invisible activated by radio button choice through reference in upload type function \r\n                            ref={fileInput => this.fileInput=fileInput}>\r\n                        </input>\r\n\r\n                        {this.state.showRadio && \r\n                            <div>\r\n                                {/* clicking an input box sets which resource type options to show */}\r\n                                <input type=\"radio\" id=\"url\" name=\"addResource\" value=\"url\" onClick={this.uploadType}/>\r\n                                <label htmlFor=\"url\">Add URL</label>\r\n                                <input type=\"radio\" id=\"file\" name=\"addResource\" value=\"file\" onClick={this.uploadType}/>\r\n                                <label htmlFor=\"file\">Upload File</label>\r\n                            </div>\r\n                        }\r\n                        \r\n                        {this.state.uploadType===\"file\" && \r\n                            <form className=\"resource__upload\" onSubmit={(event)=>this.fileUpload(event, this.state.uploadType)}>\r\n                                <input className=\"resource__upload-name\" name=\"uploadName\" type=\"text\" placeholder=\"Resource Name\" required></input>\r\n                                <input className=\"resource__upload-file\" name=\"uploadURL\" type=\"text\" value={this.state.selectedFile.name} readOnly></input>\r\n                                <select className=\"resource__upload-type\">\r\n                                    <option value=\"pdf\">pdf</option>\r\n                                    <option value=\"doc\">doc</option>\r\n                                    <option value=\"video\">video</option>\r\n                                    <option value=\"image\">image</option>\r\n                                </select>\r\n                                <button type=\"submit\" className=\"resource__add\">Upload</button>\r\n                            </form>\r\n                        }\r\n\r\n                        {this.state.uploadType===\"url\" && \r\n                            <form className=\"resource__upload\" onSubmit={(event)=>this.fileUpload(event, this.state.uploadType)}>\r\n                                <input className=\"resource__upload-name\" name=\"uploadName\" type=\"text\" placeholder=\"Resource Name\" required></input>\r\n                                <input className=\"resource__upload-file\" name=\"uploadURL\" type=\"text\" placeholder=\"Enter URL\"></input>\r\n                                <button type=\"submit\" className=\"resource__add\">Upload</button>\r\n                            </form>\r\n                        }\r\n\r\n                        {!this.state.addActivated && <button className=\"add resource__add\" onClick={()=>this.setState({addActivated:true, showRadio:true})}>+</button>}\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Programs\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Clients\\Clients.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\User\\User.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Schedule\\Schedule.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\SideBar\\SideBar.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ProgramContent\\ProgramContent.jsx",[],["134","135"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientProfile\\ClientProfile.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientLessons\\ClientLessons.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientList\\ClientList.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\List\\List.jsx",["136"],"import React from 'react';\r\n\r\nimport './List.scss';\r\n\r\nimport ModalContainer from '../../components/ModalContainer/ModalContainer';\r\n\r\n\r\nfunction List({id, content, link, description, deleteBtn, deleteFunction, list, deleteType}) {\r\n    return (\r\n        <div className=\"list__item\">\r\n            <a href={link} className=\"list__item-name\" target=\"_blank\">{content}</a>\r\n            <div className=\"list__right\" >\r\n                {description && <p className=\"list__right-type\">{description}</p>}\r\n                {(deleteType !== \"modal\" && deleteBtn) && <button id={id} onClick={(event)=>deleteFunction(event, list)} className=\"list__right-delete\"> x </button>}\r\n                \r\n                {deleteType===\"modal\" &&\r\n                    <ModalContainer \r\n                        modalType = \"delete\" \r\n                        modalName = \"delete\" \r\n                        buttonText=\"x\" \r\n                        onSubmitTrainer={deleteFunction}\r\n                        deleteString= {content}\r\n                        deleteId={id}\r\n                    />\r\n                }\r\n                {/* {deleteBtn && <button onClick={()=>log(\"Patti\")} className=\"list__right-delete\"> x </button>} */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ModalContainer\\ModalContainer.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ProgramBar\\ProgramBar.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\TriggerModalButton\\TriggerModalButton.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Modal\\Modal.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\PersonalDetailsForm\\PersonalDetailsForm.jsx",["137","138"],"import React from 'react'\r\nimport './PersonalDetailsForm.scss';\r\n\r\nfunction PersonalDetailsForm({onSubmit, closeModal, information, modalName}) {\r\n\r\n    console.log(modalName);\r\n    if (modalName === \"updateUser\"){\r\n        var {lname,fname,username,password,email,phone,address,city,province,country,postal} = information.contact;\r\n        var {facebook, twitter, instagram, linkedIn} = information.social;\r\n        var {name, description} = information.company;\r\n    }else{\r\n        lname= information.userProfile.lname;\r\n        fname= information.userProfile.fname;\r\n        email= information.userProfile.email;\r\n        phone= information.userProfile.phone;\r\n        address= information.userProfile.address;\r\n        city= information.userProfile.city;\r\n        province= information.userProfile.province;\r\n        country= information.userProfile.country;\r\n        postal = information.userProfile.postal;\r\n    }\r\n\r\n    return (\r\n        <form id=\"modal-form\" className=\"modal-form\" onSubmit={onSubmit} >\r\n            <div>\r\n                <input className=\"modal-form__input\" id=\"fname\" name=\"fname\" type=\"text\" placeholder=\"First Name\" defaultValue={fname}></input>\r\n                <input className=\"modal-form__input\" id=\"lname\" name=\"lname\" type=\"text\" placeholder=\"Last Name\" defaultValue={lname}></input>\r\n                {modalName === \"updateUser\" && <input className=\"modal-form__input\" id=\"username\" name=\"username\" type=\"text\" placeholder=\"User Name\" defaultValue={username}></input>}\r\n                {modalName === \"updateUser\" && <input className=\"modal-form__input\" id=\"password\" name=\"password\" type=\"text\" placeholder=\"Password\" defaultValue={password}></input>}\r\n            </div>\r\n            <div>\r\n                <input className=\"modal-form__input\" id=\"email\" name=\"email\" type=\"email\" placeholder=\"Email\" defaultValue={email}></input>\r\n                <input className=\"modal-form__input\" id=\"phone\" name=\"phone\" type=\"phone\" placeholder=\"Phone\" defaultValue={phone}></input>\r\n            </div>\r\n            <div>\r\n                <input className=\"modal-form__input\" id=\"address\" name=\"address\" type=\"text\" placeholder=\"Address\" defaultValue={address} ></input>\r\n                <input className=\"modal-form__input\" id=\"city\" name=\"city\" type=\"text\" placeholder=\"City\" defaultValue={city}></input>\r\n                <input className=\"modal-form__input\" id=\"province\" name=\"province\" type=\"text\" placeholder=\"Province\" defaultValue={province}></input>\r\n                <input className=\"modal-form__input\" id=\"country\" name=\"country\" type=\"text\" placeholder=\"Country\" defaultValue={country}></input>\r\n                <input className=\"modal-form__input\" id=\"postal\" name=\"postal\" type=\"text\" placeholder=\"Postal Code\" defaultValue={postal} ></input>\r\n            </div>\r\n            {modalName === \"updateUser\" && \r\n                <div>\r\n                    <input className=\"modal-form__input\" id=\"facebook\" name=\"facebook\" type=\"text\" placeholder=\"Facebook\" defaultValue={facebook}></input>\r\n                    <input className=\"modal-form__input\" id=\"twitter\" name=\"twitter\" type=\"text\" placeholder=\"Twitter\" defaultValue={twitter}></input>\r\n                    <input className=\"modal-form__input\" id=\"instagram\" name=\"instagram\" type=\"text\" placeholder=\"Instagram\" defaultValue={instagram}></input>\r\n                    <input className=\"modal-form__input\" id=\"linkedIn\" name=\"linkedIn\" type=\"text\" placeholder=\"Linked In\" defaultValue={linkedIn}></input>\r\n                </div>\r\n            }\r\n            <div className=\"modal-form__submit\">\r\n                <button className=\"modal-form__submit-cancel\" type=\"button\" onClick={closeModal}>Cancel</button>\r\n                <button className=\"modal-form__submit-button\" id=\"submit\" type=\"submit\" form=\"modal-form\">Submit</button>\r\n            </div>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonalDetailsForm\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewClientForm\\NewClientForm.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewProgramForm\\NewProgramForm.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\firebase.js",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DeleteModal\\DeleteModal.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonDetailsForm\\LessonDetailsForm.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonResources\\LessonResources.jsx",["139","140"],"import React, {useState, useEffect}  from 'react';\r\nimport {useDrop} from 'react-dnd';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n// import './ClientLessons.scss'\r\n\r\nimport DNDList from '../../components/DNDList/DNDList';\r\nimport AppliedResources from '../../components/AppliedResources/AppliedResources';\r\n\r\n/**\r\n * \r\n * @param {Object} programs - all the trainer's programs\r\n * @param {Object} currentLesson - lesson currently rendered\r\n * @param {Object} currentClient - client currently rendered\r\n */\r\n\r\nfunction LessonResources({programs, currentLesson, currentClient}) {\r\n\r\n    const ItemTypes = {\r\n        CARD:'card',\r\n    };\r\n\r\n    //resources that are currently being displayed - change based on program chosen\r\n    const[displayResources, setResourceList] = useState(programs[0].resources);\r\n\r\n    //current lesson being rendered - changed based on drag and drop from available resources \r\n    const[currentLessonResources, updateCurrentLesson] = useState(currentLesson);\r\n    \r\n    \r\n    //update the resources of the current lesson when state changes\r\n    useEffect(() => {\r\n        updateCurrentLesson(currentLesson);\r\n    });\r\n\r\n    // update the resources being displayed when a program is chosen\r\n    const updateDisplayed = (program)=>{\r\n        setResourceList(program.resources);\r\n    }\r\n\r\n    //used to remove a resource from the available resources and add it to the lesson resources\r\n    const markAsDone = id => {\r\n\r\n        //find the resource to update and set the applied status to true        \r\n        const displays = [...displayResources];\r\n        displays.find(resource=> resource.id === id).applied=true;\r\n             \r\n        const lessonObject = {...currentLessonResources};\r\n        // take the id from the resource that was moved, find the data associated with it and push it to the resources of the current lesson\r\n        lessonObject.resources.push(displays.find(resource=> resource.id === id));\r\n\r\n        //update the displaye resources and the lesson resources that are rendered\r\n        setResourceList(displays);\r\n        updateCurrentLesson(lessonObject);\r\n\r\n        //create an array of the ids associated with the updated resources to push to the db\r\n        const updatedResources = lessonObject.resources.map(resource => resource.id)\r\n        console.log(updatedResources);\r\n\r\n        //update the db with the new lesson resources\r\n        axios.put(`http://localhost:8080/client/${currentClient.userId}/${currentLessonResources.id}/updateResource`, updatedResources)\r\n        .then(res =>{\r\n            console.log(res);\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n\r\n    }\r\n\r\n    const removeResource=(id)=>{\r\n        console.log(id);\r\n         //find the resource to update and set the applied status to true        \r\n        const displays = [...displayResources];\r\n        displays.find(resource=> resource.id === id).applied=false;\r\n             \r\n        const lessonObject = {...currentLessonResources};\r\n        // take the id from the resource that was moved, find the data associated with it and push it to the resources of the current lesson\r\n        const index = lessonObject.resources.findIndex(resource => resource.id === id);\r\n        lessonObject.resources.splice(index,1);\r\n\r\n        //update the display resources and the lesson resources that are rendered\r\n        setResourceList(displays);\r\n        updateCurrentLesson(lessonObject);\r\n\r\n        //create an array of the ids associated with the updated resources to push to the db\r\n        const updatedResources = lessonObject.resources.map(resource => resource.id)\r\n        console.log(updatedResources);\r\n\r\n        // update the db with the new lesson resources\r\n        axios.put(`http://localhost:8080/client/${currentClient.userId}/${currentLessonResources.id}/updateResource`, updatedResources)\r\n        .then(res =>{\r\n            console.log(res);\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    //setup for drop componenet from  lessons - available\r\n    const[{isOver}, drop] = useDrop({\r\n        accept: ItemTypes.CARD, //required - tells drop zone it will only accept card components\r\n        drop: (item, monitor)=> removeResource(item.id),\r\n        collect: monitor => ({\r\n            isOver: !!monitor.isOver(),\r\n        }),\r\n    });\r\n\r\n    return (\r\n        <div className=\"current-lesson__resources\">  \r\n            <div className=\"current-lesson__available\">\r\n                {/* <p>Available Resources</p> */}\r\n                <div className=\"current-lesson__available-content\">\r\n                    <ul className=\"current-lesson__available-programs\"> \r\n                        {programs.map(program=> <Link key={program.id} to={`/clients/${currentClient.userId}/lessons`}><li onClick={()=>updateDisplayed(program)} className=\"current-lesson__available-programs-item\">{program.name}</li></Link>)}\r\n                    </ul>\r\n                        <div ref={drop} className=\"list current-lesson__available-resources\">\r\n                            {displayResources.filter(resource => resource.applied === false)\r\n                                .map(resource=> <DNDList key={resource.id} content={resource.name} link={resource.link} id={resource.id}/>)}\r\n                        </div>                \r\n                </div>\r\n            </div>\r\n            {/* applied resources component set up as a drop component */}\r\n            <AppliedResources currentLesson={currentLessonResources} markAsDone={markAsDone}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LessonResources\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\AppliedResources\\AppliedResources.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DNDList\\DNDList.jsx",["141"],"import React from 'react';\r\nimport { useDrag } from 'react-dnd';\r\n\r\nimport './DNDList.scss';\r\n\r\nconst ItemTypes = {\r\n    CARD:'card',\r\n};\r\n\r\n/**\r\n * \r\n * @param {string} id - resource id \r\n * @param {string} content - text to render\r\n * @param {string} link - url for text to link to\r\n * @param {string} description- type of resource if it is a resource list\r\n * \r\n */\r\nfunction DNDList({id, content, link, description}) {\r\n\r\n    // argument1 = props from the monitor\r\n    const[{isDragging}, drag] = useDrag({\r\n        item:{\r\n            type:ItemTypes.CARD,\r\n            //type is required - can pass anything else you want with it - here i want the id\r\n            id: id,\r\n        },\r\n        //talks to the monitor and sets the isDragging prop to true when is dragging\r\n        collect:monitor=>({\r\n            isDragging:!!monitor.isDragging(),\r\n        }),\r\n    })\r\n\r\n    return (\r\n        <div ref={drag} className=\"list__item\" opacity={isDragging ? '1' : '1'}>\r\n            <a href={link} className=\"list__item-name\" target=\"_blank\">{content}</a>\r\n            <div className=\"list__right\" >\r\n                {description && <p className=\"list__right-type\">{description}</p>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DNDList\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Map\\Map.jsx",["142","143"],"import React, {useState, useEffect} from 'react';\r\nimport {GoogleMap, Marker, InfoWindow,withGoogleMap, withScriptjs} from 'react-google-maps';\r\nimport axios from 'axios';\r\n\r\nimport mapStyles from '../../mapStyles';\r\n\r\nconst Map = withScriptjs(withGoogleMap(({mapLocation}) => {\r\n \r\n    console.log(mapLocation);\r\n    const [showInfo, setShowInfo]=useState(false);\r\n\r\n    if(!mapLocation){\r\n        return(\r\n            <div> Loading Map ...</div>\r\n        )\r\n    }else{\r\n        return (\r\n                <GoogleMap \r\n                    defaultZoom={12} \r\n                    center={{lat:mapLocation.lat, lng:mapLocation.lng}}\r\n                    defaultOptions={{styles:mapStyles, zoomControl:false, mapTypeControl:false}}\r\n                    onClick={()=>console.log(mapLocation)}\r\n                >\r\n\r\n                <Marker \r\n                    position={{lat:mapLocation.lat, lng:mapLocation.lng}} \r\n                    onClick={()=>{setShowInfo(true)}}\r\n                    // icon={{\r\n                    //     url:\"/icons/facebook-icon.svg\",\r\n                    //     scaledSize: new window.google.maps.Size(40,40)\r\n                    // }}\r\n                /> \r\n            \r\n\r\n            {showInfo &&\r\n                <InfoWindow \r\n                    position={{lat:mapLocation.lat, lng:mapLocation.lng}}\r\n                    onCloseClick={()=>{setShowInfo(false)}}\r\n                    >\r\n                    <div>\r\n                        <h2>Lesson details</h2>\r\n                        <p> Lesson Name</p>\r\n                    </div>\r\n                </InfoWindow>\r\n            }\r\n            </GoogleMap>\r\n        )\r\n    }\r\n    }\r\n));\r\n\r\nexport default Map\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\mapStyles.js",["144"],"export default [\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"weight\": \"2.00\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#9c9c9c\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels.text\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#f2f2f2\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape.man_made\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": -100\r\n            },\r\n            {\r\n                \"lightness\": 45\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#eeeeee\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#7b7b7b\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"simplified\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"labels.icon\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#46bcec\"\r\n            },\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#c8d7d4\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#070707\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    }\r\n]",{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":62,"column":17,"nodeType":"151","messageId":"152","endLine":62,"endColumn":27},{"ruleId":"145","replacedBy":"153"},{"ruleId":"147","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":11,"column":13,"nodeType":"157","endLine":11,"endColumn":72},{"ruleId":"149","severity":1,"message":"158","line":10,"column":14,"nodeType":"151","messageId":"152","endLine":10,"endColumn":18},{"ruleId":"149","severity":1,"message":"159","line":10,"column":20,"nodeType":"151","messageId":"152","endLine":10,"endColumn":31},{"ruleId":"160","severity":1,"message":"161","line":32,"column":5,"nodeType":"151","endLine":32,"endColumn":14,"suggestions":"162"},{"ruleId":"149","severity":1,"message":"163","line":101,"column":12,"nodeType":"151","messageId":"152","endLine":101,"endColumn":18},{"ruleId":"155","severity":1,"message":"156","line":35,"column":13,"nodeType":"157","endLine":35,"endColumn":72},{"ruleId":"149","severity":1,"message":"164","line":1,"column":26,"nodeType":"151","messageId":"152","endLine":1,"endColumn":35},{"ruleId":"149","severity":1,"message":"165","line":3,"column":8,"nodeType":"151","messageId":"152","endLine":3,"endColumn":13},{"ruleId":"166","severity":1,"message":"167","line":1,"column":1,"nodeType":"168","endLine":170,"endColumn":2},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'uploadTask' is assigned a value but never used.","Identifier","unusedVar",["169"],["170"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'name' is assigned a value but never used.","'description' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'updateCurrentLesson'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [currentLesson] as a second argument to the useEffect Hook.",["171"],"'isOver' is assigned a value but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},"Add dependencies array: [currentLesson]",{"range":"174","text":"175"},[1166,1166],", [currentLesson]"]