[{"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\index.js":"1","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\reportWebVitals.js":"2","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\App.js":"3","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Trainer\\Trainer.jsx":"4","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Intro\\Intro.jsx":"5","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Programs\\Programs.jsx":"6","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Clients\\Clients.jsx":"7","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\User\\User.jsx":"8","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Schedule\\Schedule.jsx":"9","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\SideBar\\SideBar.jsx":"10","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ProgramContent\\ProgramContent.jsx":"11","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientProfile\\ClientProfile.jsx":"12","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientLessons\\ClientLessons.jsx":"13","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientList\\ClientList.jsx":"14","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\List\\List.jsx":"15","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ModalContainer\\ModalContainer.jsx":"16","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ProgramBar\\ProgramBar.jsx":"17","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\TriggerModalButton\\TriggerModalButton.jsx":"18","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Modal\\Modal.jsx":"19","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\PersonalDetailsForm\\PersonalDetailsForm.jsx":"20","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewClientForm\\NewClientForm.jsx":"21","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewProgramForm\\NewProgramForm.jsx":"22","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\firebase.js":"23","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DeleteModal\\DeleteModal.jsx":"24","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonDetailsForm\\LessonDetailsForm.jsx":"25","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonResources\\LessonResources.jsx":"26","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\AppliedResources\\AppliedResources.jsx":"27","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DNDList\\DNDList.jsx":"28","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Map\\Map.jsx":"29","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\mapStyles.js":"30","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Client\\Client.jsx":"31","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LoginModal\\LoginModal.jsx":"32","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LoginForm\\LoginForm.jsx":"33","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\GridList\\GridList.jsx":"34","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NoteModal\\NoteModal.jsx":"35","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\EmptyPage\\EmptyPage.jsx":"36","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\ClientWelcome\\ClientWelcome.jsx":"37","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Lessons\\Lessons.jsx":"38","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\NextLesson\\NextLesson.jsx":"39"},{"size":479,"mtime":1609516748053,"results":"40","hashOfConfig":"41"},{"size":362,"mtime":499162500000,"results":"42","hashOfConfig":"41"},{"size":2240,"mtime":1612044210565,"results":"43","hashOfConfig":"41"},{"size":16510,"mtime":1612059298127,"results":"44","hashOfConfig":"41"},{"size":1166,"mtime":1611921623103,"results":"45","hashOfConfig":"41"},{"size":12480,"mtime":1611971425414,"results":"46","hashOfConfig":"41"},{"size":5891,"mtime":1612097624776,"results":"47","hashOfConfig":"41"},{"size":4204,"mtime":1611928901201,"results":"48","hashOfConfig":"41"},{"size":168,"mtime":1611712457260,"results":"49","hashOfConfig":"41"},{"size":8445,"mtime":1612044473780,"results":"50","hashOfConfig":"41"},{"size":872,"mtime":1611172017746,"results":"51","hashOfConfig":"41"},{"size":8537,"mtime":1612098441917,"results":"52","hashOfConfig":"41"},{"size":18925,"mtime":1612100099308,"results":"53","hashOfConfig":"41"},{"size":1589,"mtime":1611959536901,"results":"54","hashOfConfig":"41"},{"size":1371,"mtime":1611872490171,"results":"55","hashOfConfig":"41"},{"size":4364,"mtime":1611943402883,"results":"56","hashOfConfig":"41"},{"size":961,"mtime":1609618837760,"results":"57","hashOfConfig":"41"},{"size":830,"mtime":1611921640062,"results":"58","hashOfConfig":"41"},{"size":2781,"mtime":1611971444526,"results":"59","hashOfConfig":"41"},{"size":4507,"mtime":1611767084038,"results":"60","hashOfConfig":"41"},{"size":2549,"mtime":1611792642979,"results":"61","hashOfConfig":"41"},{"size":1366,"mtime":1611971525431,"results":"62","hashOfConfig":"41"},{"size":464,"mtime":1611194250386,"results":"63","hashOfConfig":"41"},{"size":2487,"mtime":1611960259438,"results":"64","hashOfConfig":"41"},{"size":2236,"mtime":1611970003067,"results":"65","hashOfConfig":"41"},{"size":8228,"mtime":1612057283569,"results":"66","hashOfConfig":"41"},{"size":1589,"mtime":1611882658451,"results":"67","hashOfConfig":"41"},{"size":1258,"mtime":1611520289890,"results":"68","hashOfConfig":"41"},{"size":1925,"mtime":1612100869387,"results":"69","hashOfConfig":"41"},{"size":3522,"mtime":1611712457269,"results":"70","hashOfConfig":"41"},{"size":2254,"mtime":1612099915355,"results":"71","hashOfConfig":"41"},{"size":4786,"mtime":1612009741336,"results":"72","hashOfConfig":"41"},{"size":2138,"mtime":1611943304126,"results":"73","hashOfConfig":"41"},{"size":3102,"mtime":1612033861068,"results":"74","hashOfConfig":"41"},{"size":2288,"mtime":1612009721296,"results":"75","hashOfConfig":"41"},{"size":978,"mtime":1611934572594,"results":"76","hashOfConfig":"41"},{"size":5738,"mtime":1612100747130,"results":"77","hashOfConfig":"41"},{"size":3584,"mtime":1612034279560,"results":"78","hashOfConfig":"41"},{"size":4674,"mtime":1612100092620,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"l44x0r",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"82"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"82"},"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\index.js",[],["174","175"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\reportWebVitals.js",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\App.js",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Trainer\\Trainer.jsx",["176"],"import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport \"./Trainer.scss\"\r\n\r\nimport SideBar from '../../components/SideBar/SideBar';\r\nimport Programs from '../Programs/Programs';\r\nimport Clients from '../Clients/Clients';\r\nimport Schedule from '../Schedule/Schedule';\r\nimport User from '../User/User';\r\nimport EmptyPage from '../EmptyPage/EmptyPage';\r\n\r\nclass Trainer extends React.Component{\r\n    \r\n    state={files:null, username:this.props.match.params.username, trainerId: this.props.match.params.trainerId, userProfile:null, programs:[], clients:[], updated:false, empty:false}\r\n\r\n\r\n    componentDidMount(){\r\n        console.log(this.state.trainerId)\r\n        axios.get(`http://localhost:8080/trainer/${this.state.trainerId}`)\r\n        .then(res =>{\r\n            // console.log(res.data)\r\n            this.setState({userProfile:res.data.userProfile, programs:res.data.programs},()=>{\r\n                axios.get(`http://localhost:8080/trainer/${this.state.trainerId}/clients`)\r\n                .then(clientRes=>{\r\n                    this.setState({clients:clientRes.data})\r\n                })\r\n            })\r\n        })\r\n        console.log(\"trainer-componentDidMount\")\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log(\"trainer-didupdate\");\r\n        // console.log(this.props.match.params.username)\r\n        // console.log(this.props.match.params.trainerId)\r\n        if(this.state.updated){\r\n            axios.get(`http://localhost:8080/trainer/${this.state.trainerId}`)\r\n            .then(res =>{\r\n                console.log(res.data)\r\n                this.setState({userProfile:res.data.userProfile, programs:res.data.programs},()=>{\r\n                    axios.get(`http://localhost:8080/trainer/${this.props.match.params.trainerId}/clients`)\r\n                    .then(clientRes=>{\r\n                        this.setState({clients:clientRes.data})\r\n                    })\r\n                })\r\n                this.setState({updated:false})\r\n            })\r\n            .catch(err=>{\r\n                console.log(\"this is where I am breaking\")        \r\n            })\r\n        }\r\n    }\r\n\r\n    /** ================================================ UPDATE TRAINER ================================================*/\r\n    updateUserProfile=(event)=>{\r\n        \r\n        event.preventDefault();\r\n\r\n        const updatedProfile = {\r\n            contact:{\r\n                username:event.target.username.value,\r\n                fname:event.target.fname.value,\r\n                lname:event.target.lname.value,\r\n                password:event.target.password.value,\r\n                email:event.target.email.value,\r\n                phone:event.target.phone.value,\r\n                address:event.target.address.value,\r\n                city: event.target.city.value,\r\n                province: event.target.province.value,\r\n                country: event.target.country.value,\r\n                postal:event.target.postal.value\r\n            },\r\n            social:{facebook:event.target.facebook.value, twitter:event.target.twitter.value, instagram: event.target.instagram.value, linkedIn:event.target.linkedIn.value},\r\n            company:{\r\n                name:event.target.companyName.value,\r\n                description: event.target.companyDescription.value\r\n            }\r\n        }\r\n\r\n        console.log(this.state.userProfile.userId);\r\n        axios.put(`http://localhost:8080/trainer/${this.props.match.params.trainerId}/updateDetails`, updatedProfile)\r\n        .then(res =>{\r\n            this.setState({userProfile:updatedProfile});\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    /** ================================================ ADD PROGRAM ================================================*/\r\n    addProgram=(event)=>{\r\n\r\n        event.preventDefault();\r\n\r\n        const newProgram = {\r\n            name:event.target.programName.value,\r\n            description:event.target.programDescription.value\r\n        }\r\n\r\n        console.log(newProgram);\r\n        \r\n        axios.post(`http://localhost:8080/trainer/${this.props.match.params.trainerId}/addProgram`, newProgram)\r\n        .then(res =>{\r\n            this.setState({programs:[...this.state.programs, res.data]},()=>{\r\n                this.props.history.push(`/trainer/${this.props.match.params.username}/${this.props.match.params.trainerId}/programs/${res.data.id}`)\r\n            })\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n        \r\n    }\r\n\r\n    /** ================================================ UPDATE PROGRAM ================================================*/\r\n    updateProgram=(event)=>{\r\n\r\n        event.preventDefault();\r\n\r\n        const newProgram = {\r\n            name:event.target.programName.value,\r\n            description:event.target.programDescription.value\r\n        }\r\n        console.log(this.props.match);\r\n        \r\n        axios.post(`http://localhost:8080/trainer/${this.props.match.params.trainerId}/${this.props.match.params.programId}/updateProgram`, newProgram)\r\n        .then(res =>{\r\n            this.setState({updated:true})\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n        \r\n    }\r\n\r\n    /** ================================================ DELETE PROGRAM ================================================*/\r\n    deleteProgram = (programId) =>{\r\n\r\n        console.log(programId)\r\n\r\n        axios.delete(`http://localhost:8080/program/${this.props.match.params.programId}`)\r\n        .then(res =>{\r\n            this.setState({updated:true},()=>{\r\n                if((this.state.programs.length - 1) === 0){\r\n                    this.props.history.push(`/trainer/${this.props.match.params.username}/${this.props.match.params.trainerId}/programs`)\r\n                }else{\r\n                    const programLoc = this.state.programs.findIndex(program => program.id === programId);\r\n                    programLoc !== 0 ? \r\n                    this.props.history.push(`/trainer/${this.props.match.params.username}/${this.props.match.params.trainerId}/programs/${this.state.programs[0].id}`)\r\n                    :\r\n                    this.props.history.push(`/trainer/${this.props.match.params.username}/${this.props.match.params.trainerId}/programs/${this.state.programs[1].id}`)\r\n                }\r\n            });//trigger the component did update to pull updated data from db\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        }) \r\n    }\r\n\r\n    /** ================================================ ADD RESOURCE ================================================*/\r\n    addResource=(newResource, programId)=>{\r\n        axios.post(`http://localhost:8080/program/${this.props.match.params.programId}/addResource`, newResource)\r\n        .then(res =>{\r\n            console.log(res.data);\r\n            //make a copy of the programs in state\r\n            const programsCopy = this.state.programs;\r\n            // find the location of the program to update?\r\n            const programLoc = programsCopy.findIndex(program =>program.id ===programId);\r\n            //remove that program from the array\r\n            programsCopy.splice(programLoc,1);\r\n            //add the new program returned by the axios call\r\n            programsCopy.push(res.data);\r\n            console.log(programsCopy);\r\n            //update the state to the modified program array\r\n            this.setState({programs:programsCopy});\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n        \r\n    }\r\n\r\n    /** ================================================ DELETE RESOURCE ================================================*/\r\n    deleteResource = (resourceId) =>{\r\n\r\n        console.log(this.props.match.params.programId)\r\n        console.log(resourceId)\r\n\r\n        axios.delete(`http://localhost:8080/program/${this.props.match.params.programId}/${resourceId}`)\r\n        .then(res =>{\r\n            this.setState({updated:true});//trigger the component did update to pull updated data from db\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        }) \r\n    }\r\n\r\n    /** ================================================ ADD CLIENT ================================================*/\r\n\r\n    addClient=(event)=>{\r\n\r\n        event.preventDefault();\r\n\r\n        const options = event.target.programs.options;\r\n        let opt=\"\";\r\n\r\n        let programs = [];\r\n        for(var i=0; i<options.length; i++){\r\n            opt = options[i];\r\n            const program = this.state.programs.find(program=> program.id===opt.value);\r\n            opt.selected && programs.push(program);\r\n        }\r\n\r\n        const newClient = {\r\n            trainerId:\"\",\r\n            username:event.target.username.value,\r\n            password:event.target.password.value,\r\n            profile:\"client\",\r\n            status:\"active\",\r\n            userProfile:{\r\n                fname:event.target.fname.value,\r\n                lname:event.target.lname.value,\r\n                email:event.target.email.value,\r\n                phone:event.target.phone.value,\r\n                address:event.target.address.value,\r\n                city: event.target.city.value,\r\n                province: event.target.province.value,\r\n                country: event.target.country.value\r\n            },\r\n            programs:programs\r\n        }\r\n\r\n        axios.post(`http://localhost:8080/trainer/${this.props.match.params.trainerId}/addClient`, newClient)\r\n        .then(res =>{\r\n            console.log(res.data)\r\n            this.setState({clients:[...this.state.clients, res.data]},()=>{\r\n                this.props.history.push(`/trainer/${this.props.match.params.username}/${this.props.match.params.trainerId}/clients/${res.data.userId}/profile`)\r\n            })\r\n            \r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n\r\n    }\r\n\r\n    /** ================================================ DELETE CLIENT ================================================*/\r\n    deleteClient=(clientId)=>{\r\n\r\n        console.log(this.state.clients)\r\n        \r\n        axios.delete(`http://localhost:8080/client/${clientId}`)\r\n        .then(res =>{\r\n            this.setState({updated:true},()=>{\r\n                if((this.state.clients.length - 1) === 0){\r\n                    this.props.history.push(`/trainer/${this.props.match.params.username}/${this.props.match.params.trainerId}/clients`)\r\n                }else{\r\n                    const programLoc = this.state.clients.findIndex(client => client.userId === clientId);\r\n                    programLoc !== 0 ? \r\n                    this.props.history.push(`/trainer/${this.props.match.params.username}/${this.props.match.params.trainerId}/clients/${this.state.clients[0].userId}/profile`)\r\n                    :\r\n                    this.props.history.push(`/trainer/${this.props.match.params.username}/${this.props.match.params.trainerId}/clients/${this.state.clients[1].userId}/profile`)\r\n                }\r\n            });\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })     \r\n    }\r\n\r\n    /** ================================================ UPDATE CLIENT ================================================*/\r\n    updateClient=(event)=>{\r\n        event.preventDefault();\r\n\r\n        const updatedClient = {\r\n            fname:event.target.fname.value,\r\n            lname:event.target.lname.value,\r\n            email:event.target.email.value,\r\n            phone:event.target.phone.value,\r\n            address:event.target.address.value,\r\n            city: event.target.city.value,\r\n            province: event.target.province.value,\r\n            country: event.target.country.value,\r\n            postal:event.target.postal.value\r\n        }\r\n\r\n        axios.put(`http://localhost:8080/client/${this.props.match.params.clientId}/updateDetails`, updatedClient)\r\n        .then(res =>{\r\n            console.log(res);\r\n            //pulls new data from db on component did update\r\n            this.setState({updated:true})\r\n            // this.setState()\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    \r\n    /** ================================================ ADD NOTE ================================================*/\r\n    addNote=(event,currentClient)=>{\r\n        event.preventDefault();\r\n        const newNote = {\r\n            id:'5',\r\n            note:event.target.newNote.value\r\n        }\r\n\r\n        let clientsCopy = [...this.state.clients];\r\n        const clientIndex = clientsCopy.findIndex(client => client.id===currentClient.id);\r\n        clientsCopy[clientIndex].notes.push(newNote);\r\n            \r\n        // console.log(...this.state.clients[clientIndex].notes);\r\n        this.setState({clients:clientsCopy})\r\n\r\n        event.target.newNote.value=\"\";\r\n    }\r\n\r\n    updateTrainer=()=>{\r\n        this.setState({updated:true})\r\n    }\r\n  \r\n   \r\n    render(){\r\n \r\n        const {match} = this.props;\r\n        // console.log(this.state.programs)\r\n        // console.log(this.state.clients)\r\n        // console.log(this.state.userProfile)\r\n        // console.log(this.state.username);\r\n        // console.log(this.state.trainerId)\r\n\r\n        return (\r\n            <>\r\n                {this.state.userProfile &&  \r\n                    <SideBar\r\n                        clients={this.state.clients} \r\n                        programs={this.state.programs} \r\n                        match={match}\r\n                        trainerId={this.state.trainerId}\r\n                        trainerName={this.state.username}\r\n                    />}\r\n                {(this.state.userProfile && match.path===\"/trainer/:username/:trainerId/programs\") && \r\n                    <EmptyPage \r\n                        match={match}\r\n                        list={this.state.programs} \r\n                        onSubmit={this.addProgram}\r\n                        programs={this.state.programs}\r\n                    />}\r\n\r\n                {(this.state.userProfile && match.path===\"/trainer/:username/:trainerId/clients\") && \r\n                    <EmptyPage \r\n                        match={match}\r\n                        list={this.state.clients}\r\n                        onSubmit={this.addClient}\r\n                        programs={this.state.programs}\r\n                    />}\r\n                \r\n                {(this.state.userProfile && match.path===\"/trainer/:username/:trainerId/programs/:programId\") && \r\n                    <Programs \r\n                        programs={this.state.programs} \r\n                        currentProgramId={match.params.programId} \r\n                        match={match}\r\n                        addProgram={this.addProgram}\r\n                        deleteProgram={this.deleteProgram}\r\n                        addResource={this.addResource} \r\n                        deleteResource={this.deleteResource}  \r\n                        updateProgram={this.updateProgram} \r\n                    />}\r\n                {(this.state.clients && this.state.clients.length !== 0 && match.path===\"/trainer/:username/:trainerId/clients/:clientId/profile\") && \r\n                    <Clients {...this.props} \r\n                        programs={this.state.programs} \r\n                        clients={this.state.clients} \r\n                        addNote={this.addNote}\r\n                        addClient={this.addClient}\r\n                        updateClient={this.updateClient}\r\n                        deleteClient={this.deleteClient}\r\n                        updateTrainer={this.updateTrainer}\r\n                    />}\r\n                {(this.state.clients  && this.state.clients.length !== 0 && match.path===\"/trainer/:username/:trainerId/clients/:clientId/lessons\") && \r\n                    <Clients {...this.props} \r\n                        programs={this.state.programs} \r\n                        clients={this.state.clients} \r\n                        addClient={this.addClient}\r\n                        deleteClient={this.deleteClient}\r\n                        />}\r\n                {(this.state.userProfile && match.path===\"/schedule\") && <Schedule />}\r\n                {(this.state.userProfile && match.path===\"/trainer/:username/:trainerId\") && <User user={this.state.userProfile} updateUserProfile={this.updateUserProfile}/>}\r\n                {/* {(this.state.userProfile && match.path===\"/trainer/:username/:trainerId\") && <h1>hello</h1>} */}\r\n                \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Trainer\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Intro\\Intro.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Programs\\Programs.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Clients\\Clients.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\User\\User.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Schedule\\Schedule.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\SideBar\\SideBar.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ProgramContent\\ProgramContent.jsx",[],["177","178"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientProfile\\ClientProfile.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientLessons\\ClientLessons.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientList\\ClientList.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\List\\List.jsx",["179"],"import React from 'react';\r\n\r\nimport './List.scss';\r\n\r\nimport ModalContainer from '../../components/ModalContainer/ModalContainer';\r\n\r\n\r\nfunction List({id, content, link, description, deleteBtn, deleteFunction, list, deleteType}) {\r\n    return (\r\n        <div className=\"list__item\">\r\n            <a href={link} className=\"list__item-name\" target=\"_blank\">{content}</a>\r\n            <div className=\"list__right\" >\r\n                {description && <p className=\"list__right-type\">{description}</p>}\r\n                \r\n                {/* conditionally renders a delete button depending on the deleteType variable - won't show for current lesson - don't want to allow deletion */}\r\n                {(deleteType !== \"modal\" && deleteBtn) && <button id={id} onClick={(event)=>deleteFunction(event, list)} className=\"list__right-delete\"> x </button>}\r\n                \r\n                {deleteType===\"modal\" &&\r\n                    <ModalContainer \r\n                        modalType = \"delete\" \r\n                        modalName = \"delete\" \r\n                        buttonText=\"x\" \r\n                        onSubmit={deleteFunction}\r\n                        deleteString= {content}\r\n                        deleteId={id}\r\n                        buttonType=\"x\"\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List\r\n",["180","181"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ModalContainer\\ModalContainer.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ProgramBar\\ProgramBar.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\TriggerModalButton\\TriggerModalButton.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Modal\\Modal.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\PersonalDetailsForm\\PersonalDetailsForm.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewClientForm\\NewClientForm.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewProgramForm\\NewProgramForm.jsx",["182"],"import React from 'react'\r\nimport \"./NewProgramForm.scss\";\r\n\r\nfunction NewProgramForm({onSubmit, closeModal, information}) {\r\n    \r\n    if (!information){\r\n        var information = {name:\"\", description:\"\"}\r\n    }\r\n\r\n    const {name, description} = information;\r\n\r\n    const handleSubmit=(event)=>{\r\n        onSubmit(event);\r\n        closeModal();\r\n    }\r\n    return (\r\n        <form id=\"modal-form\" className=\"modal-form\" onSubmit={handleSubmit} >\r\n            <div className=\"new-program__input\">\r\n                <input className=\"modal-form__input new-program__text\" id=\"programName\" name=\"programName\" type=\"text\" defaultValue={name} placeholder=\"Enter Program Name\" required></input>\r\n                <textarea className=\"modal-form__input new-program__textarea\" form=\"modal-form\" wrap=\"hard\" name=\"programDescription\" id=\"programDescription\" defaultValue={description} placeholder=\"Enter Program Description\" rows=\"10\" cols=\"150\"></textarea>\r\n            </div>\r\n            \r\n            <div className=\"modal-form__submit\">\r\n                <button className=\"modal-form__submit-cancel\" type=\"button\" onClick={closeModal}>Cancel</button>\r\n                <button className=\"modal-form__submit-button\" id=\"submit\" type=\"submit\" form=\"modal-form\">Submit</button>\r\n            </div>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewProgramForm\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\firebase.js",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DeleteModal\\DeleteModal.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonDetailsForm\\LessonDetailsForm.jsx",["183","184"],"import React from 'react'\r\nimport './LessonDetailsForm.scss';\r\n\r\nfunction LessonDetailsForm({onSubmit, closeModal, lesson}) {\r\n    \r\n    if (!lesson){\r\n        var location = {name:\"\", address:\"\", city:\"\", province:\"\", country:\"\"}\r\n        var lesson = {date:\"\", time:\"\", location}\r\n    }\r\n    var {date, time, location} = lesson;\r\n    var {name,address, city, province, country} = location;   \r\n\r\n    const handleSubmit=(event)=>{\r\n        onSubmit(event);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <form id=\"modal-form\" className=\"modal-form\" onSubmit={handleSubmit} >\r\n            <div>\r\n                <input className=\"modal-form__input\" id=\"lessonName\" name=\"lessonName\" type=\"text\" placeholder=\"Lesson Name\" defaultValue={lesson.name} required></input>\r\n            </div>\r\n            <div>\r\n                <input className=\"modal-form__input\" id=\"date\" name=\"date\" type=\"date\"  defaultValue={date}></input>\r\n                <input className=\"modal-form__input\" id=\"time\" name=\"time\" type=\"time\"  defaultValue={time}></input>\r\n                \r\n            </div>\r\n            <div>\r\n                <input className=\"modal-form__input\" id=\"locationName\" name=\"locationName\" type=\"text\" placeholder=\"Location\" defaultValue={name}></input>\r\n                <input className=\"modal-form__input\" id=\"address\" name=\"address\" type=\"text\" placeholder=\"Address\" defaultValue={address} ></input>\r\n                <input className=\"modal-form__input\" id=\"city\" name=\"city\" type=\"text\" placeholder=\"City\" defaultValue={city}></input>\r\n                <input className=\"modal-form__input\" id=\"province\" name=\"province\" type=\"text\" placeholder=\"Province\" defaultValue={province}></input>\r\n                <input className=\"modal-form__input\" id=\"country\" name=\"country\" type=\"text\" placeholder=\"Country\" defaultValue={country}></input>\r\n            </div>\r\n            <div className=\"modal-form__submit\">\r\n                <button className=\"modal-form__submit-cancel\" type=\"button\" onClick={closeModal}>Cancel</button>\r\n                <button className=\"modal-form__submit-button\" id=\"submit\" type=\"submit\" form=\"modal-form\">Submit</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LessonDetailsForm","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonResources\\LessonResources.jsx",["185","186"],"import React, {useState, useEffect}  from 'react';\r\nimport {useDrop} from 'react-dnd';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport './LessonResources.scss'\r\n\r\nimport DNDList from '../../components/DNDList/DNDList';\r\nimport AppliedResources from '../../components/AppliedResources/AppliedResources';\r\n\r\n/**\r\n * \r\n * @param {Object} programs - all the trainer's programs\r\n * @param {Object} currentLesson - lesson currently rendered\r\n * @param {Object} currentClient - client currently rendered\r\n */\r\n\r\nfunction LessonResources({programs, currentLesson, currentClient, match}) {\r\n\r\n    console.log(programs);\r\n    const ItemTypes = {\r\n        CARD:'card',\r\n    };\r\n\r\n    const [allResources, setAllResources] = useState(programs);\r\n    \r\n    //resources that are currently being displayed - change based on program chosen\r\n    const[displayResources, setResourceList] = useState(programs.length!==0 ? programs[0].resources : []);\r\n\r\n    //current lesson being rendered - changed based on drag and drop from available resources \r\n    const[currentLessonResources, updateCurrentLesson] = useState(currentLesson);\r\n   \r\n     //update the resources of the current lesson when state changes\r\n    useEffect(() => {\r\n        updateCurrentLesson(currentLesson);\r\n        console.log(displayResources)\r\n    },[currentLesson]);\r\n\r\n    \r\n\r\n    // update the resources being displayed when a program is chosen\r\n    const updateDisplayed = (program)=>{\r\n\r\n        if (document.querySelector(\".active-program\")){\r\n            const previouslyActiveLink = document.querySelector(\".active-program\");\r\n            previouslyActiveLink.classList.remove(\"active-program\");\r\n            console.log(previouslyActiveLink);\r\n            \r\n            const activeLinkElement = document.getElementById(program.id);\r\n            activeLinkElement.classList.add(\"active-program\");\r\n            console.log(activeLinkElement);\r\n        }\r\n        setResourceList(program.resources);\r\n    }\r\n\r\n    //used to remove a resource from the available resources and add it to the lesson resources\r\n    const markAsDone = id => {\r\n\r\n        const sameBox = currentLessonResources.resources.find(resource=> resource.id===id);\r\n        // const sameDisplayBox = displayResources.find(resource=> resource.id===id);\r\n\r\n        if (!sameBox){\r\n            //find the resource to update and set the applied status to true        \r\n            const displays = [...displayResources];\r\n            displays.find(resource=> resource.id === id).applied=true;\r\n                \r\n            const lessonObject = {...currentLessonResources};\r\n            \r\n            // take the id from the resource that was moved, find the data associated with it and push it to the resources of the current lesson\r\n\r\n            console.log(displays.find(resource=> resource.id === id))\r\n\r\n            lessonObject.resources.push(displays.find(resource=> resource.id === id));\r\n\r\n            //update the displaye resources and the lesson resources that are rendered\r\n            setResourceList(displays);\r\n            updateCurrentLesson(lessonObject);\r\n\r\n            //create an array of the ids associated with the updated resources to push to the db\r\n            const updatedResources = lessonObject.resources.map(resource => resource)\r\n            console.log(updatedResources);\r\n\r\n            //update the db with the new lesson resources\r\n            axios.put(`http://localhost:8080/client/${currentClient.userId}/${currentLessonResources.id}/updateResource`, updatedResources)\r\n            .then(res =>{\r\n                console.log(res);\r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const removeResource=(id)=>{\r\n        \r\n        const alreadyDisplayed = displayResources.find(resource=> resource.id===id);\r\n        const sameBox = !!alreadyDisplayed && alreadyDisplayed.applied===false;\r\n\r\n        console.log(alreadyDisplayed);\r\n\r\n        if(!sameBox){\r\n            //find the resource to update and set the applied status to true        \r\n            const available = [...allResources];\r\n            available.forEach(program=>{\r\n                const foundResource = program.resources.find(resource=> resource.id === id)\r\n                if(foundResource){ \r\n                    foundResource.applied=false;\r\n                }\r\n            });\r\n\r\n            const lessonObject = {...currentLessonResources};\r\n            // take the id from the resource that was moved, find the data associated with it and push it to the resources of the current lesson\r\n            const index = lessonObject.resources.findIndex(resource => resource.id === id);\r\n            lessonObject.resources.splice(index,1);\r\n\r\n            //update the display resources and the lesson resources that are rendered\r\n            setAllResources(available);\r\n            updateCurrentLesson(lessonObject);\r\n\r\n            //create an array of the ids associated with the updated resources to push to the db\r\n            const updatedResources = lessonObject.resources.map(resource => resource)\r\n            console.log(updatedResources);\r\n\r\n            // update the db with the new lesson resources\r\n            axios.put(`http://localhost:8080/client/${currentClient.userId}/${currentLessonResources.id}/updateResource`, updatedResources)\r\n            .then(res =>{\r\n                console.log(res);\r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n            })\r\n        }\r\n    }\r\n\r\n    //setup for drop component from lessons ---> available\r\n    const[{isOver}, drop] = useDrop({\r\n        accept: ItemTypes.CARD, //required - tells drop zone it will only accept card components\r\n        drop: (item, monitor)=> removeResource(item.id),\r\n        // collect: monitor => ({\r\n        //     isOver: !!monitor.isOver(),\r\n        // }),\r\n    });\r\n\r\n     if(programs.length===0){\r\n        return(                                     \r\n            // <div onClick={this.addNewLesson} className=\"empty-container\">\r\n            <div className=\"empty-container empty-lesson__resources\">\r\n                {/* <img className=\"empty-container__icon\" src=\"/icons/add-icon.svg\" alt=\"add icon\"></img> */}\r\n                <h2>You Don't have any Programs Yet!</h2>\r\n                <Link to={`/trainer/${match.params.username}/${match.params.trainerId}/programs`} className=\"empty-lesson__resources-link\">Click Here to Add Some Programs and Resources</Link>\r\n            </div>\r\n        )\r\n    \r\n    }else{\r\n\r\n        return (\r\n            <div className=\"current-lesson__resources\">  \r\n                <div className=\"current-lesson__available\">\r\n                    {/* <p>Available Resources</p> */}\r\n                    <div className=\"current-lesson__available-content\">\r\n                        <ul className=\"current-lesson__available-programs\"> \r\n                            {programs.map((program,i) => \r\n                                <Link key={program.id} to={`/trainer/${match.params.username}/${match.params.trainerId}/clients/${currentClient.userId}/lessons`}>\r\n                                    <li id={program.id} onClick={()=>updateDisplayed(program)} \r\n                                        className={i===0 ? \"current-lesson__available-programs-item active-program\" : \"current-lesson__available-programs-item\"}>{program.name}\r\n                                    </li>\r\n                                </Link>)}\r\n                        </ul>\r\n                            <div ref={drop} className=\"list current-lesson__available-resources\">\r\n                                {displayResources.filter(resource => resource.applied === false)\r\n                                    .map(resource=> <DNDList key={resource.id} content={resource.name} link={resource.link} id={resource.id}/>)}\r\n                            </div>                \r\n                    </div>\r\n                </div>\r\n                {/* applied resources component set up as a drop component */}\r\n                <AppliedResources currentLesson={currentLessonResources} markAsDone={markAsDone}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LessonResources\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\AppliedResources\\AppliedResources.jsx",[],["187","188"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DNDList\\DNDList.jsx",["189"],"import React from 'react';\r\nimport { useDrag } from 'react-dnd';\r\n\r\nimport './DNDList.scss';\r\n\r\nconst ItemTypes = {\r\n    CARD:'card',\r\n};\r\n\r\n/**\r\n * \r\n * @param {string} id - resource id \r\n * @param {string} content - text to render\r\n * @param {string} link - url for text to link to\r\n * @param {string} description- type of resource if it is a resource list\r\n * \r\n */\r\nfunction DNDList({id, content, link, description}) {\r\n\r\n    // argument1 = props from the monitor\r\n    const[{isDragging}, drag] = useDrag({\r\n        item:{\r\n            type:ItemTypes.CARD,\r\n            //type is required - can pass anything else you want with it - here i want the id\r\n            id: id,\r\n        },\r\n        //talks to the monitor and sets the isDragging prop to true when is dragging\r\n        collect:monitor=>({\r\n            isDragging:!!monitor.isDragging(),\r\n        }),\r\n    })\r\n\r\n    return (\r\n        <div ref={drag} className=\"list__item\" opacity={isDragging ? '1' : '1'}>\r\n            <a href={link} className=\"list__item-name\" target=\"_blank\">{content}</a>\r\n            <div className=\"list__right\" >\r\n                {description && <p className=\"list__right-type\">{description}</p>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DNDList\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Map\\Map.jsx",["190"],"import React, {useState, useCallback} from 'react';\r\nimport {GoogleMap, Marker, InfoWindow, useJsApiLoader} from '@react-google-maps/api';\r\n\r\nimport mapStyles from '../../mapStyles';\r\n\r\nconst Map = ({mapLocation, containerSize}) => {\r\n \r\n    console.log(mapLocation);\r\n    const [showInfo, setShowInfo]=useState(false);\r\n    const [map, setMap] = useState(null);\r\n\r\n    const {isLoaded,loadError} = useJsApiLoader({\r\n        id:'google-map-script',\r\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_KEY\r\n    })\r\n\r\n    const onLoad = useCallback(map=>{\r\n        const bounds = new window.google.maps.LatLngBounds();\r\n        map.fitBounds(bounds);\r\n        setMap(map);\r\n    },[]);\r\n\r\n    const onUnmount = useCallback(map=>{\r\n        setMap(null)\r\n    },[]);\r\n\r\n    if (loadError) {\r\n        return <div>Map cannot be loaded right now, sorry.</div>\r\n      }\r\n\r\n    return isLoaded ? (\r\n        <GoogleMap \r\n            // defaultZoom={10}\r\n            center={mapLocation}\r\n            zoom={10} \r\n            onLoad={onLoad}\r\n            onUnmount={onUnmount}\r\n            options={{styles:mapStyles, zoomControl:false, mapTypeControl:false}}\r\n            mapContainerStyle={containerSize}\r\n        >\r\n\r\n        <Marker \r\n            position={mapLocation} \r\n            onClick={()=>{setShowInfo(true)}}\r\n            // icon={{\r\n            //     url:\"/icons/map-marker.svg\",\r\n            //     scaledSize: new window.google.maps.Size(20,40)\r\n            // }}\r\n        /> \r\n\r\n        {showInfo &&\r\n            <InfoWindow \r\n                position={{lat:mapLocation.lat, lng:mapLocation.lng}}\r\n                onCloseClick={()=>{setShowInfo(false)}}\r\n                >\r\n                <div>\r\n                    <h2>Lesson details</h2>\r\n                    <p> Lesson Name</p>\r\n                </div>\r\n            </InfoWindow>\r\n        }\r\n        </GoogleMap>\r\n    ):<></>\r\n}\r\n\r\nexport default React.memo(Map)\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\mapStyles.js",["191"],"export default [\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"weight\": \"2.00\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#9c9c9c\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels.text\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#f2f2f2\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape.man_made\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": -100\r\n            },\r\n            {\r\n                \"lightness\": 45\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#eeeeee\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#7b7b7b\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"simplified\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"labels.icon\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#46bcec\"\r\n            },\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#c8d7d4\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#070707\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    }\r\n]","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Client\\Client.jsx",["192"],"import React, {useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport SideBar from '../../components/SideBar/SideBar';\r\nimport ClientWelcome from '../ClientWelcome/ClientWelcome';\r\nimport Lessons from '../Lessons/Lessons';\r\nimport NextLesson from '../NextLesson/NextLesson';\r\n\r\n\r\nimport \"./Client.scss\";\r\n\r\nfunction Client ({match}) {\r\n    \r\n    const [client, setClient] = useState(null)\r\n    const [trainer, setTrainer] = useState(null)\r\n    const [nextLesson, setNextLesson] = useState(null);\r\n    const [pastLessons, setPastLessons] = useState(null);\r\n    \r\n    useEffect(()=>{\r\n        axios.get(`http://localhost:8080/client/${match.params.username}/${match.params.clientId}`)\r\n        .then(res =>{\r\n           \r\n            setClient(res.data)\r\n            \r\n            axios.get(`http://localhost:8080/trainer/${res.data.trainerId}`)\r\n            .then(trainerRes=>{\r\n                setTrainer(trainerRes.data.userProfile)\r\n            })\r\n\r\n            setNextLesson(res.data.lessons.find(lesson=> lesson.current===true));\r\n            setPastLessons(res.data.lessons.filter(lesson=> lesson.current!==true));\r\n        })\r\n    },[]);\r\n\r\n    trainer && console.log(client);\r\n    trainer && console.log(nextLesson);\r\n    trainer && console.log(pastLessons);\r\n    trainer && console.log(trainer);\r\n    return (\r\n        <div>\r\n            <SideBar\r\n                nextLesson={nextLesson}\r\n                pastLessons={pastLessons}\r\n                client={client} \r\n                match={match}\r\n            />\r\n\r\n            {(trainer && match.path===\"/client/:username/:clientId\") && \r\n                <ClientWelcome\r\n                    client={client}\r\n                    trainer={trainer}    \r\n                />\r\n            }\r\n\r\n            {(client && nextLesson && match.path===\"/client/:username/:clientId/lessons/:lessonId/nextLesson\") && \r\n                <NextLesson\r\n                    nextLesson={nextLesson}\r\n                />\r\n            }\r\n            {(client && pastLessons && match.path===\"/client/:username/:clientId/lessons/:lessonId\") && \r\n                <Lessons\r\n                    pastLessons={pastLessons}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Client\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LoginModal\\LoginModal.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LoginForm\\LoginForm.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\GridList\\GridList.jsx",["193"],"import React from 'react';\r\n\r\nimport './GridList.scss';\r\n\r\nimport ModalContainer from '../../components/ModalContainer/ModalContainer';\r\n\r\n\r\nfunction GridList({id, content, modalName, link, deleteBtn, deleteFunction, deleteString, list, deleteType, resourceType, onClick, updateStatus, slider}) {\r\n\r\n    let resourceURL=\"\"\r\n    if (resourceType === \"pdf\"){\r\n        resourceURL = \"/icons/pdf.png\"\r\n    }else if (resourceType === \"video\"){\r\n        resourceURL = \"/icons/video.png\"\r\n    }else if (resourceType === \"doc\"){\r\n        resourceURL = \"/icons/doc-icon.png\"\r\n    }else if (resourceType === \"url\"){\r\n        resourceURL = \"/icons/website-icon.png\"\r\n    }else if (resourceType === \"image\"){\r\n        resourceURL = \"/icons/image.svg\"\r\n    }\r\n\r\n    return (\r\n            <div className={(deleteBtn || !slider) ? \"gridlist__item\" : \"gridlist__item next-lesson__resource\"}>\r\n                {resourceType ?\r\n                    <a className=\"gridlist__item-link\" href={link} target=\"_blank\">\r\n                        <p className=\"gridlist__item-name\">{content}</p>\r\n                    </a>\r\n                    :\r\n                    <div>\r\n                        <p onClick={()=>onClick(id)} className=\"gridlist__item-multi gridlist__item-title\">{content.name ===\"\" ? \"Add Title\" : content.name}</p>\r\n                        <p className=\"gridlist__item-multi\">{content.date}</p>\r\n                        <p className=\"gridlist__item-multi\">{content.time}</p>\r\n                    </div>\r\n                }\r\n\r\n                \r\n                <div className=\"gridlist__bottom\">\r\n                    {(deleteType !== \"modal\" && deleteBtn) && <button id={id} onClick={(event)=>deleteFunction(event, list)} className=\"gridlist__right-delete\"> x </button>}\r\n\r\n                    {(resourceType || !slider) ? \r\n                        resourceType && <img className=\"gridlist__item-image\" src={resourceURL} alt=\"icon\"/>\r\n                        :\r\n                        <div className=\"current-lesson__top-status\">\r\n                            <input onClick={updateStatus} className=\"current-lesson__top-status-check\" type=\"checkbox\" id=\"current\"/>\r\n                            <div className={content.current ? \"slidinggroove slidinggroove-on\" : \"slidinggroove\"}></div>\r\n                            <label className=\"current-lesson__top-status\" htmlFor=\"current\" name=\"current\"><p className=\"current-lesson__top-status-label\"> {content.current && \"Current\"}</p></label>\r\n                        </div>\r\n                    }\r\n                    {deleteType===\"modal\" &&\r\n                        <ModalContainer \r\n                            modalType = \"delete\" \r\n                            modalName = {modalName}\r\n                            buttonType=\"x\" \r\n                            buttonText=\"x\" \r\n                            onSubmit={deleteFunction}\r\n                            deleteString= {deleteString}\r\n                            deleteId={id}\r\n                        />\r\n                    }\r\n                 </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default GridList","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NoteModal\\NoteModal.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\EmptyPage\\EmptyPage.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\ClientWelcome\\ClientWelcome.jsx",["194"],"import React, {useState,useEffect}from 'react';\r\nimport axios from 'axios';\r\n\r\nimport './ClientWelcome.scss';\r\n\r\nimport Map from '../../components/Map/Map';\r\n\r\nfunction ClientWelcome({client, trainer}) {\r\n\r\n    const {lname,fname,email,phone,address,city,province,country,postal} = trainer.contact;\r\n    const {facebook, twitter, instagram, linkedIn} = trainer.social;\r\n    const {name, description, logo} = trainer.company;\r\n\r\n    const [mapLocation, setMapLocation]=useState(null);\r\n\r\n    useEffect(()=>{\r\n        axios.get(`http://www.mapquestapi.com/geocoding/v1/address?key=amHyO923YUE511fynEWxbf7Gf5S45VRP&street=${address}&city=${city}&state=${province}`)\r\n        .then(res=>{\r\n            // console.log(res.data.results[0].locations[0].displayLatLng);\r\n            setMapLocation(res.data.results[0].locations[0].displayLatLng);\r\n\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"welcome\" style={{backgroundImage: \"url('/images/main2.jfif')\"}}>\r\n            <div className=\"welcome__greeting\">\r\n                <h1 className=\"welcome__greeting-welcome\">WELCOME</h1>\r\n                <h1 className=\"welcome__greeting-client\">{`${client.userProfile.fname}!`} </h1>\r\n            </div>\r\n            <div className=\"component welcome__section\">\r\n                <div className=\"component-title welcome__section-title\">\r\n                    <p>Company</p>\r\n                </div> \r\n                <div className=\"welcome__section-body welcome__section-company \">\r\n                        <div className=\"welcome__section-company-logo\"><img src={logo} alt =\"company logo\" className=\"user-profile__description-logo\"/></div>\r\n                        <div className=\"welcome__section-company-text\">\r\n                            <p className=\"welcome__section-company-name\">{name}</p>\r\n                            <p className=\"welcome__section-company-description\">{description}</p>\r\n                        </div>\r\n                </div>\r\n            </div>    \r\n\r\n            <div className=\"component welcome__section \">    \r\n                    <div className=\"component-title welcome__section-title\">\r\n                        <p>Programs</p>\r\n                    </div>\r\n                    <div className=\"welcome__section-body welcome__programs\">\r\n                        {client.programs.map(program=>\r\n                            <div key={program.id}>\r\n                                <p className=\"welcome__programs-title\">{program.name}</p>\r\n                                <p className=\"welcome__programs-text\">{program.description}</p>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n            </div>  \r\n\r\n            <div className=\"component welcome__section\">\r\n                <div className=\"component-title welcome__section-title\">\r\n                    <p>Trainer</p>\r\n                </div>  \r\n                <div className=\"welcome__section-body\">\r\n                      <div className=\"user-profile__details\">\r\n                        <div className=\"user-profile__contact\">\r\n                            <p className=\"user-label user-profile__contact-title\"> GET IN TOUCH </p> \r\n                            <div className=\"user-profile-item\">\r\n                                <img className=\"contact-icon\" src=\"/icons/user-profile-icon.svg\" alt=\"trainer\"/><p>{`${fname} ${lname}`}</p>\r\n                            </div>\r\n                            <div className=\"user-profile-item\">\r\n                                <img className=\"contact-icon\" src=\"/icons/email-icon.svg\" alt=\"email\"/><a className=\"contact-link\" href={`mailto:${email}`}> {email}</a>\r\n                            </div>\r\n                            <div className=\"user-profile-item\">\r\n                                <img className=\"contact-icon\" src=\"/icons/phone-icon.svg\" alt=\"phone number\"/><p>{phone}</p>\r\n                            </div>\r\n\r\n                            <div className=\"user-profile__social\">\r\n                                <a href={facebook}><img className=\"contact-icon\" src=\"/icons/facebook-icon.svg\" alt=\"facebook\"/></a>\r\n                                <a href={twitter}><img className=\"contact-icon\" src=\"/icons/twitter-icon.svg\" alt=\"twitter\"/></a>\r\n                                <a href={instagram}><img className=\"contact-icon\" src=\"/icons/instagram-icon.svg\" alt=\"instagram\"/></a>\r\n                                <a href={linkedIn}><img className=\"contact-icon\" src=\"/icons/linkedin-icon.svg\" alt=\"linked-in\"/></a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user-profile__address welcome__trainer-address\">\r\n                                <div>\r\n                                    <p className=\"user-label user-profile__address-title\">ADDRESS</p>\r\n                                    <p className=\"user-profile__address-item\">{address}</p>\r\n                                    <p className=\"user-profile__address-item\">{`${city}, ${province}, ${country}`}</p>\r\n                                    <p className=\"user-profile__address-item\">{postal}</p>\r\n                                </div>\r\n                                <div className = \"client__contact-map\">\r\n                                    <Map\r\n                                        mapLocation={mapLocation}\r\n                                        containerSize={{width:\"346px\", height:\"211px\"}}\r\n                                    />\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientWelcome\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Lessons\\Lessons.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\NextLesson\\NextLesson.jsx",["195"],"import React, {useState,useEffect}from 'react';\r\nimport axios from 'axios';\r\n\r\nimport \"./NextLesson.scss\";\r\n\r\nimport Map from '../../components/Map/Map';\r\nimport GridList from '../../components/GridList/GridList';\r\n\r\nfunction NextLesson({nextLesson}) {\r\n\r\n    const {address, city, province} = nextLesson.location\r\n\r\n    const [mapLocation, setMapLocation]=useState(null);\r\n\r\n    useEffect(()=>{\r\n        axios.get(`http://www.mapquestapi.com/geocoding/v1/address?key=amHyO923YUE511fynEWxbf7Gf5S45VRP&street=${address}&city=${city}&state=${province}`)\r\n        .then(res=>{\r\n            // console.log(res.data.results[0].locations[0].displayLatLng);\r\n            setMapLocation(res.data.results[0].locations[0].displayLatLng);\r\n\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    },[])\r\n\r\n    return (\r\n    <div className=\"next-lesson\" style={{backgroundImage: \"url('/images/main2.jfif')\"}}>\r\n        <h1 className=\"next-lesson__title\">NEXT LESSON</h1>\r\n        <div className=\"component next-lesson__container\">\r\n            <h2 className=\"component-title\">{nextLesson.name}</h2>\r\n                <div className = \"current-lesson__top next-lesson__top\">\r\n                    {/* shows the details for the lesson */}\r\n                    <div className=\"next-lesson__top-left\">\r\n                    <h2 className=\"section-title-resources next-lesson__subtitle\">Details</h2>\r\n                        <div className=\"current-lesson__top-details next-lesson__top-details\">\r\n                            <div className=\"current-lesson__top-details-text\">\r\n                                <div className=\"current-lesson__top-details-where\">\r\n                                    <p className=\"current-lesson__top-details-title\">Where</p>\r\n                                    <p className=\"current-lesson__top-details-item next-lesson__location\">{nextLesson.location.name}</p>\r\n                                    <p className=\"current-lesson__top-details-item\">{`${nextLesson.location.address}, ${nextLesson.location.city}`}</p>\r\n                                </div>\r\n                                <div className=\"current-lesson__top-details-when\">\r\n                                    <p className=\"current-lesson__top-details-title\">When</p>\r\n                                    <p className=\"current-lesson__top-details-item\">{`Date: ${nextLesson.date}`}</p>\r\n                                    <p className=\"current-lesson__top-details-item\">{`Time: ${nextLesson.time}`}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    \r\n                        <div className = \"client__contact-map\">\r\n                            <Map\r\n                                mapLocation={mapLocation}\r\n                                containerSize={{width:\"346px\", height:\"282px\"}}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"next-lesson__resources\">\r\n                        <h2 className=\"section-title-resources next-lesson__subtitle\">Resources</h2>\r\n                        <div className=\"next-lesson__resources-list\">\r\n                            {nextLesson.resources.map(resource=> \r\n                                <GridList \r\n                                    key={resource.id} \r\n                                    content={resource.name}\r\n                                    resourceType={resource.type} \r\n                                    id={resource.id} \r\n                                    link={resource.url} \r\n                                    description={resource.type} \r\n                                    deleteBtn={false}\r\n                                    deleteType=\"noDelete\" \r\n                                    slider={true}\r\n                                />)}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"\">\r\n                        <h2 className=\"section-title-resources next-lesson__subtitle\">Notes</h2>\r\n                        <div className = \"client__notes\" style={{backgroundImage: \"url('/images/notePaper.png')\"}}>\r\n                            <div className = \"client__notes-body\">\r\n                                {/* <p className=\"client__notes-title\">Lesson Notes ...</p> */}\r\n                                <div className=\"client__notes-text\"> {nextLesson.notes}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default NextLesson\r\n",{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":210,"column":54,"nodeType":"202","messageId":"203","endLine":210,"endColumn":86},{"ruleId":"196","replacedBy":"204"},{"ruleId":"198","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":11,"column":13,"nodeType":"208","endLine":11,"endColumn":72},{"ruleId":"196","replacedBy":"209"},{"ruleId":"198","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":7,"column":13,"nodeType":"213","messageId":"214","endLine":7,"endColumn":24},{"ruleId":"211","severity":1,"message":"215","line":8,"column":13,"nodeType":"213","messageId":"214","endLine":8,"endColumn":19},{"ruleId":"211","severity":1,"message":"216","line":10,"column":22,"nodeType":"213","messageId":"214","endLine":10,"endColumn":30},{"ruleId":"217","severity":1,"message":"218","line":37,"column":7,"nodeType":"219","endLine":37,"endColumn":22,"suggestions":"220"},{"ruleId":"221","severity":1,"message":"222","line":137,"column":12,"nodeType":"213","messageId":"223","endLine":137,"endColumn":18},{"ruleId":"196","replacedBy":"224"},{"ruleId":"198","replacedBy":"225"},{"ruleId":"206","severity":1,"message":"207","line":35,"column":13,"nodeType":"208","endLine":35,"endColumn":72},{"ruleId":"221","severity":1,"message":"226","line":10,"column":12,"nodeType":"213","messageId":"223","endLine":10,"endColumn":15},{"ruleId":"227","severity":1,"message":"228","line":1,"column":1,"nodeType":"229","endLine":170,"endColumn":2},{"ruleId":"217","severity":1,"message":"230","line":33,"column":7,"nodeType":"219","endLine":33,"endColumn":9,"suggestions":"231"},{"ruleId":"206","severity":1,"message":"207","line":26,"column":21,"nodeType":"208","endLine":26,"endColumn":84},{"ruleId":"217","severity":1,"message":"232","line":26,"column":7,"nodeType":"219","endLine":26,"endColumn":9,"suggestions":"233"},{"ruleId":"217","severity":1,"message":"232","line":25,"column":7,"nodeType":"219","endLine":25,"endColumn":9,"suggestions":"234"},"no-native-reassign",["235"],"no-negated-in-lhs",["236"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'opt'.","ArrowFunctionExpression","unsafeRefs",["235"],["236"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement",["235"],["236"],"no-redeclare","'information' is already defined.","Identifier","redeclared","'lesson' is already defined.","'location' is already defined.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'displayResources'. Either include it or remove the dependency array.","ArrayExpression",["237"],"no-unused-vars","'isOver' is assigned a value but never used.","unusedVar",["235"],["236"],"'map' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'match.params.clientId' and 'match.params.username'. Either include them or remove the dependency array.",["238"],"React Hook useEffect has missing dependencies: 'address', 'city', and 'province'. Either include them or remove the dependency array.",["239"],["240"],"no-global-assign","no-unsafe-negation",{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"245","fix":"247"},"Update the dependencies array to be: [currentLesson, displayResources]",{"range":"248","text":"249"},"Update the dependencies array to be: [match.params.clientId, match.params.username]",{"range":"250","text":"251"},"Update the dependencies array to be: [address, city, province]",{"range":"252","text":"253"},{"range":"254","text":"253"},[1332,1347],"[currentLesson, displayResources]",[1157,1159],"[match.params.clientId, match.params.username]",[926,928],"[address, city, province]",[815,817]]