[{"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\index.js":"1","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\reportWebVitals.js":"2","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\App.js":"3","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\Pages\\Intro\\Intro.jsx":"4","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\Pages\\Client\\Client.jsx":"5","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\Pages\\Trainer\\Trainer.jsx":"6","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\Pages\\Lessons\\Lessons.jsx":"7","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\Pages\\ClientWelcome\\ClientWelcome.jsx":"8","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\Pages\\NextLesson\\NextLesson.jsx":"9","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\Pages\\EmptyPage\\EmptyPage.jsx":"10","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\Pages\\Programs\\Programs.jsx":"11","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\Pages\\Clients\\Clients.jsx":"12","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\Pages\\Schedule\\Schedule.jsx":"13","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\Pages\\User\\User.jsx":"14","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\ModalContainer\\ModalContainer.jsx":"15","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\SideBar\\SideBar.jsx":"16","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\firebase.js":"17","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\Pages\\Schedule\\event-utils.js":"18","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\GridList\\GridList.jsx":"19","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\Map\\Map.jsx":"20","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\ClientList\\ClientList.jsx":"21","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\ClientProfile\\ClientProfile.jsx":"22","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\ClientLessons\\ClientLessons.jsx":"23","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\DeleteModal\\DeleteModal.jsx":"24","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\LoginModal\\LoginModal.jsx":"25","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\Modal\\Modal.jsx":"26","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\NoteModal\\NoteModal.jsx":"27","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\TriggerModalButton\\TriggerModalButton.jsx":"28","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\mapStyles.js":"29","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\LessonResources\\LessonResources.jsx":"30","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\LoginForm\\LoginForm.jsx":"31","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\NewClientForm\\NewClientForm.jsx":"32","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\NewProgramForm\\NewProgramForm.jsx":"33","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\LessonDetailsForm\\LessonDetailsForm.jsx":"34","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\PersonalDetailsForm\\PersonalDetailsForm.jsx":"35","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\DNDList\\DNDList.jsx":"36","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\AppliedResources\\AppliedResources.jsx":"37","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\store\\trainer-context.js":"38","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\store\\TrainerProvider.js":"39","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\ClientNav\\ClientNav.jsx":"40","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\ClientsLayout\\ClientsLayout.jsx":"41"},{"size":479,"mtime":1609516748053,"results":"42","hashOfConfig":"43"},{"size":362,"mtime":499162500000,"results":"44","hashOfConfig":"43"},{"size":3327,"mtime":1622825940578,"results":"45","hashOfConfig":"43"},{"size":1401,"mtime":1612381285891,"results":"46","hashOfConfig":"43"},{"size":2860,"mtime":1621001015549,"results":"47","hashOfConfig":"43"},{"size":899,"mtime":1621705181843,"results":"48","hashOfConfig":"43"},{"size":4277,"mtime":1613394418499,"results":"49","hashOfConfig":"43"},{"size":6365,"mtime":1613397809293,"results":"50","hashOfConfig":"43"},{"size":5104,"mtime":1621000975628,"results":"51","hashOfConfig":"43"},{"size":2151,"mtime":1612272501543,"results":"52","hashOfConfig":"43"},{"size":18770,"mtime":1622830824345,"results":"53","hashOfConfig":"43"},{"size":739,"mtime":1622831870599,"results":"54","hashOfConfig":"43"},{"size":3091,"mtime":1616241298443,"results":"55","hashOfConfig":"43"},{"size":8015,"mtime":1621705308763,"results":"56","hashOfConfig":"43"},{"size":3761,"mtime":1621616705523,"results":"57","hashOfConfig":"43"},{"size":3966,"mtime":1622815894774,"results":"58","hashOfConfig":"43"},{"size":457,"mtime":1612972896192,"results":"59","hashOfConfig":"43"},{"size":394,"mtime":1613072882338,"results":"60","hashOfConfig":"43"},{"size":3171,"mtime":1621787893729,"results":"61","hashOfConfig":"43"},{"size":1849,"mtime":1613397892924,"results":"62","hashOfConfig":"43"},{"size":6043,"mtime":1622832787351,"results":"63","hashOfConfig":"43"},{"size":9938,"mtime":1622835016414,"results":"64","hashOfConfig":"43"},{"size":17278,"mtime":1622834917055,"results":"65","hashOfConfig":"43"},{"size":2500,"mtime":1621616231628,"results":"66","hashOfConfig":"43"},{"size":5890,"mtime":1621704936555,"results":"67","hashOfConfig":"43"},{"size":3657,"mtime":1621616297482,"results":"68","hashOfConfig":"43"},{"size":2184,"mtime":1612182661122,"results":"69","hashOfConfig":"43"},{"size":1207,"mtime":1621616371378,"results":"70","hashOfConfig":"43"},{"size":3603,"mtime":1613395492156,"results":"71","hashOfConfig":"43"},{"size":9332,"mtime":1622832356680,"results":"72","hashOfConfig":"43"},{"size":1670,"mtime":1613154893118,"results":"73","hashOfConfig":"43"},{"size":5503,"mtime":1621001051508,"results":"74","hashOfConfig":"43"},{"size":1366,"mtime":1612190047381,"results":"75","hashOfConfig":"43"},{"size":3837,"mtime":1621789891886,"results":"76","hashOfConfig":"43"},{"size":9973,"mtime":1621616447043,"results":"77","hashOfConfig":"43"},{"size":1284,"mtime":1613143137627,"results":"78","hashOfConfig":"43"},{"size":1589,"mtime":1611882658451,"results":"79","hashOfConfig":"43"},{"size":196,"mtime":1621898685900,"results":"80","hashOfConfig":"43"},{"size":3419,"mtime":1622832604166,"results":"81","hashOfConfig":"43"},{"size":3302,"mtime":1622831733023,"results":"82","hashOfConfig":"43"},{"size":389,"mtime":1622824561658,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"lesuvl",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\index.js",[],["175","176"],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\reportWebVitals.js",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\App.js",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\Pages\\Intro\\Intro.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\Pages\\Client\\Client.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\Pages\\Trainer\\Trainer.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\Pages\\Lessons\\Lessons.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\Pages\\ClientWelcome\\ClientWelcome.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\Pages\\NextLesson\\NextLesson.jsx",["177"],"import React, {useState,useEffect}from 'react';\r\nimport axios from 'axios';\r\n\r\nimport \"./NextLesson.scss\";\r\n\r\nimport Map from '../../components/Map/Map';\r\nimport GridList from '../../components/GridList/GridList';\r\n\r\n/**\r\n * @param {Object} nextLesson - contains all the information for the next lesson\r\n */\r\n\r\nfunction NextLesson({nextLesson}) {\r\n\r\n    const {address, city, province} = nextLesson.location\r\n\r\n    // store the geocoded (lat,long) location of the map in state\r\n    const [mapLocation, setMapLocation]=useState(null);\r\n\r\n    useEffect(()=>{\r\n        //send the location of the next lesson to the api to geocode the location for google maps\r\n        axios.get(`http://www.mapquestapi.com/geocoding/v1/address?key=${process.env.REACT_APP_MAPQUEST_API}&street=${address}&city=${city}&state=${province}`)\r\n        .then(res=>{\r\n            //once the location is geocoded set it in state\r\n            setMapLocation(res.data.results[0].locations[0].displayLatLng);\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    },[])\r\n\r\n    return (\r\n    <div className=\"next-lesson\" style={{backgroundImage: \"url('/images/main2.jfif')\"}}>\r\n        <h1 className=\"next-lesson__title\">NEXT LESSON</h1>\r\n        <div className=\"component next-lesson__container\">\r\n            <h2 className=\"component-title\">{nextLesson.name}</h2>\r\n                <div className = \"current-lesson__top next-lesson__top\">\r\n                    {/* shows the details for the lesson */}\r\n                    <div className=\"next-lesson__top-left\">\r\n                    <h2 className=\"section-title-resources next-lesson__subtitle\">Details</h2>\r\n                        <div className=\"current-lesson__top-details next-lesson__top-details\">\r\n                            <div className=\"current-lesson__top-details-text\">\r\n                                <div className=\"current-lesson__top-details-where\">\r\n                                    <p className=\"current-lesson__top-details-title\">Where</p>\r\n                                    <p className=\"current-lesson__top-details-item next-lesson__location\">{nextLesson.location.name}</p>\r\n                                    <p className=\"current-lesson__top-details-item\">{`${nextLesson.location.address}, ${nextLesson.location.city}`}</p>\r\n                                </div>\r\n                                <div className=\"current-lesson__top-details-when\">\r\n                                    <p className=\"current-lesson__top-details-title\">When</p>\r\n                                    <p className=\"current-lesson__top-details-item\">{`Date: ${nextLesson.date}`}</p>\r\n                                    <p className=\"current-lesson__top-details-item\">{`Time: ${nextLesson.time}`}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    \r\n                        {/* render the google map for the lesson location */}\r\n                        <div className = \"client__contact-map\">\r\n                            <Map\r\n                                mapLocation={mapLocation}\r\n                                containerSize={{width:\"346px\", height:\"282px\"}}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {/* render the resources for the next lesson */}\r\n                    <div className=\"next-lesson__resources\">\r\n                        <h2 className=\"section-title-resources next-lesson__subtitle\">Resources</h2>\r\n                        <div className=\"next-lesson__resources-list\">\r\n                            {nextLesson.resources.map(resource=> \r\n                                <GridList \r\n                                    key={resource.id} \r\n                                    content={resource.name}\r\n                                    resourceType={resource.type} \r\n                                    id={resource.id} \r\n                                    link={resource.url} \r\n                                    description={resource.type} \r\n                                    deleteBtn={false}\r\n                                    deleteType=\"noDelete\" \r\n                                    slider={true}\r\n                                />)}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* render notes for the next lesson */}\r\n                    <div className=\"\">\r\n                        <h2 className=\"section-title-resources next-lesson__subtitle\">Notes</h2>\r\n                        <div className = \"client__notes client-side__notepaper-next\" style={{backgroundImage: \"url('/images/notePaper.png')\"}}>\r\n                            <div className = \"client__notes-body client-side__notes\">\r\n                                <div className=\"client__notes-text\"> {nextLesson.notes}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default NextLesson\r\n","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\Pages\\EmptyPage\\EmptyPage.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\Pages\\Programs\\Programs.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\Pages\\Clients\\Clients.jsx",["178"],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\Pages\\Schedule\\Schedule.jsx",["179"],"import React from 'react'\r\n// import \"./Schedule.scss\"\r\n// import { INITIAL_EVENTS, createEventId } from './event-utils'\r\n\r\n\r\n// import FullCalendar, { formatDate } from '@fullcalendar/react'\r\n// import dayGridPlugin from '@fullcalendar/daygrid'\r\n// import timeGridPlugin from '@fullcalendar/timegrid'\r\n// import interactionPlugin from '@fullcalendar/interaction'\r\n\r\n\r\nfunction Schedule() {\r\n\r\n\r\n\r\n    // const handleDateSelect = (selectInfo) => {\r\n    //     console.log(selectInfo)\r\n    //     let title = prompt('Please enter a new title for your event')\r\n    //     let calendarApi = selectInfo.view.calendar\r\n\r\n    //     calendarApi.unselect() // clear date selection\r\n\r\n    //     if (title) {\r\n    //         calendarApi.addEvent({\r\n    //         id: createEventId(),\r\n    //         title,\r\n    //         start: selectInfo.startStr,\r\n    //         end: selectInfo.endStr,\r\n    //         allDay: selectInfo.allDay\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    // const handleEventClick = (clickInfo) => {\r\n    //     if (alert(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\r\n    //       clickInfo.event.remove()\r\n    //     }\r\n    //   }\r\n    \r\n    // const handleEvents = (events) => {\r\n    //     // this.setState({\r\n    //     //   currentEvents: events\r\n    //     // })\r\n    //   }\r\n    \r\n    // function renderEventContent(eventInfo) {\r\n    //   return (\r\n    //     <>\r\n    //       <b>{eventInfo.timeText}</b>\r\n    //       <i>{eventInfo.event.title}</i>\r\n    //     </>\r\n    //   )\r\n    // }\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"schedule\" style={{backgroundImage: \"url('/images/main2.jfif')\"}}>\r\n                {/* <FullCalendar\r\n                    plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n                    headerToolbar={{\r\n                    left: 'prev,next today',\r\n                    center: 'title',\r\n                    right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n                    }}\r\n                    initialView='dayGridMonth'\r\n                    editable={true}\r\n                    selectable={true}\r\n                    selectMirror={true}\r\n                    dayMaxEvents={true}\r\n                    //weekends={this.state.weekendsVisible}\r\n                    initialEvents={INITIAL_EVENTS} // alternatively, use the `events` setting to fetch from a feed\r\n                    select={handleDateSelect}\r\n                    eventContent={renderEventContent} // custom render function\r\n                    eventClick={handleEventClick}\r\n                    eventsSet={handleEvents} // called after events are initialized/added/changed/removed\r\n                    /* you can update a remote database when these fire:\r\n                    eventAdd={function(){}}\r\n                    eventChange={function(){}}\r\n                    eventRemove={function(){}}\r\n                    */}\r\n                {/* /> */}\r\n\t\t\t\t<img className=\"construction\" src=\"/images/construction.jfif\"/>\r\n            </div>            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Schedule",["180","181"],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\Pages\\User\\User.jsx",["182"],"import React, {useState, useEffect, useContext} from 'react'\r\nimport firebase from '../../firebase';\r\nimport axios from 'axios';\r\n\r\nimport \"./User.scss\"\r\n\r\nimport ModalContainer from '../../components/ModalContainer/ModalContainer';\r\nimport TrainerContext from '../../store/trainer-context';\r\n\r\nimport {API_URL} from '../../App';\r\n\r\n/**\r\n * @param {Object} user - trainer information\r\n * @param {Function} updateUserProfile - sent from trainer component to update the trainer's user profile\r\n * @param {Object} match - used to access the page's path\r\n * @param {Function} updateTrainer - used to update the state on the trainer component\r\n */\r\n\r\n\r\nfunction User({user, match, updateTrainer}) {\r\n\r\n    const {lname,fname,username,password,email,phone,address,city,province,country,postal} = user.contact;\r\n    const {facebook, twitter, instagram, linkedIn} = user.social;\r\n    const {name, description, logo} = user.company;\r\n    \r\n    //show the password as *****\r\n    const hiddenPassword = password.split(\"\").map(character => \"*\");\r\n\r\n    const {updateUserProfile} = useContext(TrainerContext);\r\n\r\n    //store the selected file in state\r\n    const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n   /** ================================================ ADD LOGO ================================================*/\r\n\r\n   //activate the click method on the invisible input box when the logo is clicked \r\n   const activateFileSelector=()=>{\r\n        const inputBox = document.getElementById('inputFile');\r\n        inputBox.click();\r\n    }\r\n    \r\n    //get the file selected from the file picker and store it in state\r\n    const fileSelectedHandler = event =>{\r\n        setSelectedFile(event.target.files[0]); \r\n    }\r\n\r\n    //upload the logo file to firebase storage in the trainer's\r\n    const fileUpload=()=>{\r\n        if(!!selectedFile){\r\n            let bucketName = match.params.trainerId;\r\n            let storageRef = firebase.storage().ref(`/${bucketName}/${selectedFile.name}`);\r\n            let uploadTask = storageRef.put(selectedFile);\r\n            uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED,\r\n                ()=>{\r\n                    console.log(\"Uploading ...\")\r\n                },\r\n                ()=>{\r\n                    console.log(\"Upload Unsuccessful\");\r\n                },\r\n                ()=>{\r\n                    //once the file is uploaded get the url and save it to the db and update the trainer component\r\n                    let storageLoc = firebase.storage().ref();\r\n                    storageLoc.child(`/${bucketName}/${selectedFile.name}`).getDownloadURL()\r\n                    .then((url)=>{\r\n                        const logo={logo:url}\r\n                        axios.put(`${API_URL}/trainer/${match.params.trainerId}/updateLogo`, logo)\r\n                        .then(res =>{\r\n                            updateTrainer();\r\n                        })\r\n                        .catch(err=>{\r\n                            console.log(err);\r\n                        })\r\n                    })\r\n                    .catch(err=>{\r\n                        console.log(err);\r\n                    })\r\n                }   \r\n            )\r\n        }\r\n    }\r\n\r\n    //fire the fileupload function any time the selectedFile is changed in state\r\n    useEffect(()=>{\r\n        fileUpload()\r\n    },[selectedFile, fileUpload])\r\n    \r\n    return (\r\n        <div className=\"user-profile\" style={{backgroundImage: \"url('/images/main2.jfif')\"}}>\r\n            <p className=\"user-profile__type\">Profile: Trainer</p>\r\n            <div className=\"user-profile__bottom\">\r\n                <div className=\"user-profile__description\">\r\n                   \r\n                    <div className=\"user-profile__description-logo-container\">\r\n\r\n                        {/* render the logo from the db - if there isn't one use the image icon stored on the front end */}\r\n                        <img src={logo !==\"\" ? logo : \"/icons/image.svg\"} alt =\"company logo\" className=\"user-profile__description-logo\" onClick={activateFileSelector}/>\r\n                        \r\n                        <input id=\"inputFile\" type=\"file\" className=\"user-profile__description-input\" onChange={fileSelectedHandler}></input>\r\n\r\n                    </div>\r\n                    <div className=\"user-profile__description-content\">\r\n                        <p className=\"user-profile__description-company\">{name}</p>\r\n                        <p className=\"user-profile__description-description\">{description}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"component user-profile__container\">\r\n                    <p className=\"component-title user-profile__title\">{`${fname} ${lname}`}</p>\r\n                    \r\n                    {(username !==\"google\" && username !==\"facebook\") &&\r\n                    <div className=\"user-profile__sign-in\">                       \r\n                        <p className=\"user-label\" >UserName: </p>\r\n                        <p className=\"user-text\"> {username}</p>\r\n\r\n                        <p className=\"user-label\" >Password: </p>\r\n                        <p className=\"user-text\"> {hiddenPassword}</p>\r\n                    </div>\r\n                    }\r\n\r\n                    <div className=\"user-profile__details\">\r\n                        <div className=\"user-profile__contact\">\r\n                            <p className=\"user-label user-profile__contact-title\"> CONTACT </p> \r\n                            <div className=\"user-profile-item\">\r\n                                <img className=\"contact-icon\" src=\"/icons/email-icon.svg\" alt=\"email\"/><p>{email}</p>\r\n                            </div>\r\n                            <div className=\"user-profile-item\">\r\n                                <img className=\"contact-icon\" src=\"/icons/phone-icon.svg\" alt=\"phone number\"/><p>{phone}</p>\r\n                            </div>\r\n\r\n                            <div className=\"user-profile__social\">\r\n                                <a href={facebook} target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"contact-icon--social\" src=\"/icons/facebook-icon.svg\" alt=\"facebook\"/></a>\r\n                                <a href={twitter} target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"contact-icon--social\" src=\"/icons/twitter-icon.svg\" alt=\"twitter\"/></a>\r\n                                <a href={instagram} target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"contact-icon--social\" src=\"/icons/instagram-icon.svg\" alt=\"instagram\"/></a>\r\n                                <a href={linkedIn} target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"contact-icon--social\" src=\"/icons/linkedin-icon.svg\" alt=\"linked-in\"/></a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user-profile__address\">\r\n                                <p className=\"user-label user-profile__address-title\">ADDRESS</p>\r\n                                <p className=\"user-profile__address-item\">{address}</p>\r\n                                <p className=\"user-profile__address-item\">{`${city}, ${province}, ${country}`}</p>\r\n                                <p className=\"user-profile__address-item\">{postal}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* render the modalcontainer along with the button used to trigger it for updating the user profile */}\r\n                    <div className=\"user-profile__update\">\r\n                        <ModalContainer \r\n                            modalName = \"updateUser\" \r\n                            modalType = \"update\" \r\n                            buttonText=\"Update\" \r\n                            buttonType=\"image\" \r\n                            url=\"/icons/user-edit.svg\" \r\n                            information={user} onSubmit={updateUserProfile}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\ModalContainer\\ModalContainer.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\SideBar\\SideBar.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\firebase.js",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\Pages\\Schedule\\event-utils.js",[],["183","184"],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\GridList\\GridList.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\Map\\Map.jsx",["185"],"import React, {useState, useCallback} from 'react';\r\nimport {GoogleMap, Marker, InfoWindow, useJsApiLoader} from '@react-google-maps/api';\r\n\r\nimport mapStyles from '../../mapStyles';\r\n\r\nconst Map = ({mapLocation, containerSize}) => {\r\n \r\n    const [showInfo, setShowInfo]=useState(false);\r\n    const [map, setMap] = useState(null);\r\n\r\n    const {isLoaded,loadError} = useJsApiLoader({\r\n        id:'google-map-script',\r\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_KEY\r\n    })\r\n\r\n    const onLoad = useCallback(map=>{\r\n        const bounds = new window.google.maps.LatLngBounds();\r\n        map.fitBounds(bounds);\r\n        setMap(map);\r\n    },[]);\r\n\r\n    const onUnmount = useCallback(map=>{\r\n        setMap(null)\r\n    },[]);\r\n\r\n    if (loadError) {\r\n        return <div>Map cannot be loaded right now, sorry.</div>\r\n      }\r\n\r\n    return isLoaded ? (\r\n        <GoogleMap \r\n            center={mapLocation}\r\n            onLoad={onLoad}\r\n            onUnmount={onUnmount}\r\n            options={{styles:mapStyles, zoomControl:false, mapTypeControl:false, minZoom:15}}\r\n            mapContainerStyle={containerSize}\r\n        >\r\n\r\n        <Marker \r\n            position={mapLocation} \r\n            onClick={()=>{setShowInfo(true)}}\r\n            // icon={{\r\n            //     url:\"/icons/map-marker.svg\",\r\n            //     scaledSize: new window.google.maps.Size(20,40)\r\n            // }}\r\n        /> \r\n\r\n        {showInfo &&\r\n            <InfoWindow \r\n                position={{lat:mapLocation.lat, lng:mapLocation.lng}}\r\n                onCloseClick={()=>{setShowInfo(false)}}\r\n                >\r\n                <div>\r\n                    <h2>Lesson details</h2>\r\n                    <p> Lesson Name</p>\r\n                </div>\r\n            </InfoWindow>\r\n        }\r\n        </GoogleMap>\r\n    ):<></>\r\n}\r\n\r\nexport default React.memo(Map)\r\n","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\ClientList\\ClientList.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\ClientProfile\\ClientProfile.jsx",["186"],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\ClientLessons\\ClientLessons.jsx",["187","188","189"],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\DeleteModal\\DeleteModal.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\LoginModal\\LoginModal.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\Modal\\Modal.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\NoteModal\\NoteModal.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\TriggerModalButton\\TriggerModalButton.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\mapStyles.js",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\LessonResources\\LessonResources.jsx",["190","191"],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\LoginForm\\LoginForm.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\NewClientForm\\NewClientForm.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\NewProgramForm\\NewProgramForm.jsx",["192"],"import React from 'react'\r\nimport \"./NewProgramForm.scss\";\r\n\r\nfunction NewProgramForm({onSubmit, closeModal, information}) {\r\n    \r\n    if (!information){\r\n        var information = {name:\"\", description:\"\"}\r\n    }\r\n\r\n    const {name, description} = information;\r\n\r\n    const handleSubmit=(event)=>{\r\n        onSubmit(event);\r\n        closeModal();\r\n    }\r\n    return (\r\n        <form id=\"modal-form\" className=\"modal-form\" onSubmit={handleSubmit} >\r\n            <div className=\"new-program__input\">\r\n                <input className=\"modal-form__input new-program__text\" id=\"programName\" name=\"programName\" type=\"text\" defaultValue={name} placeholder=\"Enter Program Name\" required></input>\r\n                <textarea className=\"modal-form__input new-program__textarea\" form=\"modal-form\" wrap=\"hard\" name=\"programDescription\" id=\"programDescription\" defaultValue={description} placeholder=\"Enter Program Description\" rows=\"10\" cols=\"120\"></textarea>\r\n            </div>\r\n            \r\n            <div className=\"modal-form__submit\">\r\n                <button className=\"modal-form__submit-cancel\" type=\"button\" onClick={closeModal}>Cancel</button>\r\n                <button className=\"modal-form__submit-button\" id=\"submit\" type=\"submit\" form=\"modal-form\">Submit</button>\r\n            </div>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewProgramForm\r\n","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\LessonDetailsForm\\LessonDetailsForm.jsx",["193","194"],"import React from 'react'\r\nimport './LessonDetailsForm.scss';\r\n\r\nfunction LessonDetailsForm({onSubmit, closeModal, lesson}) {\r\n    \r\n    if (!lesson){\r\n        var location = {name:\"\", address:\"\", city:\"\", province:\"\", country:\"\"}\r\n        var lesson = {date:\"\", time:\"\", location, id:\"\"}\r\n    }\r\n    var {date, time, location} = lesson;\r\n    var {name,address, city, province, country} = location;   \r\n\r\n    const handleSubmit=(event, lessonId)=>{\r\n        onSubmit(event, lessonId);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <form id=\"modal-form\" className=\"modal-form\" onSubmit={(event)=>handleSubmit(event, lesson.id)} >\r\n\r\n            <div className=\"modal-form__when\">\r\n                <div className=\"modal-form__section modal-form__lesson-name\">\r\n                    <input className=\"modal-form__input\" id=\"lessonName\" name=\"lessonName\" type=\"text\" defaultValue={lesson.name} required></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"fname\">Lesson Name</label>\r\n                </div>\r\n     \r\n                <div className=\"modal-form__section\">\r\n                    <input className=\"modal-form__input modal-form__input--date \" id=\"date\" name=\"date\" type=\"date\"  defaultValue={date}></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"date\">Date</label>\r\n                </div>\r\n                <div className=\"modal-form__section\">   \r\n                    <input className=\"modal-form__input modal-form__input--time\" id=\"time\" name=\"time\" type=\"time\"  defaultValue={time}></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"time\">Time</label>\r\n                </div>    \r\n            </div>\r\n\r\n            <div className=\"modal-form__section modal-form__lesson-name\">\r\n                <input className=\"modal-form__input\" id=\"locationName\" name=\"locationName\" type=\"text\" defaultValue={name}></input>\r\n                <label className=\"modal-form__label\" htmlFor=\"locationName\">Location Name</label>\r\n            </div>\r\n            \r\n            <div className=\"modal-form__address\">\r\n                <div className=\"modal-form__section\">\r\n                    <input className=\"modal-form__input modal-form__input--address\" id=\"address\" name=\"address\" type=\"text\" placeholder=\"Address\" defaultValue={address} ></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"address\">Street</label>\r\n                </div>\r\n                <div className=\"modal-form__section\">\r\n                    <input className=\"modal-form__input \" id=\"city\" name=\"city\" type=\"text\" placeholder=\"City\" defaultValue={city}></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"city\">City</label>\r\n                </div>\r\n                <div className=\"modal-form__section\">\r\n                    <input className=\"modal-form__input modal-form__input--province\" id=\"province\" name=\"province\" type=\"text\" placeholder=\"Province\" defaultValue={province}></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"province\">Province</label>\r\n                </div>\r\n                <div className=\"modal-form__section\">\r\n                    <input className=\"modal-form__input modal-form__input--country\" id=\"country\" name=\"country\" type=\"text\" placeholder=\"Country\" defaultValue={country}></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"country\">Country</label>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-form__submit\">\r\n                <button className=\"modal-form__submit-cancel\" type=\"button\" onClick={closeModal}>Cancel</button>\r\n                <button className=\"modal-form__submit-button\" id=\"submit\" type=\"submit\" form=\"modal-form\">Submit</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LessonDetailsForm","C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\PersonalDetailsForm\\PersonalDetailsForm.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\DNDList\\DNDList.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\AppliedResources\\AppliedResources.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\store\\trainer-context.js",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\store\\TrainerProvider.js",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\ClientNav\\ClientNav.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\plan2train\\client\\src\\components\\ClientsLayout\\ClientsLayout.jsx",[],{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":30,"column":7,"nodeType":"201","endLine":30,"endColumn":9,"suggestions":"202"},{"ruleId":"203","severity":1,"message":"204","line":8,"column":8,"nodeType":"205","messageId":"206","endLine":8,"endColumn":17},{"ruleId":"207","severity":1,"message":"208","line":82,"column":5,"nodeType":"209","endLine":82,"endColumn":68},{"ruleId":"195","replacedBy":"210"},{"ruleId":"197","replacedBy":"211"},{"ruleId":"199","severity":1,"message":"212","line":48,"column":11,"nodeType":"213","endLine":80,"endColumn":6},{"ruleId":"195","replacedBy":"214"},{"ruleId":"197","replacedBy":"215"},{"ruleId":"203","severity":1,"message":"216","line":9,"column":12,"nodeType":"205","messageId":"206","endLine":9,"endColumn":15},{"ruleId":"199","severity":1,"message":"217","line":51,"column":8,"nodeType":"201","endLine":51,"endColumn":70,"suggestions":"218"},{"ruleId":"203","severity":1,"message":"219","line":21,"column":35,"nodeType":"205","messageId":"206","endLine":21,"endColumn":45},{"ruleId":"203","severity":1,"message":"220","line":24,"column":11,"nodeType":"205","messageId":"206","endLine":24,"endColumn":18},{"ruleId":"199","severity":1,"message":"221","line":69,"column":8,"nodeType":"201","endLine":69,"endColumn":47,"suggestions":"222"},{"ruleId":"203","severity":1,"message":"223","line":26,"column":23,"nodeType":"205","messageId":"206","endLine":26,"endColumn":31},{"ruleId":"203","severity":1,"message":"224","line":127,"column":12,"nodeType":"205","messageId":"206","endLine":127,"endColumn":18},{"ruleId":"225","severity":1,"message":"226","line":7,"column":13,"nodeType":"205","messageId":"227","endLine":7,"endColumn":24},{"ruleId":"225","severity":1,"message":"228","line":8,"column":13,"nodeType":"205","messageId":"227","endLine":8,"endColumn":19},{"ruleId":"225","severity":1,"message":"229","line":10,"column":22,"nodeType":"205","messageId":"227","endLine":10,"endColumn":30},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'address', 'city', and 'province'. Either include them or remove the dependency array.","ArrayExpression",["232"],"no-unused-vars","'EmptyPage' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["230"],["231"],"The 'fileUpload' function makes the dependencies of useEffect Hook (at line 85) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'fileUpload' in its own useCallback() Hook.","VariableDeclarator",["230"],["231"],"'map' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'geoCode', 'setTrainerId', and 'trainerId'. Either include them or remove the dependency array.",["233"],"'setClients' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clientId', 'geoCode', 'programs', 'setTrainerId', and 'trainerId'. Either include them or remove the dependency array.",["234"],"'clientId' is assigned a value but never used.","'isOver' is assigned a value but never used.","no-redeclare","'information' is already defined.","redeclared","'lesson' is already defined.","'location' is already defined.","no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},"Update the dependencies array to be: [address, city, province]",{"range":"241","text":"242"},"Update the dependencies array to be: [programs, clients, clientId, currentClient, setCurrentClient, setTrainerId, trainerId, geoCode]",{"range":"243","text":"244"},"Update the dependencies array to be: [currentClient, currentLesson, clients, setTrainerId, trainerId, clientId, geoCode, programs]",{"range":"245","text":"246"},[1062,1064],"[address, city, province]",[1832,1894],"[programs, clients, clientId, currentClient, setCurrentClient, setTrainerId, trainerId, geoCode]",[3020,3059],"[currentClient, currentLesson, clients, setTrainerId, trainerId, clientId, geoCode, programs]"]