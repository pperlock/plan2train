[{"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\index.js":"1","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\reportWebVitals.js":"2","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\App.js":"3","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Trainer\\Trainer.jsx":"4","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Intro\\Intro.jsx":"5","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Programs\\Programs.jsx":"6","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Clients\\Clients.jsx":"7","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\User\\User.jsx":"8","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Schedule\\Schedule.jsx":"9","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\SideBar\\SideBar.jsx":"10","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ProgramContent\\ProgramContent.jsx":"11","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientProfile\\ClientProfile.jsx":"12","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientLessons\\ClientLessons.jsx":"13","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientList\\ClientList.jsx":"14","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\List\\List.jsx":"15","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ModalContainer\\ModalContainer.jsx":"16","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ProgramBar\\ProgramBar.jsx":"17","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\TriggerModalButton\\TriggerModalButton.jsx":"18","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Modal\\Modal.jsx":"19","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\PersonalDetailsForm\\PersonalDetailsForm.jsx":"20","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewClientForm\\NewClientForm.jsx":"21","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewProgramForm\\NewProgramForm.jsx":"22","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\firebase.js":"23","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DeleteModal\\DeleteModal.jsx":"24","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonDetailsForm\\LessonDetailsForm.jsx":"25","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonResources\\LessonResources.jsx":"26","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\AppliedResources\\AppliedResources.jsx":"27","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DNDList\\DNDList.jsx":"28","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Map\\Map.jsx":"29","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\mapStyles.js":"30","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Client\\Client.jsx":"31","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Login\\Login.jsx":"32","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LoginModal\\LoginModal.jsx":"33","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LoginForm\\LoginForm.jsx":"34","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\GridList\\GridList.jsx":"35"},{"size":479,"mtime":1609516748053,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"37"},{"size":1645,"mtime":1611790587744,"results":"39","hashOfConfig":"37"},{"size":11035,"mtime":1611791106431,"results":"40","hashOfConfig":"37"},{"size":1043,"mtime":1611783174221,"results":"41","hashOfConfig":"37"},{"size":10331,"mtime":1611790413479,"results":"42","hashOfConfig":"37"},{"size":4892,"mtime":1611790894081,"results":"43","hashOfConfig":"37"},{"size":4049,"mtime":1611767211447,"results":"44","hashOfConfig":"37"},{"size":168,"mtime":1611712457260,"results":"45","hashOfConfig":"37"},{"size":4200,"mtime":1611790538190,"results":"46","hashOfConfig":"37"},{"size":872,"mtime":1611172017746,"results":"47","hashOfConfig":"37"},{"size":5627,"mtime":1611712457265,"results":"48","hashOfConfig":"37"},{"size":19351,"mtime":1611712457263,"results":"49","hashOfConfig":"37"},{"size":1537,"mtime":1611790947475,"results":"50","hashOfConfig":"37"},{"size":1276,"mtime":1611612430536,"results":"51","hashOfConfig":"37"},{"size":8366,"mtime":1611785981301,"results":"52","hashOfConfig":"37"},{"size":961,"mtime":1609618837760,"results":"53","hashOfConfig":"37"},{"size":529,"mtime":1611791146457,"results":"54","hashOfConfig":"37"},{"size":2540,"mtime":1611767865247,"results":"55","hashOfConfig":"37"},{"size":4507,"mtime":1611767084038,"results":"56","hashOfConfig":"37"},{"size":2450,"mtime":1611167347958,"results":"57","hashOfConfig":"37"},{"size":1011,"mtime":1611172348051,"results":"58","hashOfConfig":"37"},{"size":464,"mtime":1611194250386,"results":"59","hashOfConfig":"37"},{"size":2188,"mtime":1611622871959,"results":"60","hashOfConfig":"37"},{"size":1981,"mtime":1611534495920,"results":"61","hashOfConfig":"37"},{"size":5629,"mtime":1611577461572,"results":"62","hashOfConfig":"37"},{"size":1362,"mtime":1611577284211,"results":"63","hashOfConfig":"37"},{"size":1258,"mtime":1611520289890,"results":"64","hashOfConfig":"37"},{"size":1686,"mtime":1611712457268,"results":"65","hashOfConfig":"37"},{"size":3522,"mtime":1611712457269,"results":"66","hashOfConfig":"37"},{"size":159,"mtime":1611713068697,"results":"67","hashOfConfig":"37"},{"size":292,"mtime":1611713326933,"results":"68","hashOfConfig":"37"},{"size":4573,"mtime":1611757676994,"results":"69","hashOfConfig":"37"},{"size":916,"mtime":1611755742778,"results":"70","hashOfConfig":"37"},{"size":1845,"mtime":1611785821861,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"l44x0r",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\index.js",[],["150","151"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\reportWebVitals.js",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\App.js",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Trainer\\Trainer.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Intro\\Intro.jsx",["152","153"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Programs\\Programs.jsx",["154","155","156"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Clients\\Clients.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\User\\User.jsx",["157"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Schedule\\Schedule.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\SideBar\\SideBar.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ProgramContent\\ProgramContent.jsx",[],["158","159"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientProfile\\ClientProfile.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientLessons\\ClientLessons.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientList\\ClientList.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\List\\List.jsx",["160"],"import React from 'react';\r\n\r\nimport './List.scss';\r\n\r\nimport ModalContainer from '../../components/ModalContainer/ModalContainer';\r\n\r\n\r\nfunction List({id, content, link, description, deleteBtn, deleteFunction, list, deleteType}) {\r\n    return (\r\n        <div className=\"list__item\">\r\n            <a href={link} className=\"list__item-name\" target=\"_blank\">{content}</a>\r\n            <div className=\"list__right\" >\r\n                {description && <p className=\"list__right-type\">{description}</p>}\r\n                {(deleteType !== \"modal\" && deleteBtn) && <button id={id} onClick={(event)=>deleteFunction(event, list)} className=\"list__right-delete\"> x </button>}\r\n                \r\n                {deleteType===\"modal\" &&\r\n                    <ModalContainer \r\n                        modalType = \"delete\" \r\n                        modalName = \"delete\" \r\n                        buttonText=\"x\" \r\n                        onSubmitTrainer={deleteFunction}\r\n                        deleteString= {content}\r\n                        deleteId={id}\r\n                    />\r\n                }\r\n                {/* {deleteBtn && <button onClick={()=>log(\"Patti\")} className=\"list__right-delete\"> x </button>} */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ModalContainer\\ModalContainer.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ProgramBar\\ProgramBar.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\TriggerModalButton\\TriggerModalButton.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Modal\\Modal.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\PersonalDetailsForm\\PersonalDetailsForm.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewClientForm\\NewClientForm.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewProgramForm\\NewProgramForm.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\firebase.js",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DeleteModal\\DeleteModal.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonDetailsForm\\LessonDetailsForm.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonResources\\LessonResources.jsx",["161","162"],"import React, {useState, useEffect}  from 'react';\r\nimport {useDrop} from 'react-dnd';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n// import './ClientLessons.scss'\r\n\r\nimport DNDList from '../../components/DNDList/DNDList';\r\nimport AppliedResources from '../../components/AppliedResources/AppliedResources';\r\n\r\n/**\r\n * \r\n * @param {Object} programs - all the trainer's programs\r\n * @param {Object} currentLesson - lesson currently rendered\r\n * @param {Object} currentClient - client currently rendered\r\n */\r\n\r\nfunction LessonResources({programs, currentLesson, currentClient}) {\r\n\r\n    const ItemTypes = {\r\n        CARD:'card',\r\n    };\r\n\r\n    //resources that are currently being displayed - change based on program chosen\r\n    const[displayResources, setResourceList] = useState(programs[0].resources);\r\n\r\n    //current lesson being rendered - changed based on drag and drop from available resources \r\n    const[currentLessonResources, updateCurrentLesson] = useState(currentLesson);\r\n    \r\n    \r\n    //update the resources of the current lesson when state changes\r\n    useEffect(() => {\r\n        updateCurrentLesson(currentLesson);\r\n    });\r\n\r\n    // update the resources being displayed when a program is chosen\r\n    const updateDisplayed = (program)=>{\r\n        setResourceList(program.resources);\r\n    }\r\n\r\n    //used to remove a resource from the available resources and add it to the lesson resources\r\n    const markAsDone = id => {\r\n\r\n        //find the resource to update and set the applied status to true        \r\n        const displays = [...displayResources];\r\n        displays.find(resource=> resource.id === id).applied=true;\r\n             \r\n        const lessonObject = {...currentLessonResources};\r\n        // take the id from the resource that was moved, find the data associated with it and push it to the resources of the current lesson\r\n        lessonObject.resources.push(displays.find(resource=> resource.id === id));\r\n\r\n        //update the displaye resources and the lesson resources that are rendered\r\n        setResourceList(displays);\r\n        updateCurrentLesson(lessonObject);\r\n\r\n        //create an array of the ids associated with the updated resources to push to the db\r\n        const updatedResources = lessonObject.resources.map(resource => resource.id)\r\n        console.log(updatedResources);\r\n\r\n        //update the db with the new lesson resources\r\n        axios.put(`http://localhost:8080/client/${currentClient.userId}/${currentLessonResources.id}/updateResource`, updatedResources)\r\n        .then(res =>{\r\n            console.log(res);\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n\r\n    }\r\n\r\n    const removeResource=(id)=>{\r\n        console.log(id);\r\n         //find the resource to update and set the applied status to true        \r\n        const displays = [...displayResources];\r\n        displays.find(resource=> resource.id === id).applied=false;\r\n             \r\n        const lessonObject = {...currentLessonResources};\r\n        // take the id from the resource that was moved, find the data associated with it and push it to the resources of the current lesson\r\n        const index = lessonObject.resources.findIndex(resource => resource.id === id);\r\n        lessonObject.resources.splice(index,1);\r\n\r\n        //update the display resources and the lesson resources that are rendered\r\n        setResourceList(displays);\r\n        updateCurrentLesson(lessonObject);\r\n\r\n        //create an array of the ids associated with the updated resources to push to the db\r\n        const updatedResources = lessonObject.resources.map(resource => resource.id)\r\n        console.log(updatedResources);\r\n\r\n        // update the db with the new lesson resources\r\n        axios.put(`http://localhost:8080/client/${currentClient.userId}/${currentLessonResources.id}/updateResource`, updatedResources)\r\n        .then(res =>{\r\n            console.log(res);\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    //setup for drop componenet from  lessons - available\r\n    const[{isOver}, drop] = useDrop({\r\n        accept: ItemTypes.CARD, //required - tells drop zone it will only accept card components\r\n        drop: (item, monitor)=> removeResource(item.id),\r\n        collect: monitor => ({\r\n            isOver: !!monitor.isOver(),\r\n        }),\r\n    });\r\n\r\n    return (\r\n        <div className=\"current-lesson__resources\">  \r\n            <div className=\"current-lesson__available\">\r\n                {/* <p>Available Resources</p> */}\r\n                <div className=\"current-lesson__available-content\">\r\n                    <ul className=\"current-lesson__available-programs\"> \r\n                        {programs.map(program=> <Link key={program.id} to={`/clients/${currentClient.userId}/lessons`}><li onClick={()=>updateDisplayed(program)} className=\"current-lesson__available-programs-item\">{program.name}</li></Link>)}\r\n                    </ul>\r\n                        <div ref={drop} className=\"list current-lesson__available-resources\">\r\n                            {displayResources.filter(resource => resource.applied === false)\r\n                                .map(resource=> <DNDList key={resource.id} content={resource.name} link={resource.link} id={resource.id}/>)}\r\n                        </div>                \r\n                </div>\r\n            </div>\r\n            {/* applied resources component set up as a drop component */}\r\n            <AppliedResources currentLesson={currentLessonResources} markAsDone={markAsDone}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LessonResources\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\AppliedResources\\AppliedResources.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DNDList\\DNDList.jsx",["163"],"import React from 'react';\r\nimport { useDrag } from 'react-dnd';\r\n\r\nimport './DNDList.scss';\r\n\r\nconst ItemTypes = {\r\n    CARD:'card',\r\n};\r\n\r\n/**\r\n * \r\n * @param {string} id - resource id \r\n * @param {string} content - text to render\r\n * @param {string} link - url for text to link to\r\n * @param {string} description- type of resource if it is a resource list\r\n * \r\n */\r\nfunction DNDList({id, content, link, description}) {\r\n\r\n    // argument1 = props from the monitor\r\n    const[{isDragging}, drag] = useDrag({\r\n        item:{\r\n            type:ItemTypes.CARD,\r\n            //type is required - can pass anything else you want with it - here i want the id\r\n            id: id,\r\n        },\r\n        //talks to the monitor and sets the isDragging prop to true when is dragging\r\n        collect:monitor=>({\r\n            isDragging:!!monitor.isDragging(),\r\n        }),\r\n    })\r\n\r\n    return (\r\n        <div ref={drag} className=\"list__item\" opacity={isDragging ? '1' : '1'}>\r\n            <a href={link} className=\"list__item-name\" target=\"_blank\">{content}</a>\r\n            <div className=\"list__right\" >\r\n                {description && <p className=\"list__right-type\">{description}</p>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DNDList\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Map\\Map.jsx",["164","165"],"import React, {useState, useEffect} from 'react';\r\nimport {GoogleMap, Marker, InfoWindow,withGoogleMap, withScriptjs} from 'react-google-maps';\r\nimport axios from 'axios';\r\n\r\nimport mapStyles from '../../mapStyles';\r\n\r\nconst Map = withScriptjs(withGoogleMap(({mapLocation}) => {\r\n \r\n    console.log(mapLocation);\r\n    const [showInfo, setShowInfo]=useState(false);\r\n\r\n    if(!mapLocation){\r\n        return(\r\n            <div> Loading Map ...</div>\r\n        )\r\n    }else{\r\n        return (\r\n                <GoogleMap \r\n                    defaultZoom={12} \r\n                    center={{lat:mapLocation.lat, lng:mapLocation.lng}}\r\n                    defaultOptions={{styles:mapStyles, zoomControl:false, mapTypeControl:false}}\r\n                    onClick={()=>console.log(mapLocation)}\r\n                >\r\n\r\n                <Marker \r\n                    position={{lat:mapLocation.lat, lng:mapLocation.lng}} \r\n                    onClick={()=>{setShowInfo(true)}}\r\n                    // icon={{\r\n                    //     url:\"/icons/facebook-icon.svg\",\r\n                    //     scaledSize: new window.google.maps.Size(40,40)\r\n                    // }}\r\n                /> \r\n            \r\n\r\n            {showInfo &&\r\n                <InfoWindow \r\n                    position={{lat:mapLocation.lat, lng:mapLocation.lng}}\r\n                    onCloseClick={()=>{setShowInfo(false)}}\r\n                    >\r\n                    <div>\r\n                        <h2>Lesson details</h2>\r\n                        <p> Lesson Name</p>\r\n                    </div>\r\n                </InfoWindow>\r\n            }\r\n            </GoogleMap>\r\n        )\r\n    }\r\n    }\r\n));\r\n\r\nexport default Map\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\mapStyles.js",["166"],"export default [\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"weight\": \"2.00\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#9c9c9c\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels.text\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#f2f2f2\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape.man_made\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": -100\r\n            },\r\n            {\r\n                \"lightness\": 45\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#eeeeee\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#7b7b7b\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"simplified\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"labels.icon\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#46bcec\"\r\n            },\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#c8d7d4\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#070707\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    }\r\n]","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Client\\Client.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Login\\Login.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LoginModal\\LoginModal.jsx",["167","168"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Redirect} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport FocusTrap from 'focus-trap-react';\r\n\r\nimport \"./LoginModal.scss\";\r\n\r\nimport LoginForm from '../LoginForm/LoginForm';\r\nimport PersonalDetailsForm from '../PersonalDetailsForm/PersonalDetailsForm';\r\n\r\n\r\n// {onClickOutside, onKeyDown, modalRef, buttonRef, closeModal, onSubmit, modalType}\r\n\r\nclass LoginModal extends React.Component {\r\n\r\n    state={loginResponse:{}, showSignIn:true, showSignUp:false}\r\n\r\n    checkCredentials=(event, profile)=>{\r\n        event.preventDefault();\r\n\r\n        const user = {username:event.target.username.value,profile:profile};\r\n        this.setState({user:user});\r\n\r\n        axios.get(`http://localhost:8080/user/${profile}/${event.target.username.value}/${event.target.password.value}`)\r\n            .then(res =>{\r\n                console.log(res.data);\r\n                this.setState({loginResponse:res.data})\r\n            })\r\n            .catch(err =>{\r\n                console.log(err);\r\n            })   \r\n    }\r\n\r\n    toggleLoginForm = ()=>{\r\n        this.setState({showSignUp:!this.state.showSignUp, showSignIn:!this.state.showSignIn});\r\n    }\r\n\r\n    render(){\r\n        const {onClickOutside, onKeyDown, modalRef, buttonRef, closeModal, onSubmit, modalType} = this.props;\r\n        const {loggedIn, error, userId, username, profile} = this.state.loginResponse;\r\n\r\n        const blankSignUpProfile={\r\n            userProfile:{\r\n                lname: \"\",\r\n                fname: \"\",\r\n                email: \"\",\r\n                phone: \"\",\r\n                address: \"\",\r\n                city: \"\",\r\n                province: \"\",\r\n                country:\"\",\r\n                postal : \"\",\r\n            }\r\n        }\r\n        return ReactDOM.createPortal(\r\n            <FocusTrap>\r\n                <aside \r\n                tag=\"aside\"\r\n                role='dialog'\r\n                tabIndex='-1'\r\n                aria-modal='true'\r\n                className='modal-cover'\r\n                // onClick={onClickOutside}\r\n                onKeyDown={onKeyDown}>\r\n                    <div className=\"modal-area modal-login__area\" ref={modalRef} style={{backgroundImage: \"url('/images/main5.jfif')\"}}>\r\n                        <div className=\"modal-login__header\">\r\n                            {modalType === \"loginclient\" && <h1 className=\"modal-title modal-login__header-title\">Client Login</h1>}\r\n                            {modalType === \"logintrainer\" && <h1 className= \"modal-login__header-title\">Trainer Login</h1>}\r\n                            {(modalType === \"logintrainer\" && this.state.showSignIn) && <p className= \"modal-login__header-info\">Already Part of the Community? Sign In</p>}\r\n                        </div>\r\n                        <button\r\n                            ref={buttonRef}\r\n                            aria-label='Close Modal'\r\n                            aria-labelledby=\"close-modal\"\r\n                            className=\"_modal-close modal-login__close\"\r\n                            onClick={closeModal}>\r\n                            <span id=\"close-modal\" className=\"_hide-visual\">Close</span>\r\n                            <svg className=\"_modal-close-icon\" viewBox=\"0 0 40 40\">\r\n                                <path d=\"M 10,10 L 30,30 M 30,10 L 10,30\" />\r\n                            </svg>\r\n                        </button>\r\n                        <div className=\"modal-body modal-login__body\">\r\n                            {this.state.showSignIn &&<LoginForm onSubmit={this.checkCredentials} profile={modalType} signIn={this.state.showSignIn}/>}\r\n                            {this.state.showSignUp && <PersonalDetailsForm onSubmit={this.checkCredentials} profile={modalType} information={blankSignUpProfile}/>}\r\n                            {error && <p className=\"modal-login__body-error\">{error}</p>}  \r\n                            {this.state.noUser && <p className=\"modal-login__body-error\">\"Username Not Found\"</p>}\r\n                            {(modalType === \"logintrainer\" && this.state.showSignIn) && <button className=\"modal-login__body-signup\" onClick={this.toggleLoginForm}>New to the Community? Click Here to Join Us</button>}\r\n                        </div>\r\n                    </div>\r\n                    {loggedIn && <Redirect to={`/${profile}/${username}/${userId}`}></Redirect>}\r\n                      \r\n                   \r\n                </aside>\r\n            </FocusTrap>, document.body\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginModal\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LoginForm\\LoginForm.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\GridList\\GridList.jsx",["169"],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":2,"column":9,"nodeType":"176","messageId":"177","endLine":2,"endColumn":17},{"ruleId":"174","severity":1,"message":"178","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":13},{"ruleId":"174","severity":1,"message":"179","line":64,"column":17,"nodeType":"176","messageId":"177","endLine":64,"endColumn":27},{"ruleId":"180","severity":1,"message":"181","line":183,"column":125,"nodeType":"182","endLine":183,"endColumn":164},{"ruleId":"180","severity":1,"message":"181","line":192,"column":125,"nodeType":"182","endLine":192,"endColumn":164},{"ruleId":"180","severity":1,"message":"181","line":21,"column":79,"nodeType":"182","endLine":21,"endColumn":159},{"ruleId":"170","replacedBy":"183"},{"ruleId":"172","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":11,"column":13,"nodeType":"182","endLine":11,"endColumn":72},{"ruleId":"187","severity":1,"message":"188","line":32,"column":5,"nodeType":"176","endLine":32,"endColumn":14,"suggestions":"189"},{"ruleId":"174","severity":1,"message":"190","line":101,"column":12,"nodeType":"176","messageId":"177","endLine":101,"endColumn":18},{"ruleId":"185","severity":1,"message":"186","line":35,"column":13,"nodeType":"182","endLine":35,"endColumn":72},{"ruleId":"174","severity":1,"message":"191","line":1,"column":26,"nodeType":"176","messageId":"177","endLine":1,"endColumn":35},{"ruleId":"174","severity":1,"message":"178","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":13},{"ruleId":"192","severity":1,"message":"193","line":1,"column":1,"nodeType":"194","endLine":170,"endColumn":2},{"ruleId":"174","severity":1,"message":"195","line":40,"column":16,"nodeType":"176","messageId":"177","endLine":40,"endColumn":30},{"ruleId":"174","severity":1,"message":"196","line":40,"column":76,"nodeType":"176","messageId":"177","endLine":40,"endColumn":84},{"ruleId":"185","severity":1,"message":"186","line":26,"column":17,"nodeType":"182","endLine":26,"endColumn":80},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'uploadTask' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["197"],["198"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'updateCurrentLesson'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [currentLesson] as a second argument to the useEffect Hook.",["199"],"'isOver' is assigned a value but never used.","'useEffect' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'onClickOutside' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},"Add dependencies array: [currentLesson]",{"range":"202","text":"203"},[1166,1166],", [currentLesson]"]