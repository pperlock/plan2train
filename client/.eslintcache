[{"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\index.js":"1","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\reportWebVitals.js":"2","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\App.js":"3","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Trainer\\Trainer.jsx":"4","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Intro\\Intro.jsx":"5","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Programs\\Programs.jsx":"6","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Clients\\Clients.jsx":"7","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\User\\User.jsx":"8","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Schedule\\Schedule.jsx":"9","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\SideBar\\SideBar.jsx":"10","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ProgramContent\\ProgramContent.jsx":"11","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientProfile\\ClientProfile.jsx":"12","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientLessons\\ClientLessons.jsx":"13","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientList\\ClientList.jsx":"14","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\List\\List.jsx":"15","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ModalContainer\\ModalContainer.jsx":"16","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ProgramBar\\ProgramBar.jsx":"17","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\TriggerModalButton\\TriggerModalButton.jsx":"18","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Modal\\Modal.jsx":"19","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\PersonalDetailsForm\\PersonalDetailsForm.jsx":"20","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewClientForm\\NewClientForm.jsx":"21","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewProgramForm\\NewProgramForm.jsx":"22","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\firebase.js":"23","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DeleteModal\\DeleteModal.jsx":"24","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonDetailsForm\\LessonDetailsForm.jsx":"25","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonResources\\LessonResources.jsx":"26","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\AppliedResources\\AppliedResources.jsx":"27","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DNDList\\DNDList.jsx":"28","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Map\\Map.jsx":"29","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\mapStyles.js":"30","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Client\\Client.jsx":"31","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LoginModal\\LoginModal.jsx":"32","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LoginForm\\LoginForm.jsx":"33","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\GridList\\GridList.jsx":"34","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NoteModal\\NoteModal.jsx":"35","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\EmptyPage\\EmptyPage.jsx":"36","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\ClientWelcome\\ClientWelcome.jsx":"37","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Lessons\\Lessons.jsx":"38","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\NextLesson\\NextLesson.jsx":"39"},{"size":479,"mtime":1609516748053,"results":"40","hashOfConfig":"41"},{"size":362,"mtime":499162500000,"results":"42","hashOfConfig":"41"},{"size":2605,"mtime":1612886573127,"results":"43","hashOfConfig":"41"},{"size":17844,"mtime":1612887570788,"results":"44","hashOfConfig":"41"},{"size":1401,"mtime":1612381285891,"results":"45","hashOfConfig":"41"},{"size":13254,"mtime":1612884216018,"results":"46","hashOfConfig":"41"},{"size":5829,"mtime":1612887901570,"results":"47","hashOfConfig":"41"},{"size":7756,"mtime":1612270769244,"results":"48","hashOfConfig":"41"},{"size":269,"mtime":1612217959107,"results":"49","hashOfConfig":"41"},{"size":8032,"mtime":1612887711489,"results":"50","hashOfConfig":"41"},{"size":872,"mtime":1611172017746,"results":"51","hashOfConfig":"41"},{"size":8340,"mtime":1612887189003,"results":"52","hashOfConfig":"41"},{"size":19739,"mtime":1612232142183,"results":"53","hashOfConfig":"41"},{"size":1557,"mtime":1612887739578,"results":"54","hashOfConfig":"41"},{"size":1371,"mtime":1611872490171,"results":"55","hashOfConfig":"41"},{"size":4581,"mtime":1612192470128,"results":"56","hashOfConfig":"41"},{"size":961,"mtime":1609618837760,"results":"57","hashOfConfig":"41"},{"size":1351,"mtime":1612192031846,"results":"58","hashOfConfig":"41"},{"size":3672,"mtime":1612216757294,"results":"59","hashOfConfig":"41"},{"size":10193,"mtime":1612212471965,"results":"60","hashOfConfig":"41"},{"size":4827,"mtime":1612209662953,"results":"61","hashOfConfig":"41"},{"size":1366,"mtime":1612190047381,"results":"62","hashOfConfig":"41"},{"size":464,"mtime":1611194250386,"results":"63","hashOfConfig":"41"},{"size":2577,"mtime":1612207195867,"results":"64","hashOfConfig":"41"},{"size":3783,"mtime":1612217278461,"results":"65","hashOfConfig":"41"},{"size":8186,"mtime":1612888072097,"results":"66","hashOfConfig":"41"},{"size":1589,"mtime":1611882658451,"results":"67","hashOfConfig":"41"},{"size":1258,"mtime":1611520289890,"results":"68","hashOfConfig":"41"},{"size":1894,"mtime":1612104010181,"results":"69","hashOfConfig":"41"},{"size":3573,"mtime":1612267347057,"results":"70","hashOfConfig":"41"},{"size":2812,"mtime":1612888213512,"results":"71","hashOfConfig":"41"},{"size":4754,"mtime":1612887661307,"results":"72","hashOfConfig":"41"},{"size":2506,"mtime":1612884216028,"results":"73","hashOfConfig":"41"},{"size":3187,"mtime":1612220154906,"results":"74","hashOfConfig":"41"},{"size":2184,"mtime":1612182661122,"results":"75","hashOfConfig":"41"},{"size":2151,"mtime":1612272501543,"results":"76","hashOfConfig":"41"},{"size":6263,"mtime":1612272720442,"results":"77","hashOfConfig":"41"},{"size":4309,"mtime":1612272112507,"results":"78","hashOfConfig":"41"},{"size":5097,"mtime":1612271912274,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"l44x0r",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"82"},"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\index.js",[],["170","171"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\reportWebVitals.js",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\App.js",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Trainer\\Trainer.jsx",["172"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Intro\\Intro.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Programs\\Programs.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Clients\\Clients.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\User\\User.jsx",["173"],"import React, {useState, useEffect} from 'react'\r\nimport firebase from '../../firebase';\r\nimport axios from 'axios';\r\n\r\nimport \"./User.scss\"\r\n\r\nimport ModalContainer from '../../components/ModalContainer/ModalContainer';\r\n\r\n/**\r\n * @param {Object} user - trainer information\r\n * @param {Function} updateUserProfile - sent from trainer component to update the trainer's user profile\r\n * @param {Object} match - used to access the page's path\r\n * @param {Function} updateTrainer - used to update the state on the trainer component\r\n */\r\n\r\nfunction User({user, updateUserProfile, match, updateTrainer}) {\r\n\r\n    const {lname,fname,username,password,email,phone,address,city,province,country,postal} = user.contact;\r\n    const {facebook, twitter, instagram, linkedIn} = user.social;\r\n    const {name, description, logo} = user.company;\r\n    //show the password as *****\r\n    const hiddenPassword = password.split(\"\").map(character => \"*\");\r\n\r\n    //store the selected file in state\r\n    const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n   /** ================================================ ADD LOGO ================================================*/\r\n\r\n   //activate the click method on the invisible input box when the logo is clicked \r\n   const activateFileSelector=()=>{\r\n        const inputBox = document.getElementById('inputFile');\r\n        inputBox.click();\r\n    }\r\n    \r\n    //get the file selected from the file picker and store it in state\r\n    const fileSelectedHandler = event =>{\r\n        setSelectedFile(event.target.files[0]); \r\n    }\r\n\r\n    //upload the logo file to firebase storage in the trainer's\r\n    const fileUpload=()=>{\r\n        if(!!selectedFile){\r\n            let bucketName = match.params.trainerId;\r\n            let storageRef = firebase.storage().ref(`/${bucketName}/${selectedFile.name}`);\r\n            let uploadTask = storageRef.put(selectedFile);\r\n            uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED,\r\n                ()=>{\r\n                    console.log(\"Uploading ...\")\r\n                },\r\n                ()=>{\r\n                    console.log(\"Upload Unsuccessful\");\r\n                },\r\n                ()=>{\r\n                    //once the file is uploaded get the url and save it to the db and update the trainer component\r\n                    let storageLoc = firebase.storage().ref();\r\n                    storageLoc.child(`/${bucketName}/${selectedFile.name}`).getDownloadURL()\r\n                    .then((url)=>{\r\n                        const logo={logo:url}\r\n                        axios.put(`http://localhost:8080/trainer/${match.params.trainerId}/updateLogo`, logo)\r\n                        .then(res =>{\r\n                            updateTrainer();\r\n                        })\r\n                        .catch(err=>{\r\n                            console.log(err);\r\n                        })\r\n                    })\r\n                    .catch(err=>{\r\n                        console.log(err);\r\n                    })\r\n                }   \r\n            )\r\n        }\r\n    }\r\n\r\n    //fire the fileupload function any time the selectedFile is changed in state\r\n    useEffect(()=>{\r\n        fileUpload()\r\n    },[selectedFile])\r\n    \r\n    return (\r\n        <div className=\"user-profile\" style={{backgroundImage: \"url('/images/main2.jfif')\"}}>\r\n            <p className=\"user-profile__type\">Profile: Trainer</p>\r\n            <div className=\"user-profile__bottom\">\r\n                <div className=\"user-profile__description\">\r\n                   \r\n                    <div className=\"user-profile__description-logo-container\">\r\n\r\n                        {/* render the logo from the db - if there isn't one use the image icon stored on the front end */}\r\n                        <img src={logo !==\"\" ? logo : \"/icons/image.svg\"} alt =\"company logo\" className=\"user-profile__description-logo\" onClick={activateFileSelector}/>\r\n                        \r\n                        <input id=\"inputFile\" type=\"file\" className=\"user-profile__description-input\" onChange={fileSelectedHandler}></input>\r\n\r\n                    </div>\r\n                    <div className=\"user-profile__description-content\">\r\n                        <p className=\"user-profile__description-company\">{name}</p>\r\n                        <p className=\"user-profile__description-description\">{description}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"component user-profile__container\">\r\n                    <p className=\"component-title user-profile__title\">{`${fname} ${lname}`}</p>\r\n                    \r\n                    <div className=\"user-profile__sign-in\">                       \r\n                        <p className=\"user-label\" >UserName: </p>\r\n                        <p className=\"user-text\"> {username}</p>\r\n\r\n                        <p className=\"user-label\" >Password: </p>\r\n                        <p className=\"user-text\"> {hiddenPassword}</p>\r\n                    </div>\r\n\r\n                    <div className=\"user-profile__details\">\r\n                        <div className=\"user-profile__contact\">\r\n                            <p className=\"user-label user-profile__contact-title\"> CONTACT </p> \r\n                            <div className=\"user-profile-item\">\r\n                                <img className=\"contact-icon\" src=\"/icons/email-icon.svg\" alt=\"email\"/><p>{email}</p>\r\n                            </div>\r\n                            <div className=\"user-profile-item\">\r\n                                <img className=\"contact-icon\" src=\"/icons/phone-icon.svg\" alt=\"phone number\"/><p>{phone}</p>\r\n                            </div>\r\n\r\n                            <div className=\"user-profile__social\">\r\n                                <a href={facebook} target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"contact-icon--social\" src=\"/icons/facebook-icon.svg\" alt=\"facebook\"/></a>\r\n                                <a href={twitter} target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"contact-icon--social\" src=\"/icons/twitter-icon.svg\" alt=\"twitter\"/></a>\r\n                                <a href={instagram} target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"contact-icon--social\" src=\"/icons/instagram-icon.svg\" alt=\"instagram\"/></a>\r\n                                <a href={linkedIn} target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"contact-icon--social\" src=\"/icons/linkedin-icon.svg\" alt=\"linked-in\"/></a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user-profile__address\">\r\n                                <p className=\"user-label user-profile__address-title\">ADDRESS</p>\r\n                                <p className=\"user-profile__address-item\">{address}</p>\r\n                                <p className=\"user-profile__address-item\">{`${city}, ${province}, ${country}`}</p>\r\n                                <p className=\"user-profile__address-item\">{postal}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* render the modalcontainer along with the button used to trigger it for updating the user profile */}\r\n                    <div className=\"user-profile__update\">\r\n                        <ModalContainer \r\n                            modalName = \"updateUser\" \r\n                            modalType = \"update\" \r\n                            buttonText=\"Update\" \r\n                            buttonType=\"image\" \r\n                            url=\"/icons/user-edit.svg\" \r\n                            information={user} onSubmit={updateUserProfile}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Schedule\\Schedule.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\SideBar\\SideBar.jsx",["174"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ProgramContent\\ProgramContent.jsx",[],["175","176"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientProfile\\ClientProfile.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientLessons\\ClientLessons.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientList\\ClientList.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\List\\List.jsx",["177"],"import React from 'react';\r\n\r\nimport './List.scss';\r\n\r\nimport ModalContainer from '../../components/ModalContainer/ModalContainer';\r\n\r\n\r\nfunction List({id, content, link, description, deleteBtn, deleteFunction, list, deleteType}) {\r\n    return (\r\n        <div className=\"list__item\">\r\n            <a href={link} className=\"list__item-name\" target=\"_blank\">{content}</a>\r\n            <div className=\"list__right\" >\r\n                {description && <p className=\"list__right-type\">{description}</p>}\r\n                \r\n                {/* conditionally renders a delete button depending on the deleteType variable - won't show for current lesson - don't want to allow deletion */}\r\n                {(deleteType !== \"modal\" && deleteBtn) && <button id={id} onClick={(event)=>deleteFunction(event, list)} className=\"list__right-delete\"> x </button>}\r\n                \r\n                {deleteType===\"modal\" &&\r\n                    <ModalContainer \r\n                        modalType = \"delete\" \r\n                        modalName = \"delete\" \r\n                        buttonText=\"x\" \r\n                        onSubmit={deleteFunction}\r\n                        deleteString= {content}\r\n                        deleteId={id}\r\n                        buttonType=\"x\"\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List\r\n",["178","179"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ModalContainer\\ModalContainer.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ProgramBar\\ProgramBar.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\TriggerModalButton\\TriggerModalButton.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Modal\\Modal.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\PersonalDetailsForm\\PersonalDetailsForm.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewClientForm\\NewClientForm.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewProgramForm\\NewProgramForm.jsx",["180"],"import React from 'react'\r\nimport \"./NewProgramForm.scss\";\r\n\r\nfunction NewProgramForm({onSubmit, closeModal, information}) {\r\n    \r\n    if (!information){\r\n        var information = {name:\"\", description:\"\"}\r\n    }\r\n\r\n    const {name, description} = information;\r\n\r\n    const handleSubmit=(event)=>{\r\n        onSubmit(event);\r\n        closeModal();\r\n    }\r\n    return (\r\n        <form id=\"modal-form\" className=\"modal-form\" onSubmit={handleSubmit} >\r\n            <div className=\"new-program__input\">\r\n                <input className=\"modal-form__input new-program__text\" id=\"programName\" name=\"programName\" type=\"text\" defaultValue={name} placeholder=\"Enter Program Name\" required></input>\r\n                <textarea className=\"modal-form__input new-program__textarea\" form=\"modal-form\" wrap=\"hard\" name=\"programDescription\" id=\"programDescription\" defaultValue={description} placeholder=\"Enter Program Description\" rows=\"10\" cols=\"120\"></textarea>\r\n            </div>\r\n            \r\n            <div className=\"modal-form__submit\">\r\n                <button className=\"modal-form__submit-cancel\" type=\"button\" onClick={closeModal}>Cancel</button>\r\n                <button className=\"modal-form__submit-button\" id=\"submit\" type=\"submit\" form=\"modal-form\">Submit</button>\r\n            </div>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewProgramForm\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\firebase.js",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DeleteModal\\DeleteModal.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonDetailsForm\\LessonDetailsForm.jsx",["181","182"],"import React from 'react'\r\nimport './LessonDetailsForm.scss';\r\n\r\nfunction LessonDetailsForm({onSubmit, closeModal, lesson}) {\r\n    \r\n    if (!lesson){\r\n        var location = {name:\"\", address:\"\", city:\"\", province:\"\", country:\"\"}\r\n        var lesson = {date:\"\", time:\"\", location}\r\n    }\r\n    var {date, time, location} = lesson;\r\n    var {name,address, city, province, country} = location;   \r\n\r\n    const handleSubmit=(event)=>{\r\n        onSubmit(event);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <form id=\"modal-form\" className=\"modal-form\" onSubmit={handleSubmit} >\r\n\r\n            <div className=\"modal-form__when\">\r\n                <div className=\"modal-form__section modal-form__lesson-name\">\r\n                    <input className=\"modal-form__input\" id=\"lessonName\" name=\"lessonName\" type=\"text\" defaultValue={lesson.name} required></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"fname\">Lesson Name</label>\r\n                </div>\r\n     \r\n                <div className=\"modal-form__section\">\r\n                    <input className=\"modal-form__input modal-form__input--date \" id=\"date\" name=\"date\" type=\"date\"  defaultValue={date}></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"date\">Date</label>\r\n                </div>\r\n                <div className=\"modal-form__section\">   \r\n                    <input className=\"modal-form__input modal-form__input--time\" id=\"time\" name=\"time\" type=\"time\"  defaultValue={time}></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"time\">Time</label>\r\n                </div>    \r\n            </div>\r\n\r\n            <div className=\"modal-form__section modal-form__lesson-name\">\r\n                <input className=\"modal-form__input\" id=\"locationName\" name=\"locationName\" type=\"text\" defaultValue={name}></input>\r\n                <label className=\"modal-form__label\" htmlFor=\"locationName\">Location Name</label>\r\n            </div>\r\n            \r\n            <div className=\"modal-form__address\">\r\n                <div className=\"modal-form__section\">\r\n                    <input className=\"modal-form__input modal-form__input--address\" id=\"address\" name=\"address\" type=\"text\" placeholder=\"Address\" defaultValue={address} ></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"address\">Street</label>\r\n                </div>\r\n                <div className=\"modal-form__section\">\r\n                    <input className=\"modal-form__input \" id=\"city\" name=\"city\" type=\"text\" placeholder=\"City\" defaultValue={city}></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"city\">City</label>\r\n                </div>\r\n                <div className=\"modal-form__section\">\r\n                    <input className=\"modal-form__input modal-form__input--province\" id=\"province\" name=\"province\" type=\"text\" placeholder=\"Province\" defaultValue={province}></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"province\">Province</label>\r\n                </div>\r\n                <div className=\"modal-form__section\">\r\n                    <input className=\"modal-form__input modal-form__input--country\" id=\"country\" name=\"country\" type=\"text\" placeholder=\"Country\" defaultValue={country}></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"country\">Country</label>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-form__submit\">\r\n                <button className=\"modal-form__submit-cancel\" type=\"button\" onClick={closeModal}>Cancel</button>\r\n                <button className=\"modal-form__submit-button\" id=\"submit\" type=\"submit\" form=\"modal-form\">Submit</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LessonDetailsForm","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonResources\\LessonResources.jsx",["183"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\AppliedResources\\AppliedResources.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DNDList\\DNDList.jsx",["184"],"import React from 'react';\r\nimport { useDrag } from 'react-dnd';\r\n\r\nimport './DNDList.scss';\r\n\r\nconst ItemTypes = {\r\n    CARD:'card',\r\n};\r\n\r\n/**\r\n * \r\n * @param {string} id - resource id \r\n * @param {string} content - text to render\r\n * @param {string} link - url for text to link to\r\n * @param {string} description- type of resource if it is a resource list\r\n * \r\n */\r\nfunction DNDList({id, content, link, description}) {\r\n\r\n    // argument1 = props from the monitor\r\n    const[{isDragging}, drag] = useDrag({\r\n        item:{\r\n            type:ItemTypes.CARD,\r\n            //type is required - can pass anything else you want with it - here i want the id\r\n            id: id,\r\n        },\r\n        //talks to the monitor and sets the isDragging prop to true when is dragging\r\n        collect:monitor=>({\r\n            isDragging:!!monitor.isDragging(),\r\n        }),\r\n    })\r\n\r\n    return (\r\n        <div ref={drag} className=\"list__item\" opacity={isDragging ? '1' : '1'}>\r\n            <a href={link} className=\"list__item-name\" target=\"_blank\">{content}</a>\r\n            <div className=\"list__right\" >\r\n                {description && <p className=\"list__right-type\">{description}</p>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DNDList\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Map\\Map.jsx",["185"],"import React, {useState, useCallback} from 'react';\r\nimport {GoogleMap, Marker, InfoWindow, useJsApiLoader} from '@react-google-maps/api';\r\n\r\nimport mapStyles from '../../mapStyles';\r\n\r\nconst Map = ({mapLocation, containerSize}) => {\r\n \r\n    const [showInfo, setShowInfo]=useState(false);\r\n    const [map, setMap] = useState(null);\r\n\r\n    const {isLoaded,loadError} = useJsApiLoader({\r\n        id:'google-map-script',\r\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_KEY\r\n    })\r\n\r\n    const onLoad = useCallback(map=>{\r\n        const bounds = new window.google.maps.LatLngBounds();\r\n        map.fitBounds(bounds);\r\n        setMap(map);\r\n    },[]);\r\n\r\n    const onUnmount = useCallback(map=>{\r\n        setMap(null)\r\n    },[]);\r\n\r\n    if (loadError) {\r\n        return <div>Map cannot be loaded right now, sorry.</div>\r\n      }\r\n\r\n    return isLoaded ? (\r\n        <GoogleMap \r\n            // defaultZoom={10}\r\n            center={mapLocation}\r\n            zoom={10} \r\n            onLoad={onLoad}\r\n            onUnmount={onUnmount}\r\n            options={{styles:mapStyles, zoomControl:false, mapTypeControl:false}}\r\n            mapContainerStyle={containerSize}\r\n        >\r\n\r\n        <Marker \r\n            position={mapLocation} \r\n            onClick={()=>{setShowInfo(true)}}\r\n            // icon={{\r\n            //     url:\"/icons/map-marker.svg\",\r\n            //     scaledSize: new window.google.maps.Size(20,40)\r\n            // }}\r\n        /> \r\n\r\n        {showInfo &&\r\n            <InfoWindow \r\n                position={{lat:mapLocation.lat, lng:mapLocation.lng}}\r\n                onCloseClick={()=>{setShowInfo(false)}}\r\n                >\r\n                <div>\r\n                    <h2>Lesson details</h2>\r\n                    <p> Lesson Name</p>\r\n                </div>\r\n            </InfoWindow>\r\n        }\r\n        </GoogleMap>\r\n    ):<></>\r\n}\r\n\r\nexport default React.memo(Map)\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\mapStyles.js",["186"],"//googe map styling - downloaded from snazzy maps\r\nexport default [\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"weight\": \"2.00\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#9c9c9c\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels.text\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#f2f2f2\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape.man_made\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": -100\r\n            },\r\n            {\r\n                \"lightness\": 45\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#eeeeee\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#7b7b7b\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"simplified\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"labels.icon\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#46bcec\"\r\n            },\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#c8d7d4\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#070707\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    }\r\n]","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Client\\Client.jsx",["187"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LoginModal\\LoginModal.jsx",["188","189","190"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LoginForm\\LoginForm.jsx",["191"],"import React from 'react';\r\n\r\nimport './LoginForm.scss';\r\n\r\nfunction LoginForm({onSubmit, profile, signIn}) {\r\n    \r\n    const profileType = profile.substring(5, profile.length);\r\n        \r\n    if(!!signIn){\r\n        return (\r\n            <form id=\"login-form\" className=\"login__form\" onSubmit={(event)=> onSubmit(event, profileType)} >\r\n                <div className=\"login__form-input\">\r\n                    <input className=\"modal-form__input login__form-inputbox\" id=\"username\" name=\"username\" type=\"text\" placeholder=\"Username\" required></input>\r\n                    <input className=\"modal-form__input login__form-inputbox\" id=\"password\" name=\"password\" type=\"password\" placeholder=\"Password\" required></input>\r\n                </div>\r\n                <button className=\"modal-form__submit-button login__form-submit\" id=\"submit\" type=\"submit\" form=\"login-form\">Sign In</button>\r\n            </form>\r\n        )\r\n    }else{\r\n        return(\r\n            <form id=\"login-form\" className=\"login__form\" onSubmit={onSubmit} >\r\n                <div className=\"login__form-input\">\r\n                    <input className=\"modal-form__input login__form-inputbox\" id=\"username\" name=\"username\" type=\"text\" placeholder=\"Username\" required></input>\r\n                    <input className=\"modal-form__input login__form-inputbox\" id=\"password\" name=\"password\" type=\"password\" placeholder=\"Password\" required></input>\r\n                    <input className=\"modal-form__input login__form-inputbox\" id=\"email\" name=\"email\" type=\"email\" placeholder=\"Email\" required></input>\r\n                    <input className=\"modal-form__input login__form-inputbox\" id=\"fname\" name=\"fname\" type=\"text\" placeholder=\"First Name\" required></input>\r\n                    <input className=\"modal-form__input login__form-inputbox\" id=\"lname\" name=\"lname\" type=\"lname\" placeholder=\"Last Name\" required></input>\r\n                    \r\n                </div>\r\n                <button className=\"modal-form__submit-button login__form-submit\" id=\"submit\" type=\"submit\" form=\"login-form\">Join Us</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginForm\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\GridList\\GridList.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NoteModal\\NoteModal.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\EmptyPage\\EmptyPage.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\ClientWelcome\\ClientWelcome.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Lessons\\Lessons.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\NextLesson\\NextLesson.jsx",["192"],"import React, {useState,useEffect}from 'react';\r\nimport axios from 'axios';\r\n\r\nimport \"./NextLesson.scss\";\r\n\r\nimport Map from '../../components/Map/Map';\r\nimport GridList from '../../components/GridList/GridList';\r\n\r\n/**\r\n * @param {Object} nextLesson - contains all the information for the next lesson\r\n */\r\nfunction NextLesson({nextLesson}) {\r\n\r\n    const {address, city, province} = nextLesson.location\r\n\r\n    // store the geocoded (lat,long) location of the map in state\r\n    const [mapLocation, setMapLocation]=useState(null);\r\n\r\n    useEffect(()=>{\r\n        //send the location of the next lesson to the api to geocode the location for google maps\r\n        axios.get(`http://www.mapquestapi.com/geocoding/v1/address?key=amHyO923YUE511fynEWxbf7Gf5S45VRP&street=${address}&city=${city}&state=${province}`)\r\n        .then(res=>{\r\n            //once the location is geocoded set it in state\r\n            setMapLocation(res.data.results[0].locations[0].displayLatLng);\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    },[])\r\n\r\n    return (\r\n    <div className=\"next-lesson\" style={{backgroundImage: \"url('/images/main2.jfif')\"}}>\r\n        <h1 className=\"next-lesson__title\">NEXT LESSON</h1>\r\n        <div className=\"component next-lesson__container\">\r\n            <h2 className=\"component-title\">{nextLesson.name}</h2>\r\n                <div className = \"current-lesson__top next-lesson__top\">\r\n                    {/* shows the details for the lesson */}\r\n                    <div className=\"next-lesson__top-left\">\r\n                    <h2 className=\"section-title-resources next-lesson__subtitle\">Details</h2>\r\n                        <div className=\"current-lesson__top-details next-lesson__top-details\">\r\n                            <div className=\"current-lesson__top-details-text\">\r\n                                <div className=\"current-lesson__top-details-where\">\r\n                                    <p className=\"current-lesson__top-details-title\">Where</p>\r\n                                    <p className=\"current-lesson__top-details-item next-lesson__location\">{nextLesson.location.name}</p>\r\n                                    <p className=\"current-lesson__top-details-item\">{`${nextLesson.location.address}, ${nextLesson.location.city}`}</p>\r\n                                </div>\r\n                                <div className=\"current-lesson__top-details-when\">\r\n                                    <p className=\"current-lesson__top-details-title\">When</p>\r\n                                    <p className=\"current-lesson__top-details-item\">{`Date: ${nextLesson.date}`}</p>\r\n                                    <p className=\"current-lesson__top-details-item\">{`Time: ${nextLesson.time}`}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    \r\n                        {/* render the google map for the lesson location */}\r\n                        <div className = \"client__contact-map\">\r\n                            <Map\r\n                                mapLocation={mapLocation}\r\n                                containerSize={{width:\"346px\", height:\"282px\"}}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {/* render the resources for the next lesson */}\r\n                    <div className=\"next-lesson__resources\">\r\n                        <h2 className=\"section-title-resources next-lesson__subtitle\">Resources</h2>\r\n                        <div className=\"next-lesson__resources-list\">\r\n                            {nextLesson.resources.map(resource=> \r\n                                <GridList \r\n                                    key={resource.id} \r\n                                    content={resource.name}\r\n                                    resourceType={resource.type} \r\n                                    id={resource.id} \r\n                                    link={resource.url} \r\n                                    description={resource.type} \r\n                                    deleteBtn={false}\r\n                                    deleteType=\"noDelete\" \r\n                                    slider={true}\r\n                                />)}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* render notes for the next lesson */}\r\n                    <div className=\"\">\r\n                        <h2 className=\"section-title-resources next-lesson__subtitle\">Notes</h2>\r\n                        <div className = \"client__notes client-side__notepaper-next\" style={{backgroundImage: \"url('/images/notePaper.png')\"}}>\r\n                            <div className = \"client__notes-body client-side__notes\">\r\n                                <div className=\"client__notes-text\"> {nextLesson.notes}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default NextLesson\r\n",{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":218,"column":54,"nodeType":"199","messageId":"200","endLine":218,"endColumn":86},{"ruleId":"201","severity":1,"message":"202","line":78,"column":7,"nodeType":"203","endLine":78,"endColumn":21,"suggestions":"204"},{"ruleId":"205","severity":1,"message":"206","line":59,"column":29,"nodeType":"207","messageId":"208","endLine":59,"endColumn":40},{"ruleId":"193","replacedBy":"209"},{"ruleId":"195","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":11,"column":13,"nodeType":"213","endLine":11,"endColumn":72},{"ruleId":"193","replacedBy":"214"},{"ruleId":"195","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":7,"column":13,"nodeType":"207","messageId":"218","endLine":7,"endColumn":24},{"ruleId":"216","severity":1,"message":"219","line":8,"column":13,"nodeType":"207","messageId":"218","endLine":8,"endColumn":19},{"ruleId":"216","severity":1,"message":"220","line":10,"column":22,"nodeType":"207","messageId":"218","endLine":10,"endColumn":30},{"ruleId":"205","severity":1,"message":"221","line":137,"column":12,"nodeType":"207","messageId":"208","endLine":137,"endColumn":18},{"ruleId":"211","severity":1,"message":"212","line":35,"column":13,"nodeType":"213","endLine":35,"endColumn":72},{"ruleId":"205","severity":1,"message":"222","line":9,"column":12,"nodeType":"207","messageId":"208","endLine":9,"endColumn":15},{"ruleId":"223","severity":1,"message":"224","line":2,"column":1,"nodeType":"225","endLine":171,"endColumn":2},{"ruleId":"201","severity":1,"message":"226","line":46,"column":7,"nodeType":"203","endLine":46,"endColumn":9,"suggestions":"227"},{"ruleId":"205","severity":1,"message":"228","line":51,"column":43,"nodeType":"207","messageId":"208","endLine":51,"endColumn":48},{"ruleId":"205","severity":1,"message":"229","line":51,"column":50,"nodeType":"207","messageId":"208","endLine":51,"endColumn":55},{"ruleId":"205","severity":1,"message":"230","line":76,"column":41,"nodeType":"207","messageId":"208","endLine":76,"endColumn":49},{"ruleId":"231","severity":1,"message":"232","line":24,"column":117,"nodeType":"213","endLine":24,"endColumn":177},{"ruleId":"201","severity":1,"message":"233","line":29,"column":7,"nodeType":"203","endLine":29,"endColumn":9,"suggestions":"234"},"no-native-reassign",["235"],"no-negated-in-lhs",["236"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'opt'.","ArrowFunctionExpression","unsafeRefs","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fileUpload'. Either include it or remove the dependency array.","ArrayExpression",["237"],"no-unused-vars","'trainerName' is assigned a value but never used.","Identifier","unusedVar",["235"],["236"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement",["235"],["236"],"no-redeclare","'information' is already defined.","redeclared","'lesson' is already defined.","'location' is already defined.","'isOver' is assigned a value but never used.","'map' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'match.params.clientId'. Either include it or remove the dependency array.",["238"],"'fname' is assigned a value but never used.","'lname' is assigned a value but never used.","'username' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'address', 'city', and 'province'. Either include them or remove the dependency array.",["239"],"no-global-assign","no-unsafe-negation",{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},"Update the dependencies array to be: [fileUpload, selectedFile]",{"range":"246","text":"247"},"Update the dependencies array to be: [match.params.clientId]",{"range":"248","text":"249"},"Update the dependencies array to be: [address, city, province]",{"range":"250","text":"251"},[3183,3197],"[fileUpload, selectedFile]",[1657,1659],"[match.params.clientId]",[1055,1057],"[address, city, province]"]