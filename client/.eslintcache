[{"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\index.js":"1","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\reportWebVitals.js":"2","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\App.js":"3","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Trainer\\Trainer.jsx":"4","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Intro\\Intro.jsx":"5","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Programs\\Programs.jsx":"6","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Clients\\Clients.jsx":"7","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\User\\User.jsx":"8","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Schedule\\Schedule.jsx":"9","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\SideBar\\SideBar.jsx":"10","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ProgramContent\\ProgramContent.jsx":"11","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientProfile\\ClientProfile.jsx":"12","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientLessons\\ClientLessons.jsx":"13","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientList\\ClientList.jsx":"14","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\List\\List.jsx":"15","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ModalContainer\\ModalContainer.jsx":"16","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ProgramBar\\ProgramBar.jsx":"17","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\TriggerModalButton\\TriggerModalButton.jsx":"18","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Modal\\Modal.jsx":"19","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\PersonalDetailsForm\\PersonalDetailsForm.jsx":"20","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewClientForm\\NewClientForm.jsx":"21","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewProgramForm\\NewProgramForm.jsx":"22","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\firebase.js":"23","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DeleteModal\\DeleteModal.jsx":"24","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonDetailsForm\\LessonDetailsForm.jsx":"25","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonResources\\LessonResources.jsx":"26","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\AppliedResources\\AppliedResources.jsx":"27","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DNDList\\DNDList.jsx":"28","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Map\\Map.jsx":"29","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\mapStyles.js":"30","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Client\\Client.jsx":"31","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LoginModal\\LoginModal.jsx":"32","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LoginForm\\LoginForm.jsx":"33","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\GridList\\GridList.jsx":"34","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NoteModal\\NoteModal.jsx":"35","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\EmptyPage\\EmptyPage.jsx":"36","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\ClientWelcome\\ClientWelcome.jsx":"37","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Lessons\\Lessons.jsx":"38","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\NextLesson\\NextLesson.jsx":"39"},{"size":479,"mtime":1609516748053,"results":"40","hashOfConfig":"41"},{"size":362,"mtime":499162500000,"results":"42","hashOfConfig":"41"},{"size":2230,"mtime":1612102418384,"results":"43","hashOfConfig":"41"},{"size":16510,"mtime":1612100999458,"results":"44","hashOfConfig":"41"},{"size":1166,"mtime":1611921623103,"results":"45","hashOfConfig":"41"},{"size":12480,"mtime":1611971425414,"results":"46","hashOfConfig":"41"},{"size":5891,"mtime":1612100999456,"results":"47","hashOfConfig":"41"},{"size":4204,"mtime":1611928901201,"results":"48","hashOfConfig":"41"},{"size":168,"mtime":1611712457260,"results":"49","hashOfConfig":"41"},{"size":8404,"mtime":1612102935360,"results":"50","hashOfConfig":"41"},{"size":872,"mtime":1611172017746,"results":"51","hashOfConfig":"41"},{"size":8537,"mtime":1612100999461,"results":"52","hashOfConfig":"41"},{"size":18925,"mtime":1612100999460,"results":"53","hashOfConfig":"41"},{"size":1589,"mtime":1611959536901,"results":"54","hashOfConfig":"41"},{"size":1371,"mtime":1611872490171,"results":"55","hashOfConfig":"41"},{"size":4364,"mtime":1611943402883,"results":"56","hashOfConfig":"41"},{"size":961,"mtime":1609618837760,"results":"57","hashOfConfig":"41"},{"size":830,"mtime":1611921640062,"results":"58","hashOfConfig":"41"},{"size":2781,"mtime":1611971444526,"results":"59","hashOfConfig":"41"},{"size":4507,"mtime":1611767084038,"results":"60","hashOfConfig":"41"},{"size":2549,"mtime":1611792642979,"results":"61","hashOfConfig":"41"},{"size":1366,"mtime":1611971525431,"results":"62","hashOfConfig":"41"},{"size":464,"mtime":1611194250386,"results":"63","hashOfConfig":"41"},{"size":2487,"mtime":1611960259438,"results":"64","hashOfConfig":"41"},{"size":2236,"mtime":1611970003067,"results":"65","hashOfConfig":"41"},{"size":8228,"mtime":1612057283569,"results":"66","hashOfConfig":"41"},{"size":1589,"mtime":1611882658451,"results":"67","hashOfConfig":"41"},{"size":1258,"mtime":1611520289890,"results":"68","hashOfConfig":"41"},{"size":1925,"mtime":1612100999462,"results":"69","hashOfConfig":"41"},{"size":3522,"mtime":1611712457269,"results":"70","hashOfConfig":"41"},{"size":2246,"mtime":1612102161170,"results":"71","hashOfConfig":"41"},{"size":4786,"mtime":1612009741336,"results":"72","hashOfConfig":"41"},{"size":2138,"mtime":1611943304126,"results":"73","hashOfConfig":"41"},{"size":3102,"mtime":1612033861068,"results":"74","hashOfConfig":"41"},{"size":2288,"mtime":1612009721296,"results":"75","hashOfConfig":"41"},{"size":978,"mtime":1611934572594,"results":"76","hashOfConfig":"41"},{"size":5738,"mtime":1612100999455,"results":"77","hashOfConfig":"41"},{"size":3584,"mtime":1612034279560,"results":"78","hashOfConfig":"41"},{"size":4674,"mtime":1612100999457,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"l44x0r",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\index.js",[],["168","169"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\reportWebVitals.js",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\App.js",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Trainer\\Trainer.jsx",["170"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Intro\\Intro.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Programs\\Programs.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Clients\\Clients.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\User\\User.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Schedule\\Schedule.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\SideBar\\SideBar.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ProgramContent\\ProgramContent.jsx",[],["171","172"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientProfile\\ClientProfile.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientLessons\\ClientLessons.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientList\\ClientList.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\List\\List.jsx",["173"],"import React from 'react';\r\n\r\nimport './List.scss';\r\n\r\nimport ModalContainer from '../../components/ModalContainer/ModalContainer';\r\n\r\n\r\nfunction List({id, content, link, description, deleteBtn, deleteFunction, list, deleteType}) {\r\n    return (\r\n        <div className=\"list__item\">\r\n            <a href={link} className=\"list__item-name\" target=\"_blank\">{content}</a>\r\n            <div className=\"list__right\" >\r\n                {description && <p className=\"list__right-type\">{description}</p>}\r\n                \r\n                {/* conditionally renders a delete button depending on the deleteType variable - won't show for current lesson - don't want to allow deletion */}\r\n                {(deleteType !== \"modal\" && deleteBtn) && <button id={id} onClick={(event)=>deleteFunction(event, list)} className=\"list__right-delete\"> x </button>}\r\n                \r\n                {deleteType===\"modal\" &&\r\n                    <ModalContainer \r\n                        modalType = \"delete\" \r\n                        modalName = \"delete\" \r\n                        buttonText=\"x\" \r\n                        onSubmit={deleteFunction}\r\n                        deleteString= {content}\r\n                        deleteId={id}\r\n                        buttonType=\"x\"\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List\r\n",["174","175"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ModalContainer\\ModalContainer.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ProgramBar\\ProgramBar.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\TriggerModalButton\\TriggerModalButton.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Modal\\Modal.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\PersonalDetailsForm\\PersonalDetailsForm.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewClientForm\\NewClientForm.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewProgramForm\\NewProgramForm.jsx",["176"],"import React from 'react'\r\nimport \"./NewProgramForm.scss\";\r\n\r\nfunction NewProgramForm({onSubmit, closeModal, information}) {\r\n    \r\n    if (!information){\r\n        var information = {name:\"\", description:\"\"}\r\n    }\r\n\r\n    const {name, description} = information;\r\n\r\n    const handleSubmit=(event)=>{\r\n        onSubmit(event);\r\n        closeModal();\r\n    }\r\n    return (\r\n        <form id=\"modal-form\" className=\"modal-form\" onSubmit={handleSubmit} >\r\n            <div className=\"new-program__input\">\r\n                <input className=\"modal-form__input new-program__text\" id=\"programName\" name=\"programName\" type=\"text\" defaultValue={name} placeholder=\"Enter Program Name\" required></input>\r\n                <textarea className=\"modal-form__input new-program__textarea\" form=\"modal-form\" wrap=\"hard\" name=\"programDescription\" id=\"programDescription\" defaultValue={description} placeholder=\"Enter Program Description\" rows=\"10\" cols=\"150\"></textarea>\r\n            </div>\r\n            \r\n            <div className=\"modal-form__submit\">\r\n                <button className=\"modal-form__submit-cancel\" type=\"button\" onClick={closeModal}>Cancel</button>\r\n                <button className=\"modal-form__submit-button\" id=\"submit\" type=\"submit\" form=\"modal-form\">Submit</button>\r\n            </div>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewProgramForm\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\firebase.js",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DeleteModal\\DeleteModal.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonDetailsForm\\LessonDetailsForm.jsx",["177","178"],"import React from 'react'\r\nimport './LessonDetailsForm.scss';\r\n\r\nfunction LessonDetailsForm({onSubmit, closeModal, lesson}) {\r\n    \r\n    if (!lesson){\r\n        var location = {name:\"\", address:\"\", city:\"\", province:\"\", country:\"\"}\r\n        var lesson = {date:\"\", time:\"\", location}\r\n    }\r\n    var {date, time, location} = lesson;\r\n    var {name,address, city, province, country} = location;   \r\n\r\n    const handleSubmit=(event)=>{\r\n        onSubmit(event);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <form id=\"modal-form\" className=\"modal-form\" onSubmit={handleSubmit} >\r\n            <div>\r\n                <input className=\"modal-form__input\" id=\"lessonName\" name=\"lessonName\" type=\"text\" placeholder=\"Lesson Name\" defaultValue={lesson.name} required></input>\r\n            </div>\r\n            <div>\r\n                <input className=\"modal-form__input\" id=\"date\" name=\"date\" type=\"date\"  defaultValue={date}></input>\r\n                <input className=\"modal-form__input\" id=\"time\" name=\"time\" type=\"time\"  defaultValue={time}></input>\r\n                \r\n            </div>\r\n            <div>\r\n                <input className=\"modal-form__input\" id=\"locationName\" name=\"locationName\" type=\"text\" placeholder=\"Location\" defaultValue={name}></input>\r\n                <input className=\"modal-form__input\" id=\"address\" name=\"address\" type=\"text\" placeholder=\"Address\" defaultValue={address} ></input>\r\n                <input className=\"modal-form__input\" id=\"city\" name=\"city\" type=\"text\" placeholder=\"City\" defaultValue={city}></input>\r\n                <input className=\"modal-form__input\" id=\"province\" name=\"province\" type=\"text\" placeholder=\"Province\" defaultValue={province}></input>\r\n                <input className=\"modal-form__input\" id=\"country\" name=\"country\" type=\"text\" placeholder=\"Country\" defaultValue={country}></input>\r\n            </div>\r\n            <div className=\"modal-form__submit\">\r\n                <button className=\"modal-form__submit-cancel\" type=\"button\" onClick={closeModal}>Cancel</button>\r\n                <button className=\"modal-form__submit-button\" id=\"submit\" type=\"submit\" form=\"modal-form\">Submit</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LessonDetailsForm","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonResources\\LessonResources.jsx",["179","180"],"import React, {useState, useEffect}  from 'react';\r\nimport {useDrop} from 'react-dnd';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport './LessonResources.scss'\r\n\r\nimport DNDList from '../../components/DNDList/DNDList';\r\nimport AppliedResources from '../../components/AppliedResources/AppliedResources';\r\n\r\n/**\r\n * \r\n * @param {Object} programs - all the trainer's programs\r\n * @param {Object} currentLesson - lesson currently rendered\r\n * @param {Object} currentClient - client currently rendered\r\n */\r\n\r\nfunction LessonResources({programs, currentLesson, currentClient, match}) {\r\n\r\n    console.log(programs);\r\n    const ItemTypes = {\r\n        CARD:'card',\r\n    };\r\n\r\n    const [allResources, setAllResources] = useState(programs);\r\n    \r\n    //resources that are currently being displayed - change based on program chosen\r\n    const[displayResources, setResourceList] = useState(programs.length!==0 ? programs[0].resources : []);\r\n\r\n    //current lesson being rendered - changed based on drag and drop from available resources \r\n    const[currentLessonResources, updateCurrentLesson] = useState(currentLesson);\r\n   \r\n     //update the resources of the current lesson when state changes\r\n    useEffect(() => {\r\n        updateCurrentLesson(currentLesson);\r\n        console.log(displayResources)\r\n    },[currentLesson]);\r\n\r\n    \r\n\r\n    // update the resources being displayed when a program is chosen\r\n    const updateDisplayed = (program)=>{\r\n\r\n        if (document.querySelector(\".active-program\")){\r\n            const previouslyActiveLink = document.querySelector(\".active-program\");\r\n            previouslyActiveLink.classList.remove(\"active-program\");\r\n            console.log(previouslyActiveLink);\r\n            \r\n            const activeLinkElement = document.getElementById(program.id);\r\n            activeLinkElement.classList.add(\"active-program\");\r\n            console.log(activeLinkElement);\r\n        }\r\n        setResourceList(program.resources);\r\n    }\r\n\r\n    //used to remove a resource from the available resources and add it to the lesson resources\r\n    const markAsDone = id => {\r\n\r\n        const sameBox = currentLessonResources.resources.find(resource=> resource.id===id);\r\n        // const sameDisplayBox = displayResources.find(resource=> resource.id===id);\r\n\r\n        if (!sameBox){\r\n            //find the resource to update and set the applied status to true        \r\n            const displays = [...displayResources];\r\n            displays.find(resource=> resource.id === id).applied=true;\r\n                \r\n            const lessonObject = {...currentLessonResources};\r\n            \r\n            // take the id from the resource that was moved, find the data associated with it and push it to the resources of the current lesson\r\n\r\n            console.log(displays.find(resource=> resource.id === id))\r\n\r\n            lessonObject.resources.push(displays.find(resource=> resource.id === id));\r\n\r\n            //update the displaye resources and the lesson resources that are rendered\r\n            setResourceList(displays);\r\n            updateCurrentLesson(lessonObject);\r\n\r\n            //create an array of the ids associated with the updated resources to push to the db\r\n            const updatedResources = lessonObject.resources.map(resource => resource)\r\n            console.log(updatedResources);\r\n\r\n            //update the db with the new lesson resources\r\n            axios.put(`http://localhost:8080/client/${currentClient.userId}/${currentLessonResources.id}/updateResource`, updatedResources)\r\n            .then(res =>{\r\n                console.log(res);\r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const removeResource=(id)=>{\r\n        \r\n        const alreadyDisplayed = displayResources.find(resource=> resource.id===id);\r\n        const sameBox = !!alreadyDisplayed && alreadyDisplayed.applied===false;\r\n\r\n        console.log(alreadyDisplayed);\r\n\r\n        if(!sameBox){\r\n            //find the resource to update and set the applied status to true        \r\n            const available = [...allResources];\r\n            available.forEach(program=>{\r\n                const foundResource = program.resources.find(resource=> resource.id === id)\r\n                if(foundResource){ \r\n                    foundResource.applied=false;\r\n                }\r\n            });\r\n\r\n            const lessonObject = {...currentLessonResources};\r\n            // take the id from the resource that was moved, find the data associated with it and push it to the resources of the current lesson\r\n            const index = lessonObject.resources.findIndex(resource => resource.id === id);\r\n            lessonObject.resources.splice(index,1);\r\n\r\n            //update the display resources and the lesson resources that are rendered\r\n            setAllResources(available);\r\n            updateCurrentLesson(lessonObject);\r\n\r\n            //create an array of the ids associated with the updated resources to push to the db\r\n            const updatedResources = lessonObject.resources.map(resource => resource)\r\n            console.log(updatedResources);\r\n\r\n            // update the db with the new lesson resources\r\n            axios.put(`http://localhost:8080/client/${currentClient.userId}/${currentLessonResources.id}/updateResource`, updatedResources)\r\n            .then(res =>{\r\n                console.log(res);\r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n            })\r\n        }\r\n    }\r\n\r\n    //setup for drop component from lessons ---> available\r\n    const[{isOver}, drop] = useDrop({\r\n        accept: ItemTypes.CARD, //required - tells drop zone it will only accept card components\r\n        drop: (item, monitor)=> removeResource(item.id),\r\n        // collect: monitor => ({\r\n        //     isOver: !!monitor.isOver(),\r\n        // }),\r\n    });\r\n\r\n     if(programs.length===0){\r\n        return(                                     \r\n            // <div onClick={this.addNewLesson} className=\"empty-container\">\r\n            <div className=\"empty-container empty-lesson__resources\">\r\n                {/* <img className=\"empty-container__icon\" src=\"/icons/add-icon.svg\" alt=\"add icon\"></img> */}\r\n                <h2>You Don't have any Programs Yet!</h2>\r\n                <Link to={`/trainer/${match.params.username}/${match.params.trainerId}/programs`} className=\"empty-lesson__resources-link\">Click Here to Add Some Programs and Resources</Link>\r\n            </div>\r\n        )\r\n    \r\n    }else{\r\n\r\n        return (\r\n            <div className=\"current-lesson__resources\">  \r\n                <div className=\"current-lesson__available\">\r\n                    {/* <p>Available Resources</p> */}\r\n                    <div className=\"current-lesson__available-content\">\r\n                        <ul className=\"current-lesson__available-programs\"> \r\n                            {programs.map((program,i) => \r\n                                <Link key={program.id} to={`/trainer/${match.params.username}/${match.params.trainerId}/clients/${currentClient.userId}/lessons`}>\r\n                                    <li id={program.id} onClick={()=>updateDisplayed(program)} \r\n                                        className={i===0 ? \"current-lesson__available-programs-item active-program\" : \"current-lesson__available-programs-item\"}>{program.name}\r\n                                    </li>\r\n                                </Link>)}\r\n                        </ul>\r\n                            <div ref={drop} className=\"list current-lesson__available-resources\">\r\n                                {displayResources.filter(resource => resource.applied === false)\r\n                                    .map(resource=> <DNDList key={resource.id} content={resource.name} link={resource.link} id={resource.id}/>)}\r\n                            </div>                \r\n                    </div>\r\n                </div>\r\n                {/* applied resources component set up as a drop component */}\r\n                <AppliedResources currentLesson={currentLessonResources} markAsDone={markAsDone}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LessonResources\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\AppliedResources\\AppliedResources.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DNDList\\DNDList.jsx",["181"],"import React from 'react';\r\nimport { useDrag } from 'react-dnd';\r\n\r\nimport './DNDList.scss';\r\n\r\nconst ItemTypes = {\r\n    CARD:'card',\r\n};\r\n\r\n/**\r\n * \r\n * @param {string} id - resource id \r\n * @param {string} content - text to render\r\n * @param {string} link - url for text to link to\r\n * @param {string} description- type of resource if it is a resource list\r\n * \r\n */\r\nfunction DNDList({id, content, link, description}) {\r\n\r\n    // argument1 = props from the monitor\r\n    const[{isDragging}, drag] = useDrag({\r\n        item:{\r\n            type:ItemTypes.CARD,\r\n            //type is required - can pass anything else you want with it - here i want the id\r\n            id: id,\r\n        },\r\n        //talks to the monitor and sets the isDragging prop to true when is dragging\r\n        collect:monitor=>({\r\n            isDragging:!!monitor.isDragging(),\r\n        }),\r\n    })\r\n\r\n    return (\r\n        <div ref={drag} className=\"list__item\" opacity={isDragging ? '1' : '1'}>\r\n            <a href={link} className=\"list__item-name\" target=\"_blank\">{content}</a>\r\n            <div className=\"list__right\" >\r\n                {description && <p className=\"list__right-type\">{description}</p>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DNDList\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Map\\Map.jsx",["182"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\mapStyles.js",["183"],"export default [\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"weight\": \"2.00\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#9c9c9c\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels.text\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#f2f2f2\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape.man_made\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": -100\r\n            },\r\n            {\r\n                \"lightness\": 45\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#eeeeee\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#7b7b7b\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"simplified\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"labels.icon\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#46bcec\"\r\n            },\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#c8d7d4\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#070707\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    }\r\n]","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Client\\Client.jsx",["184"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LoginModal\\LoginModal.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LoginForm\\LoginForm.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\GridList\\GridList.jsx",["185"],"import React from 'react';\r\n\r\nimport './GridList.scss';\r\n\r\nimport ModalContainer from '../../components/ModalContainer/ModalContainer';\r\n\r\n\r\nfunction GridList({id, content, modalName, link, deleteBtn, deleteFunction, deleteString, list, deleteType, resourceType, onClick, updateStatus, slider}) {\r\n\r\n    let resourceURL=\"\"\r\n    if (resourceType === \"pdf\"){\r\n        resourceURL = \"/icons/pdf.png\"\r\n    }else if (resourceType === \"video\"){\r\n        resourceURL = \"/icons/video.png\"\r\n    }else if (resourceType === \"doc\"){\r\n        resourceURL = \"/icons/doc-icon.png\"\r\n    }else if (resourceType === \"url\"){\r\n        resourceURL = \"/icons/website-icon.png\"\r\n    }else if (resourceType === \"image\"){\r\n        resourceURL = \"/icons/image.svg\"\r\n    }\r\n\r\n    return (\r\n            <div className={(deleteBtn || !slider) ? \"gridlist__item\" : \"gridlist__item next-lesson__resource\"}>\r\n                {resourceType ?\r\n                    <a className=\"gridlist__item-link\" href={link} target=\"_blank\">\r\n                        <p className=\"gridlist__item-name\">{content}</p>\r\n                    </a>\r\n                    :\r\n                    <div>\r\n                        <p onClick={()=>onClick(id)} className=\"gridlist__item-multi gridlist__item-title\">{content.name ===\"\" ? \"Add Title\" : content.name}</p>\r\n                        <p className=\"gridlist__item-multi\">{content.date}</p>\r\n                        <p className=\"gridlist__item-multi\">{content.time}</p>\r\n                    </div>\r\n                }\r\n\r\n                \r\n                <div className=\"gridlist__bottom\">\r\n                    {(deleteType !== \"modal\" && deleteBtn) && <button id={id} onClick={(event)=>deleteFunction(event, list)} className=\"gridlist__right-delete\"> x </button>}\r\n\r\n                    {(resourceType || !slider) ? \r\n                        resourceType && <img className=\"gridlist__item-image\" src={resourceURL} alt=\"icon\"/>\r\n                        :\r\n                        <div className=\"current-lesson__top-status\">\r\n                            <input onClick={updateStatus} className=\"current-lesson__top-status-check\" type=\"checkbox\" id=\"current\"/>\r\n                            <div className={content.current ? \"slidinggroove slidinggroove-on\" : \"slidinggroove\"}></div>\r\n                            <label className=\"current-lesson__top-status\" htmlFor=\"current\" name=\"current\"><p className=\"current-lesson__top-status-label\"> {content.current && \"Current\"}</p></label>\r\n                        </div>\r\n                    }\r\n                    {deleteType===\"modal\" &&\r\n                        <ModalContainer \r\n                            modalType = \"delete\" \r\n                            modalName = {modalName}\r\n                            buttonType=\"x\" \r\n                            buttonText=\"x\" \r\n                            onSubmit={deleteFunction}\r\n                            deleteString= {deleteString}\r\n                            deleteId={id}\r\n                        />\r\n                    }\r\n                 </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default GridList","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NoteModal\\NoteModal.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\EmptyPage\\EmptyPage.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\ClientWelcome\\ClientWelcome.jsx",["186"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Lessons\\Lessons.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\NextLesson\\NextLesson.jsx",["187"],{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":210,"column":54,"nodeType":"194","messageId":"195","endLine":210,"endColumn":86},{"ruleId":"188","replacedBy":"196"},{"ruleId":"190","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":11,"column":13,"nodeType":"200","endLine":11,"endColumn":72},{"ruleId":"188","replacedBy":"201"},{"ruleId":"190","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":7,"column":13,"nodeType":"205","messageId":"206","endLine":7,"endColumn":24},{"ruleId":"203","severity":1,"message":"207","line":8,"column":13,"nodeType":"205","messageId":"206","endLine":8,"endColumn":19},{"ruleId":"203","severity":1,"message":"208","line":10,"column":22,"nodeType":"205","messageId":"206","endLine":10,"endColumn":30},{"ruleId":"209","severity":1,"message":"210","line":37,"column":7,"nodeType":"211","endLine":37,"endColumn":22,"suggestions":"212"},{"ruleId":"213","severity":1,"message":"214","line":137,"column":12,"nodeType":"205","messageId":"215","endLine":137,"endColumn":18},{"ruleId":"198","severity":1,"message":"199","line":35,"column":13,"nodeType":"200","endLine":35,"endColumn":72},{"ruleId":"213","severity":1,"message":"216","line":10,"column":12,"nodeType":"205","messageId":"215","endLine":10,"endColumn":15},{"ruleId":"217","severity":1,"message":"218","line":1,"column":1,"nodeType":"219","endLine":170,"endColumn":2},{"ruleId":"209","severity":1,"message":"220","line":33,"column":7,"nodeType":"211","endLine":33,"endColumn":9,"suggestions":"221"},{"ruleId":"198","severity":1,"message":"199","line":26,"column":21,"nodeType":"200","endLine":26,"endColumn":84},{"ruleId":"209","severity":1,"message":"222","line":26,"column":7,"nodeType":"211","endLine":26,"endColumn":9,"suggestions":"223"},{"ruleId":"209","severity":1,"message":"222","line":25,"column":7,"nodeType":"211","endLine":25,"endColumn":9,"suggestions":"224"},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'opt'.","ArrowFunctionExpression","unsafeRefs",["225"],["226"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement",["225"],["226"],"no-redeclare","'information' is already defined.","Identifier","redeclared","'lesson' is already defined.","'location' is already defined.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'displayResources'. Either include it or remove the dependency array.","ArrayExpression",["227"],"no-unused-vars","'isOver' is assigned a value but never used.","unusedVar","'map' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'match.params.clientId' and 'match.params.username'. Either include them or remove the dependency array.",["228"],"React Hook useEffect has missing dependencies: 'address', 'city', and 'province'. Either include them or remove the dependency array.",["229"],["230"],"no-global-assign","no-unsafe-negation",{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"235","fix":"237"},"Update the dependencies array to be: [currentLesson, displayResources]",{"range":"238","text":"239"},"Update the dependencies array to be: [match.params.clientId, match.params.username]",{"range":"240","text":"241"},"Update the dependencies array to be: [address, city, province]",{"range":"242","text":"243"},{"range":"244","text":"243"},[1332,1347],"[currentLesson, displayResources]",[1157,1159],"[match.params.clientId, match.params.username]",[926,928],"[address, city, province]",[815,817]]