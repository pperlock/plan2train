[{"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\index.js":"1","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\reportWebVitals.js":"2","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\App.js":"3","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Trainer\\Trainer.jsx":"4","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Intro\\Intro.jsx":"5","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Programs\\Programs.jsx":"6","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Clients\\Clients.jsx":"7","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\User\\User.jsx":"8","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Schedule\\Schedule.jsx":"9","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\SideBar\\SideBar.jsx":"10","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientProfile\\ClientProfile.jsx":"11","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientLessons\\ClientLessons.jsx":"12","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientList\\ClientList.jsx":"13","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\List\\List.jsx":"14","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ModalContainer\\ModalContainer.jsx":"15","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\TriggerModalButton\\TriggerModalButton.jsx":"16","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Modal\\Modal.jsx":"17","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\PersonalDetailsForm\\PersonalDetailsForm.jsx":"18","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewClientForm\\NewClientForm.jsx":"19","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewProgramForm\\NewProgramForm.jsx":"20","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\firebase.js":"21","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DeleteModal\\DeleteModal.jsx":"22","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonDetailsForm\\LessonDetailsForm.jsx":"23","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonResources\\LessonResources.jsx":"24","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\AppliedResources\\AppliedResources.jsx":"25","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DNDList\\DNDList.jsx":"26","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Map\\Map.jsx":"27","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\mapStyles.js":"28","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Client\\Client.jsx":"29","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LoginModal\\LoginModal.jsx":"30","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LoginForm\\LoginForm.jsx":"31","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\GridList\\GridList.jsx":"32","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NoteModal\\NoteModal.jsx":"33","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\EmptyPage\\EmptyPage.jsx":"34","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\ClientWelcome\\ClientWelcome.jsx":"35","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Lessons\\Lessons.jsx":"36","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\NextLesson\\NextLesson.jsx":"37","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Schedule\\event-utils.js":"38"},{"size":479,"mtime":1609516748053,"results":"39","hashOfConfig":"40"},{"size":362,"mtime":499162500000,"results":"41","hashOfConfig":"40"},{"size":2541,"mtime":1613142975940,"results":"42","hashOfConfig":"40"},{"size":19030,"mtime":1613395038842,"results":"43","hashOfConfig":"40"},{"size":1401,"mtime":1612381285891,"results":"44","hashOfConfig":"40"},{"size":13173,"mtime":1613394391076,"results":"45","hashOfConfig":"40"},{"size":5832,"mtime":1613309690582,"results":"46","hashOfConfig":"40"},{"size":7962,"mtime":1613404036510,"results":"47","hashOfConfig":"40"},{"size":2974,"mtime":1613569761643,"results":"48","hashOfConfig":"40"},{"size":8015,"mtime":1613394459354,"results":"49","hashOfConfig":"40"},{"size":8044,"mtime":1613394751435,"results":"50","hashOfConfig":"40"},{"size":19259,"mtime":1613394841252,"results":"51","hashOfConfig":"40"},{"size":2244,"mtime":1613309749579,"results":"52","hashOfConfig":"40"},{"size":1371,"mtime":1611872490171,"results":"53","hashOfConfig":"40"},{"size":4666,"mtime":1613309766843,"results":"54","hashOfConfig":"40"},{"size":1351,"mtime":1612192031846,"results":"55","hashOfConfig":"40"},{"size":3672,"mtime":1613309786139,"results":"56","hashOfConfig":"40"},{"size":10193,"mtime":1612212471965,"results":"57","hashOfConfig":"40"},{"size":5582,"mtime":1613394530205,"results":"58","hashOfConfig":"40"},{"size":1366,"mtime":1612190047381,"results":"59","hashOfConfig":"40"},{"size":457,"mtime":1612972896192,"results":"60","hashOfConfig":"40"},{"size":2577,"mtime":1612207195867,"results":"61","hashOfConfig":"40"},{"size":3783,"mtime":1612217278461,"results":"62","hashOfConfig":"40"},{"size":9218,"mtime":1613394673388,"results":"63","hashOfConfig":"40"},{"size":1589,"mtime":1611882658451,"results":"64","hashOfConfig":"40"},{"size":1284,"mtime":1613143137627,"results":"65","hashOfConfig":"40"},{"size":1849,"mtime":1613397892924,"results":"66","hashOfConfig":"40"},{"size":3603,"mtime":1613395492156,"results":"67","hashOfConfig":"40"},{"size":2939,"mtime":1613395213963,"results":"68","hashOfConfig":"40"},{"size":6454,"mtime":1613394580381,"results":"69","hashOfConfig":"40"},{"size":1670,"mtime":1613154893118,"results":"70","hashOfConfig":"40"},{"size":3187,"mtime":1612220154906,"results":"71","hashOfConfig":"40"},{"size":2184,"mtime":1612182661122,"results":"72","hashOfConfig":"40"},{"size":2151,"mtime":1612272501543,"results":"73","hashOfConfig":"40"},{"size":6365,"mtime":1613397809293,"results":"74","hashOfConfig":"40"},{"size":4277,"mtime":1613394418499,"results":"75","hashOfConfig":"40"},{"size":5102,"mtime":1612962539106,"results":"76","hashOfConfig":"40"},{"size":394,"mtime":1613072882338,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"l44x0r",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"80"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\index.js",[],["163","164"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\reportWebVitals.js",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\App.js",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Trainer\\Trainer.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Intro\\Intro.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Programs\\Programs.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Clients\\Clients.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\User\\User.jsx",["165"],"import React, {useState, useEffect} from 'react'\r\nimport firebase from '../../firebase';\r\nimport axios from 'axios';\r\n\r\nimport \"./User.scss\"\r\n\r\nimport ModalContainer from '../../components/ModalContainer/ModalContainer';\r\n\r\n/**\r\n * @param {Object} user - trainer information\r\n * @param {Function} updateUserProfile - sent from trainer component to update the trainer's user profile\r\n * @param {Object} match - used to access the page's path\r\n * @param {Function} updateTrainer - used to update the state on the trainer component\r\n */\r\n\r\nconst API_URL = process.env.NODE_ENV === \"production\" ? 'https://plan2train.herokuapp.com': 'http://localhost:5000';\r\n\r\nfunction User({user, updateUserProfile, match, updateTrainer}) {\r\n\r\n    const {lname,fname,username,password,email,phone,address,city,province,country,postal} = user.contact;\r\n    const {facebook, twitter, instagram, linkedIn} = user.social;\r\n    const {name, description, logo} = user.company;\r\n    //show the password as *****\r\n    const hiddenPassword = password.split(\"\").map(character => \"*\");\r\n\r\n    //store the selected file in state\r\n    const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n   /** ================================================ ADD LOGO ================================================*/\r\n\r\n   //activate the click method on the invisible input box when the logo is clicked \r\n   const activateFileSelector=()=>{\r\n        const inputBox = document.getElementById('inputFile');\r\n        inputBox.click();\r\n    }\r\n    \r\n    //get the file selected from the file picker and store it in state\r\n    const fileSelectedHandler = event =>{\r\n        setSelectedFile(event.target.files[0]); \r\n    }\r\n\r\n    //upload the logo file to firebase storage in the trainer's\r\n    const fileUpload=()=>{\r\n        if(!!selectedFile){\r\n            let bucketName = match.params.trainerId;\r\n            let storageRef = firebase.storage().ref(`/${bucketName}/${selectedFile.name}`);\r\n            let uploadTask = storageRef.put(selectedFile);\r\n            uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED,\r\n                ()=>{\r\n                    console.log(\"Uploading ...\")\r\n                },\r\n                ()=>{\r\n                    console.log(\"Upload Unsuccessful\");\r\n                },\r\n                ()=>{\r\n                    //once the file is uploaded get the url and save it to the db and update the trainer component\r\n                    let storageLoc = firebase.storage().ref();\r\n                    storageLoc.child(`/${bucketName}/${selectedFile.name}`).getDownloadURL()\r\n                    .then((url)=>{\r\n                        const logo={logo:url}\r\n                        axios.put(`${API_URL}/trainer/${match.params.trainerId}/updateLogo`, logo)\r\n                        .then(res =>{\r\n                            updateTrainer();\r\n                        })\r\n                        .catch(err=>{\r\n                            console.log(err);\r\n                        })\r\n                    })\r\n                    .catch(err=>{\r\n                        console.log(err);\r\n                    })\r\n                }   \r\n            )\r\n        }\r\n    }\r\n\r\n    //fire the fileupload function any time the selectedFile is changed in state\r\n    useEffect(()=>{\r\n        fileUpload()\r\n    },[selectedFile])\r\n    \r\n    return (\r\n        <div className=\"user-profile\" style={{backgroundImage: \"url('/images/main2.jfif')\"}}>\r\n            <p className=\"user-profile__type\">Profile: Trainer</p>\r\n            <div className=\"user-profile__bottom\">\r\n                <div className=\"user-profile__description\">\r\n                   \r\n                    <div className=\"user-profile__description-logo-container\">\r\n\r\n                        {/* render the logo from the db - if there isn't one use the image icon stored on the front end */}\r\n                        <img src={logo !==\"\" ? logo : \"/icons/image.svg\"} alt =\"company logo\" className=\"user-profile__description-logo\" onClick={activateFileSelector}/>\r\n                        \r\n                        <input id=\"inputFile\" type=\"file\" className=\"user-profile__description-input\" onChange={fileSelectedHandler}></input>\r\n\r\n                    </div>\r\n                    <div className=\"user-profile__description-content\">\r\n                        <p className=\"user-profile__description-company\">{name}</p>\r\n                        <p className=\"user-profile__description-description\">{description}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"component user-profile__container\">\r\n                    <p className=\"component-title user-profile__title\">{`${fname} ${lname}`}</p>\r\n                    \r\n                    {(username !==\"google\" && username !==\"facebook\") &&\r\n                    <div className=\"user-profile__sign-in\">                       \r\n                        <p className=\"user-label\" >UserName: </p>\r\n                        <p className=\"user-text\"> {username}</p>\r\n\r\n                        <p className=\"user-label\" >Password: </p>\r\n                        <p className=\"user-text\"> {hiddenPassword}</p>\r\n                    </div>\r\n                    }\r\n\r\n                    <div className=\"user-profile__details\">\r\n                        <div className=\"user-profile__contact\">\r\n                            <p className=\"user-label user-profile__contact-title\"> CONTACT </p> \r\n                            <div className=\"user-profile-item\">\r\n                                <img className=\"contact-icon\" src=\"/icons/email-icon.svg\" alt=\"email\"/><p>{email}</p>\r\n                            </div>\r\n                            <div className=\"user-profile-item\">\r\n                                <img className=\"contact-icon\" src=\"/icons/phone-icon.svg\" alt=\"phone number\"/><p>{phone}</p>\r\n                            </div>\r\n\r\n                            <div className=\"user-profile__social\">\r\n                                <a href={facebook} target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"contact-icon--social\" src=\"/icons/facebook-icon.svg\" alt=\"facebook\"/></a>\r\n                                <a href={twitter} target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"contact-icon--social\" src=\"/icons/twitter-icon.svg\" alt=\"twitter\"/></a>\r\n                                <a href={instagram} target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"contact-icon--social\" src=\"/icons/instagram-icon.svg\" alt=\"instagram\"/></a>\r\n                                <a href={linkedIn} target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"contact-icon--social\" src=\"/icons/linkedin-icon.svg\" alt=\"linked-in\"/></a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user-profile__address\">\r\n                                <p className=\"user-label user-profile__address-title\">ADDRESS</p>\r\n                                <p className=\"user-profile__address-item\">{address}</p>\r\n                                <p className=\"user-profile__address-item\">{`${city}, ${province}, ${country}`}</p>\r\n                                <p className=\"user-profile__address-item\">{postal}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* render the modalcontainer along with the button used to trigger it for updating the user profile */}\r\n                    <div className=\"user-profile__update\">\r\n                        <ModalContainer \r\n                            modalName = \"updateUser\" \r\n                            modalType = \"update\" \r\n                            buttonText=\"Update\" \r\n                            buttonType=\"image\" \r\n                            url=\"/icons/user-edit.svg\" \r\n                            information={user} onSubmit={updateUserProfile}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Schedule\\Schedule.jsx",["166","167","168","169","170","171","172","173","174","175","176"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\SideBar\\SideBar.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientProfile\\ClientProfile.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientLessons\\ClientLessons.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientList\\ClientList.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\List\\List.jsx",["177"],"import React from 'react';\r\n\r\nimport './List.scss';\r\n\r\nimport ModalContainer from '../../components/ModalContainer/ModalContainer';\r\n\r\n\r\nfunction List({id, content, link, description, deleteBtn, deleteFunction, list, deleteType}) {\r\n    return (\r\n        <div className=\"list__item\">\r\n            <a href={link} className=\"list__item-name\" target=\"_blank\">{content}</a>\r\n            <div className=\"list__right\" >\r\n                {description && <p className=\"list__right-type\">{description}</p>}\r\n                \r\n                {/* conditionally renders a delete button depending on the deleteType variable - won't show for current lesson - don't want to allow deletion */}\r\n                {(deleteType !== \"modal\" && deleteBtn) && <button id={id} onClick={(event)=>deleteFunction(event, list)} className=\"list__right-delete\"> x </button>}\r\n                \r\n                {deleteType===\"modal\" &&\r\n                    <ModalContainer \r\n                        modalType = \"delete\" \r\n                        modalName = \"delete\" \r\n                        buttonText=\"x\" \r\n                        onSubmit={deleteFunction}\r\n                        deleteString= {content}\r\n                        deleteId={id}\r\n                        buttonType=\"x\"\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List\r\n",["178","179"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ModalContainer\\ModalContainer.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\TriggerModalButton\\TriggerModalButton.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Modal\\Modal.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\PersonalDetailsForm\\PersonalDetailsForm.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewClientForm\\NewClientForm.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewProgramForm\\NewProgramForm.jsx",["180"],"import React from 'react'\r\nimport \"./NewProgramForm.scss\";\r\n\r\nfunction NewProgramForm({onSubmit, closeModal, information}) {\r\n    \r\n    if (!information){\r\n        var information = {name:\"\", description:\"\"}\r\n    }\r\n\r\n    const {name, description} = information;\r\n\r\n    const handleSubmit=(event)=>{\r\n        onSubmit(event);\r\n        closeModal();\r\n    }\r\n    return (\r\n        <form id=\"modal-form\" className=\"modal-form\" onSubmit={handleSubmit} >\r\n            <div className=\"new-program__input\">\r\n                <input className=\"modal-form__input new-program__text\" id=\"programName\" name=\"programName\" type=\"text\" defaultValue={name} placeholder=\"Enter Program Name\" required></input>\r\n                <textarea className=\"modal-form__input new-program__textarea\" form=\"modal-form\" wrap=\"hard\" name=\"programDescription\" id=\"programDescription\" defaultValue={description} placeholder=\"Enter Program Description\" rows=\"10\" cols=\"120\"></textarea>\r\n            </div>\r\n            \r\n            <div className=\"modal-form__submit\">\r\n                <button className=\"modal-form__submit-cancel\" type=\"button\" onClick={closeModal}>Cancel</button>\r\n                <button className=\"modal-form__submit-button\" id=\"submit\" type=\"submit\" form=\"modal-form\">Submit</button>\r\n            </div>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewProgramForm\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\firebase.js",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DeleteModal\\DeleteModal.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonDetailsForm\\LessonDetailsForm.jsx",["181","182"],"import React from 'react'\r\nimport './LessonDetailsForm.scss';\r\n\r\nfunction LessonDetailsForm({onSubmit, closeModal, lesson}) {\r\n    \r\n    if (!lesson){\r\n        var location = {name:\"\", address:\"\", city:\"\", province:\"\", country:\"\"}\r\n        var lesson = {date:\"\", time:\"\", location}\r\n    }\r\n    var {date, time, location} = lesson;\r\n    var {name,address, city, province, country} = location;   \r\n\r\n    const handleSubmit=(event)=>{\r\n        onSubmit(event);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <form id=\"modal-form\" className=\"modal-form\" onSubmit={handleSubmit} >\r\n\r\n            <div className=\"modal-form__when\">\r\n                <div className=\"modal-form__section modal-form__lesson-name\">\r\n                    <input className=\"modal-form__input\" id=\"lessonName\" name=\"lessonName\" type=\"text\" defaultValue={lesson.name} required></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"fname\">Lesson Name</label>\r\n                </div>\r\n     \r\n                <div className=\"modal-form__section\">\r\n                    <input className=\"modal-form__input modal-form__input--date \" id=\"date\" name=\"date\" type=\"date\"  defaultValue={date}></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"date\">Date</label>\r\n                </div>\r\n                <div className=\"modal-form__section\">   \r\n                    <input className=\"modal-form__input modal-form__input--time\" id=\"time\" name=\"time\" type=\"time\"  defaultValue={time}></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"time\">Time</label>\r\n                </div>    \r\n            </div>\r\n\r\n            <div className=\"modal-form__section modal-form__lesson-name\">\r\n                <input className=\"modal-form__input\" id=\"locationName\" name=\"locationName\" type=\"text\" defaultValue={name}></input>\r\n                <label className=\"modal-form__label\" htmlFor=\"locationName\">Location Name</label>\r\n            </div>\r\n            \r\n            <div className=\"modal-form__address\">\r\n                <div className=\"modal-form__section\">\r\n                    <input className=\"modal-form__input modal-form__input--address\" id=\"address\" name=\"address\" type=\"text\" placeholder=\"Address\" defaultValue={address} ></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"address\">Street</label>\r\n                </div>\r\n                <div className=\"modal-form__section\">\r\n                    <input className=\"modal-form__input \" id=\"city\" name=\"city\" type=\"text\" placeholder=\"City\" defaultValue={city}></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"city\">City</label>\r\n                </div>\r\n                <div className=\"modal-form__section\">\r\n                    <input className=\"modal-form__input modal-form__input--province\" id=\"province\" name=\"province\" type=\"text\" placeholder=\"Province\" defaultValue={province}></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"province\">Province</label>\r\n                </div>\r\n                <div className=\"modal-form__section\">\r\n                    <input className=\"modal-form__input modal-form__input--country\" id=\"country\" name=\"country\" type=\"text\" placeholder=\"Country\" defaultValue={country}></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"country\">Country</label>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-form__submit\">\r\n                <button className=\"modal-form__submit-cancel\" type=\"button\" onClick={closeModal}>Cancel</button>\r\n                <button className=\"modal-form__submit-button\" id=\"submit\" type=\"submit\" form=\"modal-form\">Submit</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LessonDetailsForm","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonResources\\LessonResources.jsx",["183"],"import React, {useState, useEffect}  from 'react';\r\nimport {useDrop} from 'react-dnd';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport './LessonResources.scss'\r\n\r\nimport DNDList from '../../components/DNDList/DNDList';\r\nimport AppliedResources from '../../components/AppliedResources/AppliedResources';\r\n\r\n/**\r\n * \r\n * @param {Object} programs - all the trainer's programs\r\n * @param {Object} currentLesson - lesson currently rendered\r\n * @param {Object} currentClient - client currently rendered\r\n */\r\n\r\nfunction LessonResources({programs, currentLesson, currentClient, match}) {\r\n\r\n    const ItemTypes = {\r\n        CARD:'card',\r\n    };\r\n\r\n    const API_URL = process.env.NODE_ENV === \"production\" ? 'https://plan2train.herokuapp.com': 'http://localhost:5000';\r\n\r\n    const [allResources, setAllResources] = useState(programs);\r\n    \r\n    //resources that are currently being displayed - change based on program chosen\r\n    const[displayResources, setResourceList] = useState(programs.length!==0 ? programs[0].resources : []);\r\n\r\n    //current lesson being rendered - changed based on drag and drop from available resources \r\n    const[currentLessonResources, updateCurrentLesson] = useState(currentLesson);\r\n\r\n       \r\n     //update the resources of the current lesson when state changes\r\n    useEffect(() => {\r\n        updateCurrentLesson(currentLesson);\r\n    },[currentLesson]);\r\n\r\n    \r\n\r\n    // update the resources being displayed when a program is chosen\r\n    const updateDisplayed = (program)=>{\r\n\r\n        if (document.querySelector(\".active-program\")){\r\n            const previouslyActiveLink = document.querySelector(\".active-program\");\r\n            previouslyActiveLink.classList.remove(\"active-program\");\r\n            \r\n            const activeLinkElement = document.getElementById(program.id);\r\n            activeLinkElement.classList.add(\"active-program\");\r\n        }\r\n        setResourceList(program.resources);\r\n    }\r\n\r\n    //used to remove a resource from the available resources and add it to the lesson resources\r\n    const markAsDone = id => {\r\n\r\n        const sameBox = currentLessonResources.resources.find(resource=> resource.id===id);\r\n        // const sameDisplayBox = displayResources.find(resource=> resource.id===id);\r\n\r\n        if (!sameBox){\r\n            //find the resource to update and set the applied status to true        \r\n            const displays = [...displayResources];\r\n            displays.find(resource=> resource.id === id).applied=true;\r\n                \r\n            const lessonObject = {...currentLessonResources};\r\n            \r\n            // take the id from the resource that was moved, find the data associated with it and push it to the resources of the current lesson\r\n\r\n            lessonObject.resources.push(displays.find(resource=> resource.id === id));\r\n\r\n            //update the displaye resources and the lesson resources that are rendered\r\n            setResourceList(displays);\r\n            updateCurrentLesson(lessonObject);\r\n\r\n            //create an array of the ids associated with the updated resources to push to the db\r\n            const updatedResources = lessonObject.resources.map(resource => resource)\r\n\r\n            //update the db with the new lesson resources\r\n            axios.put(`${API_URL}/client/${currentClient.userId}/${currentLessonResources.id}/updateResource`, updatedResources)\r\n            .catch(err=>{\r\n                console.log(err);\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const removeResource=(id)=>{\r\n        \r\n        const alreadyDisplayed = displayResources.find(resource=> resource.id===id);\r\n        const sameBox = !!alreadyDisplayed && alreadyDisplayed.applied===false;\r\n\r\n        if(!sameBox){\r\n            //find the resource to update and set the applied status to true        \r\n            const available = [...allResources];\r\n            available.forEach(program=>{\r\n                const foundResource = program.resources.find(resource=> resource.id === id)\r\n                if(foundResource){ \r\n                    foundResource.applied=false;\r\n                }\r\n            });\r\n\r\n            const lessonObject = {...currentLessonResources};\r\n            // take the id from the resource that was moved, find the data associated with it and push it to the resources of the current lesson\r\n            const index = lessonObject.resources.findIndex(resource => resource.id === id);\r\n            lessonObject.resources.splice(index,1);\r\n\r\n            //update the display resources and the lesson resources that are rendered\r\n            setAllResources(available);\r\n            updateCurrentLesson(lessonObject);\r\n\r\n            //create an array of the ids associated with the updated resources to push to the db\r\n            const updatedResources = lessonObject.resources.map(resource => resource)\r\n\r\n            // update the db with the new lesson resources\r\n            axios.put(`${API_URL}/client/${currentClient.userId}/${currentLessonResources.id}/updateResource`, updatedResources)\r\n            .catch(err=>{\r\n                console.log(err);\r\n            })\r\n        }\r\n    }\r\n\r\n    //setup for drop component from lessons ---> available\r\n    const[{isOver}, drop] = useDrop({\r\n        accept: ItemTypes.CARD, //required - tells drop zone it will only accept card components\r\n        drop: (item, monitor)=> removeResource(item.id),\r\n        // collect: monitor => ({\r\n        //     isOver: !!monitor.isOver(),\r\n        // }),\r\n    });\r\n\r\n//program list scrolling\r\n    function sideScroll(element,direction,speed,distance,step){\r\n        let scrollAmount = 0;\r\n        var slideTimer = setInterval(function(){\r\n            if(direction === 'left'){\r\n                element.scrollLeft -= step;\r\n            } else {\r\n                element.scrollLeft += step;\r\n            }\r\n            scrollAmount += step;\r\n            if(scrollAmount >= distance){\r\n                window.clearInterval(slideTimer);\r\n            }\r\n        }, speed);\r\n    }\r\n\r\n    const scrollContainer = document.querySelector('.current-lesson__available-programs');\r\n\r\n    if (!!scrollContainer){\r\n        scrollContainer.addEventListener('wheel', function(e) {\r\n            e.preventDefault();\r\n            if (e.deltaY > 0) sideScroll(scrollContainer,'left',25,100,10);\r\n            else sideScroll(scrollContainer,'right',25,100,10);\r\n        });\r\n    }\r\n\r\n    const scrollList = (direction)=>{\r\n        const scrollContainer = document.querySelector('.current-lesson__available-programs');\r\n        direction ===\"right\" ? sideScroll(scrollContainer,'right',25,100,10): sideScroll(scrollContainer,'left',25,100,10);\r\n    }\r\n\r\n    if(programs.length===0){\r\n        return(                                     \r\n            // <div onClick={this.addNewLesson} className=\"empty-container\">\r\n            <div className=\"empty-container empty-lesson__resources\">\r\n                <h2>You Don't have any Programs Yet!</h2>\r\n                <Link to={`/trainer/${match.params.trainerId}/programs`} className=\"empty-lesson__resources-link\">Click Here to Add Some Programs and Resources</Link>\r\n            </div>\r\n        )\r\n    \r\n    }else{\r\n\r\n        return (\r\n            <div className=\"current-lesson__resources\">  \r\n                <div className=\"current-lesson__available\">\r\n                    {/* <p>Available Resources</p> */}\r\n                    <div className=\"current-lesson__available-content\">\r\n                        <div className=\"scroll-container\">\r\n                            <img src=\"/icons/chevron-left.svg\" className=\"chevron-left\" alt=\"scroll left\" onClick={()=>{scrollList(\"left\")}}/>\r\n                            <ul className=\"current-lesson__available-programs\"> \r\n                                {programs.map((program,i) => \r\n                                    <Link key={program.id} to={`/trainer/${match.params.trainerId}/clients/${currentClient.userId}/lessons`}>\r\n                                        <li id={program.id} onClick={()=>updateDisplayed(program)} \r\n                                            className={i===0 ? \"current-lesson__available-programs-item active-program\" : \"current-lesson__available-programs-item\"}>{program.name}\r\n                                        </li>\r\n                                    </Link>)}\r\n                            </ul>\r\n                            <img src=\"/icons/chevron-left.svg\" className=\"chevron-right\" alt=\"scroll right\" onClick={()=>{scrollList(\"right\")}}/>\r\n                        </div>\r\n                        <div ref={drop} className=\"list current-lesson__available-resources\">\r\n                            {displayResources.filter(resource => resource.applied === false)\r\n                                .map(resource=> <DNDList key={resource.id} content={resource.name} link={resource.link} id={resource.id}/>)}\r\n                        </div>                \r\n                    </div>\r\n                </div>\r\n                {/* applied resources component set up as a drop component */}\r\n                <AppliedResources currentLesson={currentLessonResources} markAsDone={markAsDone}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LessonResources\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\AppliedResources\\AppliedResources.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DNDList\\DNDList.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Map\\Map.jsx",["184"],"import React, {useState, useCallback} from 'react';\r\nimport {GoogleMap, Marker, InfoWindow, useJsApiLoader} from '@react-google-maps/api';\r\n\r\nimport mapStyles from '../../mapStyles';\r\n\r\nconst Map = ({mapLocation, containerSize}) => {\r\n \r\n    const [showInfo, setShowInfo]=useState(false);\r\n    const [map, setMap] = useState(null);\r\n\r\n    const {isLoaded,loadError} = useJsApiLoader({\r\n        id:'google-map-script',\r\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_KEY\r\n    })\r\n\r\n    const onLoad = useCallback(map=>{\r\n        const bounds = new window.google.maps.LatLngBounds();\r\n        map.fitBounds(bounds);\r\n        setMap(map);\r\n    },[]);\r\n\r\n    const onUnmount = useCallback(map=>{\r\n        setMap(null)\r\n    },[]);\r\n\r\n    if (loadError) {\r\n        return <div>Map cannot be loaded right now, sorry.</div>\r\n      }\r\n\r\n    return isLoaded ? (\r\n        <GoogleMap \r\n            center={mapLocation}\r\n            onLoad={onLoad}\r\n            onUnmount={onUnmount}\r\n            options={{styles:mapStyles, zoomControl:false, mapTypeControl:false, minZoom:15}}\r\n            mapContainerStyle={containerSize}\r\n        >\r\n\r\n        <Marker \r\n            position={mapLocation} \r\n            onClick={()=>{setShowInfo(true)}}\r\n            // icon={{\r\n            //     url:\"/icons/map-marker.svg\",\r\n            //     scaledSize: new window.google.maps.Size(20,40)\r\n            // }}\r\n        /> \r\n\r\n        {showInfo &&\r\n            <InfoWindow \r\n                position={{lat:mapLocation.lat, lng:mapLocation.lng}}\r\n                onCloseClick={()=>{setShowInfo(false)}}\r\n                >\r\n                <div>\r\n                    <h2>Lesson details</h2>\r\n                    <p> Lesson Name</p>\r\n                </div>\r\n            </InfoWindow>\r\n        }\r\n        </GoogleMap>\r\n    ):<></>\r\n}\r\n\r\nexport default React.memo(Map)\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\mapStyles.js",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Client\\Client.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LoginModal\\LoginModal.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LoginForm\\LoginForm.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\GridList\\GridList.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NoteModal\\NoteModal.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\EmptyPage\\EmptyPage.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\ClientWelcome\\ClientWelcome.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Lessons\\Lessons.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\NextLesson\\NextLesson.jsx",["185"],"import React, {useState,useEffect}from 'react';\r\nimport axios from 'axios';\r\n\r\nimport \"./NextLesson.scss\";\r\n\r\nimport Map from '../../components/Map/Map';\r\nimport GridList from '../../components/GridList/GridList';\r\n\r\n/**\r\n * @param {Object} nextLesson - contains all the information for the next lesson\r\n */\r\nfunction NextLesson({nextLesson}) {\r\n\r\n    const {address, city, province} = nextLesson.location\r\n\r\n    // store the geocoded (lat,long) location of the map in state\r\n    const [mapLocation, setMapLocation]=useState(null);\r\n\r\n    useEffect(()=>{\r\n        //send the location of the next lesson to the api to geocode the location for google maps\r\n        axios.get(`http://www.mapquestapi.com/geocoding/v1/address?key=${process.env.REACT_APP_MAPQUEST_API}&street=${address}&city=${city}&state=${province}`)\r\n        .then(res=>{\r\n            //once the location is geocoded set it in state\r\n            setMapLocation(res.data.results[0].locations[0].displayLatLng);\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    },[])\r\n\r\n    return (\r\n    <div className=\"next-lesson\" style={{backgroundImage: \"url('/images/main2.jfif')\"}}>\r\n        <h1 className=\"next-lesson__title\">NEXT LESSON</h1>\r\n        <div className=\"component next-lesson__container\">\r\n            <h2 className=\"component-title\">{nextLesson.name}</h2>\r\n                <div className = \"current-lesson__top next-lesson__top\">\r\n                    {/* shows the details for the lesson */}\r\n                    <div className=\"next-lesson__top-left\">\r\n                    <h2 className=\"section-title-resources next-lesson__subtitle\">Details</h2>\r\n                        <div className=\"current-lesson__top-details next-lesson__top-details\">\r\n                            <div className=\"current-lesson__top-details-text\">\r\n                                <div className=\"current-lesson__top-details-where\">\r\n                                    <p className=\"current-lesson__top-details-title\">Where</p>\r\n                                    <p className=\"current-lesson__top-details-item next-lesson__location\">{nextLesson.location.name}</p>\r\n                                    <p className=\"current-lesson__top-details-item\">{`${nextLesson.location.address}, ${nextLesson.location.city}`}</p>\r\n                                </div>\r\n                                <div className=\"current-lesson__top-details-when\">\r\n                                    <p className=\"current-lesson__top-details-title\">When</p>\r\n                                    <p className=\"current-lesson__top-details-item\">{`Date: ${nextLesson.date}`}</p>\r\n                                    <p className=\"current-lesson__top-details-item\">{`Time: ${nextLesson.time}`}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    \r\n                        {/* render the google map for the lesson location */}\r\n                        <div className = \"client__contact-map\">\r\n                            <Map\r\n                                mapLocation={mapLocation}\r\n                                containerSize={{width:\"346px\", height:\"282px\"}}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {/* render the resources for the next lesson */}\r\n                    <div className=\"next-lesson__resources\">\r\n                        <h2 className=\"section-title-resources next-lesson__subtitle\">Resources</h2>\r\n                        <div className=\"next-lesson__resources-list\">\r\n                            {nextLesson.resources.map(resource=> \r\n                                <GridList \r\n                                    key={resource.id} \r\n                                    content={resource.name}\r\n                                    resourceType={resource.type} \r\n                                    id={resource.id} \r\n                                    link={resource.url} \r\n                                    description={resource.type} \r\n                                    deleteBtn={false}\r\n                                    deleteType=\"noDelete\" \r\n                                    slider={true}\r\n                                />)}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* render notes for the next lesson */}\r\n                    <div className=\"\">\r\n                        <h2 className=\"section-title-resources next-lesson__subtitle\">Notes</h2>\r\n                        <div className = \"client__notes client-side__notepaper-next\" style={{backgroundImage: \"url('/images/notePaper.png')\"}}>\r\n                            <div className = \"client__notes-body client-side__notes\">\r\n                                <div className=\"client__notes-text\"> {nextLesson.notes}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default NextLesson\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Schedule\\event-utils.js",[],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":80,"column":7,"nodeType":"192","endLine":80,"endColumn":21,"suggestions":"193"},{"ruleId":"194","severity":1,"message":"195","line":3,"column":10,"nodeType":"196","messageId":"197","endLine":3,"endColumn":24},{"ruleId":"194","severity":1,"message":"198","line":6,"column":8,"nodeType":"196","messageId":"197","endLine":6,"endColumn":20},{"ruleId":"194","severity":1,"message":"199","line":6,"column":24,"nodeType":"196","messageId":"197","endLine":6,"endColumn":34},{"ruleId":"194","severity":1,"message":"200","line":7,"column":8,"nodeType":"196","messageId":"197","endLine":7,"endColumn":21},{"ruleId":"194","severity":1,"message":"201","line":8,"column":8,"nodeType":"196","messageId":"197","endLine":8,"endColumn":22},{"ruleId":"194","severity":1,"message":"202","line":9,"column":8,"nodeType":"196","messageId":"197","endLine":9,"endColumn":25},{"ruleId":"194","severity":1,"message":"203","line":16,"column":11,"nodeType":"196","messageId":"197","endLine":16,"endColumn":27},{"ruleId":"194","severity":1,"message":"204","line":34,"column":11,"nodeType":"196","messageId":"197","endLine":34,"endColumn":27},{"ruleId":"194","severity":1,"message":"205","line":40,"column":11,"nodeType":"196","messageId":"197","endLine":40,"endColumn":23},{"ruleId":"194","severity":1,"message":"206","line":46,"column":14,"nodeType":"196","messageId":"197","endLine":46,"endColumn":32},{"ruleId":"207","severity":1,"message":"208","line":82,"column":5,"nodeType":"209","endLine":82,"endColumn":68},{"ruleId":"210","severity":1,"message":"211","line":11,"column":13,"nodeType":"209","endLine":11,"endColumn":72},{"ruleId":"186","replacedBy":"212"},{"ruleId":"188","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":7,"column":13,"nodeType":"196","messageId":"216","endLine":7,"endColumn":24},{"ruleId":"214","severity":1,"message":"217","line":8,"column":13,"nodeType":"196","messageId":"216","endLine":8,"endColumn":19},{"ruleId":"214","severity":1,"message":"218","line":10,"column":22,"nodeType":"196","messageId":"216","endLine":10,"endColumn":30},{"ruleId":"194","severity":1,"message":"219","line":124,"column":12,"nodeType":"196","messageId":"197","endLine":124,"endColumn":18},{"ruleId":"194","severity":1,"message":"220","line":9,"column":12,"nodeType":"196","messageId":"197","endLine":9,"endColumn":15},{"ruleId":"190","severity":1,"message":"221","line":29,"column":7,"nodeType":"192","endLine":29,"endColumn":9,"suggestions":"222"},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fileUpload'. Either include it or remove the dependency array.","ArrayExpression",["225"],"no-unused-vars","'INITIAL_EVENTS' is defined but never used.","Identifier","unusedVar","'FullCalendar' is defined but never used.","'formatDate' is defined but never used.","'dayGridPlugin' is defined but never used.","'timeGridPlugin' is defined but never used.","'interactionPlugin' is defined but never used.","'handleDateSelect' is assigned a value but never used.","'handleEventClick' is assigned a value but never used.","'handleEvents' is assigned a value but never used.","'renderEventContent' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener",["223"],["224"],"no-redeclare","'information' is already defined.","redeclared","'lesson' is already defined.","'location' is already defined.","'isOver' is assigned a value but never used.","'map' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'address', 'city', and 'province'. Either include them or remove the dependency array.",["226"],"no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},"Update the dependencies array to be: [fileUpload, selectedFile]",{"range":"231","text":"232"},"Update the dependencies array to be: [address, city, province]",{"range":"233","text":"234"},[3292,3306],"[fileUpload, selectedFile]",[1060,1062],"[address, city, province]"]