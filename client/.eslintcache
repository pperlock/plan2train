[{"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\index.js":"1","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\reportWebVitals.js":"2","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\App.js":"3","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Trainer\\Trainer.jsx":"4","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Intro\\Intro.jsx":"5","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Programs\\Programs.jsx":"6","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Clients\\Clients.jsx":"7","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\User\\User.jsx":"8","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Schedule\\Schedule.jsx":"9","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\SideBar\\SideBar.jsx":"10","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ProgramContent\\ProgramContent.jsx":"11","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientProfile\\ClientProfile.jsx":"12","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientLessons\\ClientLessons.jsx":"13","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientList\\ClientList.jsx":"14","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\List\\List.jsx":"15","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ModalContainer\\ModalContainer.jsx":"16","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ProgramBar\\ProgramBar.jsx":"17","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\TriggerModalButton\\TriggerModalButton.jsx":"18","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Modal\\Modal.jsx":"19","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\PersonalDetailsForm\\PersonalDetailsForm.jsx":"20","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewClientForm\\NewClientForm.jsx":"21","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewProgramForm\\NewProgramForm.jsx":"22","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\firebase.js":"23","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DeleteModal\\DeleteModal.jsx":"24","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonDetailsForm\\LessonDetailsForm.jsx":"25","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonResources\\LessonResources.jsx":"26","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\AppliedResources\\AppliedResources.jsx":"27","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DNDList\\DNDList.jsx":"28","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Map\\Map.jsx":"29","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\mapStyles.js":"30","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Client\\Client.jsx":"31","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LoginModal\\LoginModal.jsx":"32","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LoginForm\\LoginForm.jsx":"33","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\GridList\\GridList.jsx":"34","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NoteModal\\NoteModal.jsx":"35","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\EmptyPage\\EmptyPage.jsx":"36","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\ClientWelcome\\ClientWelcome.jsx":"37","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Lessons\\Lessons.jsx":"38","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\NextLesson\\NextLesson.jsx":"39","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Schedule\\event-utils.js":"40"},{"size":479,"mtime":1609516748053,"results":"41","hashOfConfig":"42"},{"size":362,"mtime":499162500000,"results":"43","hashOfConfig":"42"},{"size":2592,"mtime":1613072023162,"results":"44","hashOfConfig":"42"},{"size":19147,"mtime":1613141768633,"results":"45","hashOfConfig":"42"},{"size":1401,"mtime":1612381285891,"results":"46","hashOfConfig":"42"},{"size":13254,"mtime":1612884216018,"results":"47","hashOfConfig":"42"},{"size":5832,"mtime":1612981111649,"results":"48","hashOfConfig":"42"},{"size":7865,"mtime":1612985362592,"results":"49","hashOfConfig":"42"},{"size":2894,"mtime":1613134168666,"results":"50","hashOfConfig":"42"},{"size":8139,"mtime":1612985375778,"results":"51","hashOfConfig":"42"},{"size":872,"mtime":1611172017746,"results":"52","hashOfConfig":"42"},{"size":8347,"mtime":1612985405994,"results":"53","hashOfConfig":"42"},{"size":19798,"mtime":1612985410905,"results":"54","hashOfConfig":"42"},{"size":2244,"mtime":1613142107715,"results":"55","hashOfConfig":"42"},{"size":1371,"mtime":1611872490171,"results":"56","hashOfConfig":"42"},{"size":4581,"mtime":1612192470128,"results":"57","hashOfConfig":"42"},{"size":961,"mtime":1609618837760,"results":"58","hashOfConfig":"42"},{"size":1351,"mtime":1612192031846,"results":"59","hashOfConfig":"42"},{"size":3672,"mtime":1612216757294,"results":"60","hashOfConfig":"42"},{"size":10193,"mtime":1612212471965,"results":"61","hashOfConfig":"42"},{"size":4827,"mtime":1612209662953,"results":"62","hashOfConfig":"42"},{"size":1366,"mtime":1612190047381,"results":"63","hashOfConfig":"42"},{"size":457,"mtime":1612972896192,"results":"64","hashOfConfig":"42"},{"size":2577,"mtime":1612207195867,"results":"65","hashOfConfig":"42"},{"size":3783,"mtime":1612217278461,"results":"66","hashOfConfig":"42"},{"size":9764,"mtime":1613137586153,"results":"67","hashOfConfig":"42"},{"size":1589,"mtime":1611882658451,"results":"68","hashOfConfig":"42"},{"size":1258,"mtime":1611520289890,"results":"69","hashOfConfig":"42"},{"size":1894,"mtime":1612104010181,"results":"70","hashOfConfig":"42"},{"size":3573,"mtime":1612267347057,"results":"71","hashOfConfig":"42"},{"size":2910,"mtime":1612985368009,"results":"72","hashOfConfig":"42"},{"size":4895,"mtime":1612985396385,"results":"73","hashOfConfig":"42"},{"size":2517,"mtime":1612981334124,"results":"74","hashOfConfig":"42"},{"size":3187,"mtime":1612220154906,"results":"75","hashOfConfig":"42"},{"size":2184,"mtime":1612182661122,"results":"76","hashOfConfig":"42"},{"size":2151,"mtime":1612272501543,"results":"77","hashOfConfig":"42"},{"size":6263,"mtime":1612272720442,"results":"78","hashOfConfig":"42"},{"size":4309,"mtime":1612272112507,"results":"79","hashOfConfig":"42"},{"size":5102,"mtime":1612962539106,"results":"80","hashOfConfig":"42"},{"size":394,"mtime":1613072882338,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"l44x0r",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"84"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\index.js",[],["178","179"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\reportWebVitals.js",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\App.js",["180"],"import './App.scss';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport {HTML5Backend} from 'react-dnd-html5-backend';\r\nimport {DndProvider} from 'react-dnd';\r\n\r\n\r\nimport Intro from './Pages/Intro/Intro';\r\nimport Trainer from './Pages/Trainer/Trainer';\r\nimport Client from './Pages/Client/Client';\r\nimport Schedule from './Pages/Schedule/Schedule';\r\n\r\nfunction App() {\r\n  return (\r\n    <DndProvider backend={HTML5Backend}>\r\n      <div className=\"App\">\r\n          <BrowserRouter>\r\n              <Switch>\r\n                  \r\n                  <Route path=\"/\" exact component={Intro}/>\r\n                  \r\n                  {/* Trainer - userprofile */}\r\n                  <Route path=\"/trainer/:trainerId\" exact render={(props)=>(<Trainer {...props}/>)}/>\r\n                  {/* Trainer - programs - no programs */}\r\n                  <Route path=\"/trainer/:trainerId/programs\" exact render={(props)=>(<Trainer {...props}/>)}/>\r\n                  {/* Trainer - programs */}\r\n                  <Route path=\"/trainer/:trainerId/programs/:programId\" exact render={(props)=>(<Trainer {...props}/>)}/>\r\n                  \r\n                  {/* Trainer - clients - profile*/}\r\n                  <Route path=\"/trainer/:trainerId/clients/:clientId/profile\" exact render={(props)=>(<Trainer {...props}/>)}/>\r\n                  {/* Trainer - clients-lessons*/}\r\n                  <Route path=\"/trainer/:trainerId/clients/:clientId/lessons\" exact render={(props)=>(<Trainer {...props}/>)}/>\r\n                  {/* Trainer - clients -  no clients */}\r\n                  <Route path=\"/trainer/:trainerId/clients\" exact render={(props)=>(<Trainer {...props}/>)}/>\r\n                  \r\n                  {/* Trainer - schedule */}\r\n                  <Route path=\"/trainer/:trainerId/schedule\" render={(props)=>(<Trainer {...props}/>)}/>\r\n                  \r\n                  {/* Client  - welcome*/}\r\n                  <Route path=\"/client/:clientId\" exact render={(props)=>(<Client {...props}/>)}/>\r\n                  {/* Client  - next lesson*/}\r\n                  <Route path=\"/client/:clientId/nextlesson/:lessonId\" exact render={(props)=>(<Client {...props}/>)}/>\r\n                  {/* Client  - past lessons*/}\r\n                  <Route path=\"/client/:clientId/lessons/:lessonId\" exact render={(props)=>(<Client {...props}/>)}/>\r\n                  <Route path=\"/client/:clientId/lessons\" exact render={(props)=>(<Client {...props}/>)}/>\r\n                  \r\n              </Switch>\r\n          </BrowserRouter>\r\n      </div>\r\n    </DndProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Trainer\\Trainer.jsx",["181"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Intro\\Intro.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Programs\\Programs.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Clients\\Clients.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\User\\User.jsx",["182"],"import React, {useState, useEffect} from 'react'\r\nimport firebase from '../../firebase';\r\nimport axios from 'axios';\r\n\r\nimport \"./User.scss\"\r\n\r\nimport ModalContainer from '../../components/ModalContainer/ModalContainer';\r\n\r\n/**\r\n * @param {Object} user - trainer information\r\n * @param {Function} updateUserProfile - sent from trainer component to update the trainer's user profile\r\n * @param {Object} match - used to access the page's path\r\n * @param {Function} updateTrainer - used to update the state on the trainer component\r\n */\r\n\r\nconst API_URL = process.env.NODE_ENV === \"production\" ? 'https://plan2train.herokuapp.com': 'http://localhost:5000';\r\n\r\nfunction User({user, updateUserProfile, match, updateTrainer}) {\r\n\r\n    const {lname,fname,username,password,email,phone,address,city,province,country,postal} = user.contact;\r\n    const {facebook, twitter, instagram, linkedIn} = user.social;\r\n    const {name, description, logo} = user.company;\r\n    //show the password as *****\r\n    const hiddenPassword = password.split(\"\").map(character => \"*\");\r\n\r\n    //store the selected file in state\r\n    const [selectedFile, setSelectedFile] = useState(null)\r\n\r\n   /** ================================================ ADD LOGO ================================================*/\r\n\r\n   //activate the click method on the invisible input box when the logo is clicked \r\n   const activateFileSelector=()=>{\r\n        const inputBox = document.getElementById('inputFile');\r\n        inputBox.click();\r\n    }\r\n    \r\n    //get the file selected from the file picker and store it in state\r\n    const fileSelectedHandler = event =>{\r\n        setSelectedFile(event.target.files[0]); \r\n    }\r\n\r\n    //upload the logo file to firebase storage in the trainer's\r\n    const fileUpload=()=>{\r\n        if(!!selectedFile){\r\n            let bucketName = match.params.trainerId;\r\n            let storageRef = firebase.storage().ref(`/${bucketName}/${selectedFile.name}`);\r\n            let uploadTask = storageRef.put(selectedFile);\r\n            uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED,\r\n                ()=>{\r\n                    console.log(\"Uploading ...\")\r\n                },\r\n                ()=>{\r\n                    console.log(\"Upload Unsuccessful\");\r\n                },\r\n                ()=>{\r\n                    //once the file is uploaded get the url and save it to the db and update the trainer component\r\n                    let storageLoc = firebase.storage().ref();\r\n                    storageLoc.child(`/${bucketName}/${selectedFile.name}`).getDownloadURL()\r\n                    .then((url)=>{\r\n                        const logo={logo:url}\r\n                        axios.put(`${API_URL}/trainer/${match.params.trainerId}/updateLogo`, logo)\r\n                        .then(res =>{\r\n                            updateTrainer();\r\n                        })\r\n                        .catch(err=>{\r\n                            console.log(err);\r\n                        })\r\n                    })\r\n                    .catch(err=>{\r\n                        console.log(err);\r\n                    })\r\n                }   \r\n            )\r\n        }\r\n    }\r\n\r\n    //fire the fileupload function any time the selectedFile is changed in state\r\n    useEffect(()=>{\r\n        fileUpload()\r\n    },[selectedFile])\r\n    \r\n    return (\r\n        <div className=\"user-profile\" style={{backgroundImage: \"url('/images/main2.jfif')\"}}>\r\n            <p className=\"user-profile__type\">Profile: Trainer</p>\r\n            <div className=\"user-profile__bottom\">\r\n                <div className=\"user-profile__description\">\r\n                   \r\n                    <div className=\"user-profile__description-logo-container\">\r\n\r\n                        {/* render the logo from the db - if there isn't one use the image icon stored on the front end */}\r\n                        <img src={logo !==\"\" ? logo : \"/icons/image.svg\"} alt =\"company logo\" className=\"user-profile__description-logo\" onClick={activateFileSelector}/>\r\n                        \r\n                        <input id=\"inputFile\" type=\"file\" className=\"user-profile__description-input\" onChange={fileSelectedHandler}></input>\r\n\r\n                    </div>\r\n                    <div className=\"user-profile__description-content\">\r\n                        <p className=\"user-profile__description-company\">{name}</p>\r\n                        <p className=\"user-profile__description-description\">{description}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"component user-profile__container\">\r\n                    <p className=\"component-title user-profile__title\">{`${fname} ${lname}`}</p>\r\n                    \r\n                    <div className=\"user-profile__sign-in\">                       \r\n                        <p className=\"user-label\" >UserName: </p>\r\n                        <p className=\"user-text\"> {username}</p>\r\n\r\n                        <p className=\"user-label\" >Password: </p>\r\n                        <p className=\"user-text\"> {hiddenPassword}</p>\r\n                    </div>\r\n\r\n                    <div className=\"user-profile__details\">\r\n                        <div className=\"user-profile__contact\">\r\n                            <p className=\"user-label user-profile__contact-title\"> CONTACT </p> \r\n                            <div className=\"user-profile-item\">\r\n                                <img className=\"contact-icon\" src=\"/icons/email-icon.svg\" alt=\"email\"/><p>{email}</p>\r\n                            </div>\r\n                            <div className=\"user-profile-item\">\r\n                                <img className=\"contact-icon\" src=\"/icons/phone-icon.svg\" alt=\"phone number\"/><p>{phone}</p>\r\n                            </div>\r\n\r\n                            <div className=\"user-profile__social\">\r\n                                <a href={facebook} target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"contact-icon--social\" src=\"/icons/facebook-icon.svg\" alt=\"facebook\"/></a>\r\n                                <a href={twitter} target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"contact-icon--social\" src=\"/icons/twitter-icon.svg\" alt=\"twitter\"/></a>\r\n                                <a href={instagram} target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"contact-icon--social\" src=\"/icons/instagram-icon.svg\" alt=\"instagram\"/></a>\r\n                                <a href={linkedIn} target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"contact-icon--social\" src=\"/icons/linkedin-icon.svg\" alt=\"linked-in\"/></a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user-profile__address\">\r\n                                <p className=\"user-label user-profile__address-title\">ADDRESS</p>\r\n                                <p className=\"user-profile__address-item\">{address}</p>\r\n                                <p className=\"user-profile__address-item\">{`${city}, ${province}, ${country}`}</p>\r\n                                <p className=\"user-profile__address-item\">{postal}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* render the modalcontainer along with the button used to trigger it for updating the user profile */}\r\n                    <div className=\"user-profile__update\">\r\n                        <ModalContainer \r\n                            modalName = \"updateUser\" \r\n                            modalType = \"update\" \r\n                            buttonText=\"Update\" \r\n                            buttonType=\"image\" \r\n                            url=\"/icons/user-edit.svg\" \r\n                            information={user} onSubmit={updateUserProfile}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Schedule\\Schedule.jsx",["183"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\SideBar\\SideBar.jsx",["184"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport \"./SideBar.scss\"\r\n\r\nconst API_URL = process.env.NODE_ENV === \"production\" ? 'https://plan2train.herokuapp.com': 'http://localhost:5000';\r\n\r\nclass SideBar extends React.Component {\r\n\r\n    //props\r\n    // clients={this.state.clients} \r\n    // programs={this.state.programs} \r\n    // match={match}\r\n    //trainerId\r\n    //username = trainer username\r\n    //history - history props from router\r\n\r\n    state = {profile:\"\"};\r\n\r\n    componentDidMount(){\r\n        const splitProps = this.props.match.path.split(\"/\")\r\n        // console.log(splitProps);\r\n        const profile = splitProps.length === 4 ? splitProps[1] : splitProps[4]\r\n        this.setState({profile:profile});\r\n\r\n        \r\n    }\r\n\r\n    componentDidUpdate(){\r\n        \r\n        const splitProps = this.props.match.path.split(\"/\")\r\n        const activeLink = splitProps.length === 3 ? splitProps[1] : splitProps[3]\r\n\r\n        if(document.getElementById(`${activeLink}-link`)){\r\n            const previouslyActiveLink = document.querySelector(\".sidebar__menu-link--active\");\r\n            previouslyActiveLink.classList.remove(\"sidebar__menu-link--active\");\r\n            \r\n            const activeLinkElement = document.getElementById(`${activeLink}-link`);\r\n            activeLinkElement.classList.add(\"sidebar__menu-link--active\");\r\n        }\r\n\r\n    }\r\n\r\n    logout = ()=>{\r\n        axios.get(`${API_URL}/logout`)\r\n        .then(res =>{\r\n            this.props.history.push(\"/\");\r\n            console.log(res);\r\n        })\r\n        .catch(err =>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const profile = this.props.match.path.split(\"/\")[1]\r\n\r\n        if (profile){\r\n            var {trainerId, trainerName, programs, clients, match} = this.props;\r\n            var defaultClientId = (clients && clients.length !==0) ? clients[0].userId : match.params.clientId\r\n        }\r\n\r\n        if (profile === \"trainer\"){\r\n            return (\r\n                <>\r\n                    <div className=\"sidebar\" style={{backgroundImage: \"url('/images/main-background.jfif')\"}}>\r\n\r\n                        <div className=\"sidebar__logout\">\r\n                            <img onClick={this.logout} className=\"sidebar__logout-icon\" src=\"/icons/log-out.svg\" alt=\"sign out\"/>\r\n                            {/* <Link to=\"/\"><img className=\"sidebar__logout-icon\" src=\"/icons/log-out.svg\" alt=\"sign out\"/></Link> */}\r\n                        </div>\r\n\r\n                        <Link to=\"/\">\r\n                            <div className=\"sidebar__logo\">\r\n                                <h1 className=\"sidebar__logo-title\" >P</h1>\r\n                                <span className=\"sidebar__logo-bigLetter\">2</span> \r\n                                <h1 className=\"sidebar__logo-title\"> T</h1>\r\n                            </div>\r\n                        </Link>\r\n\r\n                        <div className = \"sidebar__divider\"></div>\r\n                \r\n                        <ul className=\"sidebar__menu\">\r\n                            <Link to={`/trainer/${trainerId}`}>\r\n                                <li id=\"trainer-link\" className=\"sidebar__menu-link sidebar__menu-link--active\">\r\n                                    <img id=\"trainer-icon\" className=\"sidebar__menu-icon sidebar__menu-icon--active\" src=\"/icons/user-profile-icon.svg\" alt=\"user profile\"/>\r\n                                    User Profile\r\n                                </li>\r\n                            </Link>\r\n                            {programs &&\r\n                                <Link to= {programs.length === 0 ? `/trainer/${trainerId}/programs` : `/trainer/${trainerId}/programs/${programs[0].id}`}>\r\n                                    <li id=\"programs-link\" className=\"sidebar__menu-link\"><img id=\"programs-icon\" className=\"sidebar__menu-icon sidebar__menu-icon--active\"src=\"/icons/programs-icon.svg\" alt=\"list icon\"/>Programs</li>\r\n                                </Link>\r\n                            }\r\n                            {clients &&\r\n                                <Link to= {clients.length === 0 ? `/trainer/${trainerId}/clients` : `/trainer/${trainerId}/clients/${defaultClientId}/profile`}>\r\n                                    <li id=\"clients-link\" className=\"sidebar__menu-link\"><img  id=\"clients-icon\" className=\"sidebar__menu-icon sidebar__menu-icon--active\" src=\"/icons/clients-icon.svg\" alt=\"clients icon\"/>Clients</li>\r\n                                </Link>\r\n                            }\r\n                            <Link to={`/trainer/${trainerId}/schedule`}>\r\n                                <li id=\"schedule-link\" className=\"sidebar__menu-link\"><img id=\"schedule-icon\" className=\"sidebar__menu-icon sidebar__menu-icon--active\" src=\"/icons/calendar-icon.svg\" alt=\"calendar icon\"/>Schedule</li>\r\n                            </Link>\r\n                        </ul>\r\n\r\n                    </div>\r\n                    \r\n                </>\r\n            )\r\n        }else{\r\n            return (\r\n                <>\r\n                    <div className=\"sidebar\" style={{backgroundImage: \"url('/images/main-background.jfif')\"}}>\r\n                        <div className=\"sidebar__logout\">\r\n                            {/* <div className=\"sidebar__logout-text\">Log Out</div> */}\r\n                            <Link to=\"/\"><img className=\"sidebar__logout-icon\" src=\"/icons/log-out.svg\" alt=\"sign out\"/></Link>\r\n                        </div>\r\n\r\n                        <Link  to=\"/\">\r\n                                <div className=\"sidebar__logo\">\r\n                                    <h1 className=\"sidebar__logo-title\" >P</h1>\r\n                                    <span className=\"sidebar__logo-bigLetter\">2</span> \r\n                                    <h1 className=\"sidebar__logo-title\"> T</h1>\r\n                                </div>\r\n                        </Link>\r\n\r\n                        <div className = \"sidebar__divider\"></div>\r\n                        \r\n                        <ul className=\"sidebar__menu\">\r\n                            <Link to={`/client/${this.props.match.params.clientId}`}>\r\n                                <li id=\"client-link\" className=\"sidebar__menu-link sidebar__menu-link--active\">\r\n                                    <img id=\"client-icon\" className=\"sidebar__menu-icon sidebar__menu-icon--active\" src=\"/icons/welcome.svg\" alt=\"user profile\"/>\r\n                                    Welcome\r\n                                </li>\r\n                            </Link>\r\n\r\n                            {(!!this.props.client && !!this.props.nextLesson) &&\r\n                                <Link to={`/client/${this.props.match.params.clientId}/nextlesson/${this.props.nextLesson.id}`}>\r\n                                    <li id=\"nextlesson-link\" className=\"sidebar__menu-link\">\r\n                                        <img id=\"nextlesson-icon\" className=\"sidebar__menu-icon sidebar__menu-icon--active\" src=\"/icons/swoopy-arrow.svg\" alt=\"next-lesson\"/>\r\n                                       Next Lesson\r\n                                    </li>\r\n                                </Link>\r\n                            }\r\n\r\n                            {(!!this.props.client && !!this.props.pastLessons) &&\r\n                                <Link to={this.props.pastLessons.length === 0 ? `/client/${this.props.match.params.clientId}/lessons` : `/client/${this.props.match.params.clientId}/lessons/${this.props.pastLessons[0].id}`}>\r\n                                    <li id=\"lessons-link\" className=\"sidebar__menu-link\">\r\n                                        <img id=\"lessons-icon\" className=\"sidebar__menu-icon sidebar__menu-icon--active\" src=\"/icons/programs-icon.svg\" alt=\"user profile\"/>\r\n                                       Past Lessons\r\n                                    </li>\r\n                                </Link>\r\n                            }\r\n                        </ul>\r\n\r\n                    </div>\r\n                    \r\n                </>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default SideBar\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ProgramContent\\ProgramContent.jsx",[],["185","186"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientProfile\\ClientProfile.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientLessons\\ClientLessons.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ClientList\\ClientList.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\List\\List.jsx",["187"],"import React from 'react';\r\n\r\nimport './List.scss';\r\n\r\nimport ModalContainer from '../../components/ModalContainer/ModalContainer';\r\n\r\n\r\nfunction List({id, content, link, description, deleteBtn, deleteFunction, list, deleteType}) {\r\n    return (\r\n        <div className=\"list__item\">\r\n            <a href={link} className=\"list__item-name\" target=\"_blank\">{content}</a>\r\n            <div className=\"list__right\" >\r\n                {description && <p className=\"list__right-type\">{description}</p>}\r\n                \r\n                {/* conditionally renders a delete button depending on the deleteType variable - won't show for current lesson - don't want to allow deletion */}\r\n                {(deleteType !== \"modal\" && deleteBtn) && <button id={id} onClick={(event)=>deleteFunction(event, list)} className=\"list__right-delete\"> x </button>}\r\n                \r\n                {deleteType===\"modal\" &&\r\n                    <ModalContainer \r\n                        modalType = \"delete\" \r\n                        modalName = \"delete\" \r\n                        buttonText=\"x\" \r\n                        onSubmit={deleteFunction}\r\n                        deleteString= {content}\r\n                        deleteId={id}\r\n                        buttonType=\"x\"\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List\r\n",["188","189"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ModalContainer\\ModalContainer.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\ProgramBar\\ProgramBar.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\TriggerModalButton\\TriggerModalButton.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Modal\\Modal.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\PersonalDetailsForm\\PersonalDetailsForm.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewClientForm\\NewClientForm.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NewProgramForm\\NewProgramForm.jsx",["190"],"import React from 'react'\r\nimport \"./NewProgramForm.scss\";\r\n\r\nfunction NewProgramForm({onSubmit, closeModal, information}) {\r\n    \r\n    if (!information){\r\n        var information = {name:\"\", description:\"\"}\r\n    }\r\n\r\n    const {name, description} = information;\r\n\r\n    const handleSubmit=(event)=>{\r\n        onSubmit(event);\r\n        closeModal();\r\n    }\r\n    return (\r\n        <form id=\"modal-form\" className=\"modal-form\" onSubmit={handleSubmit} >\r\n            <div className=\"new-program__input\">\r\n                <input className=\"modal-form__input new-program__text\" id=\"programName\" name=\"programName\" type=\"text\" defaultValue={name} placeholder=\"Enter Program Name\" required></input>\r\n                <textarea className=\"modal-form__input new-program__textarea\" form=\"modal-form\" wrap=\"hard\" name=\"programDescription\" id=\"programDescription\" defaultValue={description} placeholder=\"Enter Program Description\" rows=\"10\" cols=\"120\"></textarea>\r\n            </div>\r\n            \r\n            <div className=\"modal-form__submit\">\r\n                <button className=\"modal-form__submit-cancel\" type=\"button\" onClick={closeModal}>Cancel</button>\r\n                <button className=\"modal-form__submit-button\" id=\"submit\" type=\"submit\" form=\"modal-form\">Submit</button>\r\n            </div>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewProgramForm\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\firebase.js",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DeleteModal\\DeleteModal.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonDetailsForm\\LessonDetailsForm.jsx",["191","192"],"import React from 'react'\r\nimport './LessonDetailsForm.scss';\r\n\r\nfunction LessonDetailsForm({onSubmit, closeModal, lesson}) {\r\n    \r\n    if (!lesson){\r\n        var location = {name:\"\", address:\"\", city:\"\", province:\"\", country:\"\"}\r\n        var lesson = {date:\"\", time:\"\", location}\r\n    }\r\n    var {date, time, location} = lesson;\r\n    var {name,address, city, province, country} = location;   \r\n\r\n    const handleSubmit=(event)=>{\r\n        onSubmit(event);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <form id=\"modal-form\" className=\"modal-form\" onSubmit={handleSubmit} >\r\n\r\n            <div className=\"modal-form__when\">\r\n                <div className=\"modal-form__section modal-form__lesson-name\">\r\n                    <input className=\"modal-form__input\" id=\"lessonName\" name=\"lessonName\" type=\"text\" defaultValue={lesson.name} required></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"fname\">Lesson Name</label>\r\n                </div>\r\n     \r\n                <div className=\"modal-form__section\">\r\n                    <input className=\"modal-form__input modal-form__input--date \" id=\"date\" name=\"date\" type=\"date\"  defaultValue={date}></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"date\">Date</label>\r\n                </div>\r\n                <div className=\"modal-form__section\">   \r\n                    <input className=\"modal-form__input modal-form__input--time\" id=\"time\" name=\"time\" type=\"time\"  defaultValue={time}></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"time\">Time</label>\r\n                </div>    \r\n            </div>\r\n\r\n            <div className=\"modal-form__section modal-form__lesson-name\">\r\n                <input className=\"modal-form__input\" id=\"locationName\" name=\"locationName\" type=\"text\" defaultValue={name}></input>\r\n                <label className=\"modal-form__label\" htmlFor=\"locationName\">Location Name</label>\r\n            </div>\r\n            \r\n            <div className=\"modal-form__address\">\r\n                <div className=\"modal-form__section\">\r\n                    <input className=\"modal-form__input modal-form__input--address\" id=\"address\" name=\"address\" type=\"text\" placeholder=\"Address\" defaultValue={address} ></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"address\">Street</label>\r\n                </div>\r\n                <div className=\"modal-form__section\">\r\n                    <input className=\"modal-form__input \" id=\"city\" name=\"city\" type=\"text\" placeholder=\"City\" defaultValue={city}></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"city\">City</label>\r\n                </div>\r\n                <div className=\"modal-form__section\">\r\n                    <input className=\"modal-form__input modal-form__input--province\" id=\"province\" name=\"province\" type=\"text\" placeholder=\"Province\" defaultValue={province}></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"province\">Province</label>\r\n                </div>\r\n                <div className=\"modal-form__section\">\r\n                    <input className=\"modal-form__input modal-form__input--country\" id=\"country\" name=\"country\" type=\"text\" placeholder=\"Country\" defaultValue={country}></input>\r\n                    <label className=\"modal-form__label\" htmlFor=\"country\">Country</label>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-form__submit\">\r\n                <button className=\"modal-form__submit-cancel\" type=\"button\" onClick={closeModal}>Cancel</button>\r\n                <button className=\"modal-form__submit-button\" id=\"submit\" type=\"submit\" form=\"modal-form\">Submit</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LessonDetailsForm","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LessonResources\\LessonResources.jsx",["193","194","195","196","197"],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\AppliedResources\\AppliedResources.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\DNDList\\DNDList.jsx",["198"],"import React from 'react';\r\nimport { useDrag } from 'react-dnd';\r\n\r\nimport './DNDList.scss';\r\n\r\nconst ItemTypes = {\r\n    CARD:'card',\r\n};\r\n\r\n/**\r\n * \r\n * @param {string} id - resource id \r\n * @param {string} content - text to render\r\n * @param {string} link - url for text to link to\r\n * @param {string} description- type of resource if it is a resource list\r\n * \r\n */\r\nfunction DNDList({id, content, link, description}) {\r\n\r\n    // argument1 = props from the monitor\r\n    const[{isDragging}, drag] = useDrag({\r\n        item:{\r\n            type:ItemTypes.CARD,\r\n            //type is required - can pass anything else you want with it - here i want the id\r\n            id: id,\r\n        },\r\n        //talks to the monitor and sets the isDragging prop to true when is dragging\r\n        collect:monitor=>({\r\n            isDragging:!!monitor.isDragging(),\r\n        }),\r\n    })\r\n\r\n    return (\r\n        <div ref={drag} className=\"list__item\" opacity={isDragging ? '1' : '1'}>\r\n            <a href={link} className=\"list__item-name\" target=\"_blank\">{content}</a>\r\n            <div className=\"list__right\" >\r\n                {description && <p className=\"list__right-type\">{description}</p>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DNDList\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\Map\\Map.jsx",["199"],"import React, {useState, useCallback} from 'react';\r\nimport {GoogleMap, Marker, InfoWindow, useJsApiLoader} from '@react-google-maps/api';\r\n\r\nimport mapStyles from '../../mapStyles';\r\n\r\nconst Map = ({mapLocation, containerSize}) => {\r\n \r\n    const [showInfo, setShowInfo]=useState(false);\r\n    const [map, setMap] = useState(null);\r\n\r\n    const {isLoaded,loadError} = useJsApiLoader({\r\n        id:'google-map-script',\r\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_KEY\r\n    })\r\n\r\n    const onLoad = useCallback(map=>{\r\n        const bounds = new window.google.maps.LatLngBounds();\r\n        map.fitBounds(bounds);\r\n        setMap(map);\r\n    },[]);\r\n\r\n    const onUnmount = useCallback(map=>{\r\n        setMap(null)\r\n    },[]);\r\n\r\n    if (loadError) {\r\n        return <div>Map cannot be loaded right now, sorry.</div>\r\n      }\r\n\r\n    return isLoaded ? (\r\n        <GoogleMap \r\n            // defaultZoom={10}\r\n            center={mapLocation}\r\n            zoom={10} \r\n            onLoad={onLoad}\r\n            onUnmount={onUnmount}\r\n            options={{styles:mapStyles, zoomControl:false, mapTypeControl:false}}\r\n            mapContainerStyle={containerSize}\r\n        >\r\n\r\n        <Marker \r\n            position={mapLocation} \r\n            onClick={()=>{setShowInfo(true)}}\r\n            // icon={{\r\n            //     url:\"/icons/map-marker.svg\",\r\n            //     scaledSize: new window.google.maps.Size(20,40)\r\n            // }}\r\n        /> \r\n\r\n        {showInfo &&\r\n            <InfoWindow \r\n                position={{lat:mapLocation.lat, lng:mapLocation.lng}}\r\n                onCloseClick={()=>{setShowInfo(false)}}\r\n                >\r\n                <div>\r\n                    <h2>Lesson details</h2>\r\n                    <p> Lesson Name</p>\r\n                </div>\r\n            </InfoWindow>\r\n        }\r\n        </GoogleMap>\r\n    ):<></>\r\n}\r\n\r\nexport default React.memo(Map)\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\mapStyles.js",["200"],"//googe map styling - downloaded from snazzy maps\r\nexport default [\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"weight\": \"2.00\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#9c9c9c\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels.text\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#f2f2f2\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape.man_made\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": -100\r\n            },\r\n            {\r\n                \"lightness\": 45\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#eeeeee\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#7b7b7b\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"simplified\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"labels.icon\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#46bcec\"\r\n            },\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#c8d7d4\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#070707\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    }\r\n]","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Client\\Client.jsx",["201"],"import React, {useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport \"./Client.scss\";\r\n\r\nimport SideBar from '../../components/SideBar/SideBar';\r\nimport ClientWelcome from '../ClientWelcome/ClientWelcome';\r\nimport Lessons from '../Lessons/Lessons';\r\nimport NextLesson from '../NextLesson/NextLesson';\r\nimport EmptyPage from '../EmptyPage/EmptyPage';\r\n\r\n/**\r\n* Renders the Client side \r\n* @param {Object} match - used to make axios calls and conditionally render based on the path\r\n*/\r\n\r\nconst API_URL = process.env.NODE_ENV === \"production\" ? 'https://plan2train.herokuapp.com': 'http://localhost:5000';\r\n\r\nfunction Client ({match}) {\r\n    \r\n    //object containing information associated with specified client\r\n    const [client, setClient] = useState(null)\r\n    \r\n    //object containing information for trainer associated with specified client\r\n    const [trainer, setTrainer] = useState(null)\r\n    \r\n    //object containing information for the client's next lesson\r\n    const [nextLesson, setNextLesson] = useState(null);\r\n    \r\n    //array of all the past lessons objects\r\n    const [pastLessons, setPastLessons] = useState(null);\r\n    \r\n    // pull the data from the db and set the results in state\r\n    useEffect(()=>{\r\n        axios.get(`${API_URL}/client/${match.params.clientId}`)\r\n        .then(res =>{\r\n           \r\n            setClient(res.data)\r\n            \r\n            axios.get(`${API_URL}/trainer/${res.data.trainerId}`)\r\n            .then(trainerRes=>{\r\n                setTrainer(trainerRes.data.userProfile)\r\n            })\r\n\r\n            setNextLesson(res.data.lessons.find(lesson=> lesson.current===true));\r\n            setPastLessons(res.data.lessons.filter(lesson=> lesson.current!==true));\r\n        })\r\n    },[]);\r\n\r\n    return (\r\n        <div>\r\n            {/* render the sidebar unconditionally */}\r\n            <SideBar\r\n                nextLesson={nextLesson}\r\n                pastLessons={pastLessons}\r\n                client={client} \r\n                match={match}\r\n            />\r\n\r\n            {/* render the appropriate component based on the specified path */}\r\n            \r\n            {(trainer && match.path===\"/client/:clientId\") && \r\n                <ClientWelcome\r\n                    client={client}\r\n                    trainer={trainer}    \r\n                />\r\n            }\r\n\r\n            {(client && nextLesson && match.path===\"/client/:clientId/nextlesson/:lessonId\") && \r\n                <NextLesson\r\n                    nextLesson={nextLesson}\r\n                />\r\n            }\r\n\r\n            {(client && pastLessons && match.path===\"/client/:clientId/lessons/:lessonId\") && \r\n                <Lessons\r\n                    pastLessons={pastLessons}\r\n                />\r\n            }\r\n\r\n            {(client && match.path===\"/client/:clientId/lessons\") && <EmptyPage match={match}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Client\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LoginModal\\LoginModal.jsx",["202","203"],"import React, {useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Redirect} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport FocusTrap from 'focus-trap-react';\r\n\r\nimport \"./LoginModal.scss\";\r\n\r\nimport LoginForm from '../LoginForm/LoginForm';\r\n\r\nconst API_URL = process.env.NODE_ENV === \"production\" ? 'https://plan2train.herokuapp.com': 'http://localhost:5000';\r\n\r\nfunction LoginModal ({onClickOutside, onKeyDown, modalRef, buttonRef, closeModal, onSubmit, modalType, toggleScrollLock}) {\r\n\r\n    \r\n    const [showSignIn, setShowSignIn] = useState(true);\r\n    const [showSignUp, setShowSignUp] = useState(false);\r\n  \r\n    const [loginResponse, setLoginResponse] = useState({}); //PRETTY MUCH THE SAME AS TUTORIAL\r\n\r\n\r\n    //triggered by the log in form submit check the credentials and store response in state\r\n    const checkCredentials=(event, profile)=>{\r\n        event.preventDefault();\r\n\r\n        console.log(profile);\r\n        const user = {username:event.target.username.value, password:event.target.password.value};\r\n\r\n        axios.post(`${API_URL}/login`, user, {withCredentials:true})\r\n        .then(res =>{\r\n            if (res.data.loggedIn && res.data.profile !== profile) {\r\n                setLoginResponse({loggedIn:false, error:\"Incorrect Profile Type\"});\r\n            }else{\r\n                setLoginResponse(res.data);\r\n            }\r\n        })\r\n        .catch(err =>{\r\n            console.log(err);\r\n        }) \r\n        toggleScrollLock(); \r\n    }\r\n\r\n    const googleSignIn=()=>{\r\n        window.location.href = `${API_URL}/auth/google`;\r\n        const response = window.json;\r\n        console.log(\"reached\");\r\n        console.log(response);\r\n     }\r\n\r\n\r\n    //triggered by the sign up form submit\r\n    const createTrainer = (event)=>{\r\n        event.preventDefault();\r\n        \r\n        const {username, password, email, fname, lname} = event.target;\r\n\r\n        const newTrainer={\r\n            username:username.value,\r\n            password:password.value,\r\n            email:email.value,\r\n        }\r\n\r\n        axios.post(`${API_URL}/addTrainer`, newTrainer, {withCredentials:true})\r\n        .then(res =>{\r\n            setLoginResponse(res.data);\r\n            console.log(res.data);\r\n        })\r\n        .catch(err =>{\r\n            console.log(err);\r\n        })\r\n        toggleScrollLock(); \r\n    }\r\n\r\n    //used to show either the signup form or the log in form\r\n    const toggleLoginForm = ()=>{\r\n        setShowSignUp(!showSignUp);\r\n        setShowSignIn(!showSignIn);\r\n    }\r\n\r\n        const {loggedIn, error, userId, profile} = loginResponse;\r\n\r\n        console.log(loginResponse);\r\n\r\n        return ReactDOM.createPortal(\r\n            <FocusTrap>\r\n                <aside \r\n                className='modal-cover'\r\n                // onClick={onClickOutside}\r\n                onKeyDown={onKeyDown}>\r\n                    <div className=\"modal-area modal-login__area\" ref={modalRef} style={{backgroundImage: \"url('/images/main5.jfif')\"}}>\r\n                        <div className=\"modal-login__header\">\r\n                            {modalType === \"loginclient\" && <h1 className=\"modal-title modal-login__header-title\">Client Login</h1>}\r\n                            {modalType === \"logintrainer\" && <h1 className= \"modal-login__header-title\">Trainer Login</h1>}\r\n                            {(modalType === \"logintrainer\" && showSignIn) && <p className= \"modal-login__header-info\">Already Part of the Community? Sign In</p>}\r\n                        </div>\r\n                        <button\r\n                            ref={buttonRef}\r\n                            className=\"modal-close modal-login__close\"\r\n                            onClick={closeModal}>\r\n                            <svg className=\"modal-close-icon\" viewBox=\"0 0 40 40\">\r\n                                <path d=\"M 10,10 L 30,30 M 30,10 L 10,30\" />\r\n                            </svg>\r\n                        </button>\r\n                        <div className=\"modal-body modal-login__body\">\r\n                            {showSignIn &&<LoginForm onSubmit={checkCredentials} googleSignIn={googleSignIn} profile={modalType} signIn={showSignIn} closeModal={closeModal}/>}\r\n                            {showSignUp && <LoginForm onSubmit={createTrainer} profile={modalType} signIn={showSignIn} closeModal={closeModal}/>}\r\n                            {error && <p className=\"modal-login__body-error\">{error}</p>}  \r\n                            {(modalType === \"logintrainer\" && showSignIn) && <button className=\"modal-login__body-signup\" onClick={toggleLoginForm}>New to the Community? Click Here to Join Us</button>}\r\n                        </div>\r\n                    </div>\r\n                    {loggedIn && <Redirect to={`/${profile}/${userId}`}></Redirect>}\r\n                </aside>\r\n            </FocusTrap>, document.body\r\n        );\r\n}\r\n\r\nexport default LoginModal\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\LoginForm\\LoginForm.jsx",["204"],"import React from 'react';\r\n\r\nimport './LoginForm.scss';\r\n\r\n\r\nfunction LoginForm({onSubmit, profile, signIn, googleSignIn}) {\r\n    \r\n    const profileType = profile.substring(5, profile.length);\r\n        \r\n    if(!!signIn){\r\n        return (\r\n            <div>\r\n                <form id=\"login-form\" className=\"login__form\" onSubmit={(event)=> onSubmit(event, profileType)} >\r\n                    <div className=\"login__form-input\">\r\n                        <input className=\"modal-form__input login__form-inputbox\" id=\"username\" name=\"username\" type=\"text\" placeholder=\"Username\" required></input>\r\n                        <input className=\"modal-form__input login__form-inputbox\" id=\"password\" name=\"password\" type=\"password\" placeholder=\"Password\" required></input>\r\n                    </div>\r\n                    <button className=\"modal-form__submit-button login__form-submit\" id=\"submit\" type=\"submit\" form=\"login-form\">Sign In</button>\r\n                </form>\r\n                {profileType===\"trainer\" &&\r\n                    <>\r\n                    <div className=\"login-divider\">\r\n                        <div className=\"login-divider__line\"></div>\r\n                        <p className=\"login-divider__text\"> OR</p>\r\n                        <div className=\"login-divider__line\"></div>\r\n                    </div>\r\n                    \r\n                    <button onClick={googleSignIn} className=\"social-login\" id=\"google\" type=\"button\" form=\"login-form\"><img className=\"social-login__icon\" src=\"/icons/google.png\"></img></button>\r\n                    </>}\r\n            </div>\r\n        )\r\n    }else{\r\n        return(\r\n            <>\r\n            <form id=\"login-form\" className=\"login__form\" onSubmit={onSubmit} >\r\n                <div className=\"login__form-input\">\r\n                    <input className=\"modal-form__input login__form-inputbox\" id=\"username\" name=\"username\" type=\"text\" placeholder=\"Username\" required></input>\r\n                    <input className=\"modal-form__input login__form-inputbox\" id=\"password\" name=\"password\" type=\"password\" placeholder=\"Password\" required></input>\r\n                    <input className=\"modal-form__input login__form-inputbox\" id=\"email\" name=\"email\" type=\"email\" placeholder=\"Email\" required></input>\r\n                </div>\r\n                <button className=\"modal-form__submit-button login__form-submit\" id=\"submit\" type=\"submit\" form=\"login-form\">Join Us</button>\r\n            </form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginForm\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\GridList\\GridList.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\components\\NoteModal\\NoteModal.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\EmptyPage\\EmptyPage.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\ClientWelcome\\ClientWelcome.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Lessons\\Lessons.jsx",[],"C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\NextLesson\\NextLesson.jsx",["205"],"import React, {useState,useEffect}from 'react';\r\nimport axios from 'axios';\r\n\r\nimport \"./NextLesson.scss\";\r\n\r\nimport Map from '../../components/Map/Map';\r\nimport GridList from '../../components/GridList/GridList';\r\n\r\n/**\r\n * @param {Object} nextLesson - contains all the information for the next lesson\r\n */\r\nfunction NextLesson({nextLesson}) {\r\n\r\n    const {address, city, province} = nextLesson.location\r\n\r\n    // store the geocoded (lat,long) location of the map in state\r\n    const [mapLocation, setMapLocation]=useState(null);\r\n\r\n    useEffect(()=>{\r\n        //send the location of the next lesson to the api to geocode the location for google maps\r\n        axios.get(`http://www.mapquestapi.com/geocoding/v1/address?key=${process.env.REACT_APP_MAPQUEST_API}&street=${address}&city=${city}&state=${province}`)\r\n        .then(res=>{\r\n            //once the location is geocoded set it in state\r\n            setMapLocation(res.data.results[0].locations[0].displayLatLng);\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    },[])\r\n\r\n    return (\r\n    <div className=\"next-lesson\" style={{backgroundImage: \"url('/images/main2.jfif')\"}}>\r\n        <h1 className=\"next-lesson__title\">NEXT LESSON</h1>\r\n        <div className=\"component next-lesson__container\">\r\n            <h2 className=\"component-title\">{nextLesson.name}</h2>\r\n                <div className = \"current-lesson__top next-lesson__top\">\r\n                    {/* shows the details for the lesson */}\r\n                    <div className=\"next-lesson__top-left\">\r\n                    <h2 className=\"section-title-resources next-lesson__subtitle\">Details</h2>\r\n                        <div className=\"current-lesson__top-details next-lesson__top-details\">\r\n                            <div className=\"current-lesson__top-details-text\">\r\n                                <div className=\"current-lesson__top-details-where\">\r\n                                    <p className=\"current-lesson__top-details-title\">Where</p>\r\n                                    <p className=\"current-lesson__top-details-item next-lesson__location\">{nextLesson.location.name}</p>\r\n                                    <p className=\"current-lesson__top-details-item\">{`${nextLesson.location.address}, ${nextLesson.location.city}`}</p>\r\n                                </div>\r\n                                <div className=\"current-lesson__top-details-when\">\r\n                                    <p className=\"current-lesson__top-details-title\">When</p>\r\n                                    <p className=\"current-lesson__top-details-item\">{`Date: ${nextLesson.date}`}</p>\r\n                                    <p className=\"current-lesson__top-details-item\">{`Time: ${nextLesson.time}`}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    \r\n                        {/* render the google map for the lesson location */}\r\n                        <div className = \"client__contact-map\">\r\n                            <Map\r\n                                mapLocation={mapLocation}\r\n                                containerSize={{width:\"346px\", height:\"282px\"}}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {/* render the resources for the next lesson */}\r\n                    <div className=\"next-lesson__resources\">\r\n                        <h2 className=\"section-title-resources next-lesson__subtitle\">Resources</h2>\r\n                        <div className=\"next-lesson__resources-list\">\r\n                            {nextLesson.resources.map(resource=> \r\n                                <GridList \r\n                                    key={resource.id} \r\n                                    content={resource.name}\r\n                                    resourceType={resource.type} \r\n                                    id={resource.id} \r\n                                    link={resource.url} \r\n                                    description={resource.type} \r\n                                    deleteBtn={false}\r\n                                    deleteType=\"noDelete\" \r\n                                    slider={true}\r\n                                />)}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* render notes for the next lesson */}\r\n                    <div className=\"\">\r\n                        <h2 className=\"section-title-resources next-lesson__subtitle\">Notes</h2>\r\n                        <div className = \"client__notes client-side__notepaper-next\" style={{backgroundImage: \"url('/images/notePaper.png')\"}}>\r\n                            <div className = \"client__notes-body client-side__notes\">\r\n                                <div className=\"client__notes-text\"> {nextLesson.notes}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default NextLesson\r\n","C:\\Users\\patti\\Desktop\\plan2train\\plan2train\\client\\src\\Pages\\Schedule\\event-utils.js",[],{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":10,"column":8,"nodeType":"212","messageId":"213","endLine":10,"endColumn":16},{"ruleId":"214","severity":1,"message":"215","line":240,"column":54,"nodeType":"216","messageId":"217","endLine":240,"endColumn":86},{"ruleId":"218","severity":1,"message":"219","line":80,"column":7,"nodeType":"220","endLine":80,"endColumn":21,"suggestions":"221"},{"ruleId":"210","severity":1,"message":"222","line":6,"column":24,"nodeType":"212","messageId":"213","endLine":6,"endColumn":34},{"ruleId":"210","severity":1,"message":"223","line":60,"column":29,"nodeType":"212","messageId":"213","endLine":60,"endColumn":40},{"ruleId":"206","replacedBy":"224"},{"ruleId":"208","replacedBy":"225"},{"ruleId":"226","severity":1,"message":"227","line":11,"column":13,"nodeType":"228","endLine":11,"endColumn":72},{"ruleId":"206","replacedBy":"229"},{"ruleId":"208","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":7,"column":13,"nodeType":"212","messageId":"233","endLine":7,"endColumn":24},{"ruleId":"231","severity":1,"message":"234","line":8,"column":13,"nodeType":"212","messageId":"233","endLine":8,"endColumn":19},{"ruleId":"231","severity":1,"message":"235","line":10,"column":22,"nodeType":"212","messageId":"233","endLine":10,"endColumn":30},{"ruleId":"210","severity":1,"message":"236","line":5,"column":8,"nodeType":"212","messageId":"213","endLine":5,"endColumn":18},{"ruleId":"210","severity":1,"message":"237","line":141,"column":12,"nodeType":"212","messageId":"213","endLine":141,"endColumn":18},{"ruleId":"238","severity":1,"message":"239","line":153,"column":26,"nodeType":"240","messageId":"241","endLine":153,"endColumn":28},{"ruleId":"242","severity":1,"message":"243","line":197,"column":29,"nodeType":"228","endLine":197,"endColumn":125},{"ruleId":"242","severity":1,"message":"243","line":206,"column":29,"nodeType":"228","endLine":206,"endColumn":127},{"ruleId":"226","severity":1,"message":"227","line":35,"column":13,"nodeType":"228","endLine":35,"endColumn":72},{"ruleId":"210","severity":1,"message":"244","line":9,"column":12,"nodeType":"212","messageId":"213","endLine":9,"endColumn":15},{"ruleId":"245","severity":1,"message":"246","line":2,"column":1,"nodeType":"247","endLine":171,"endColumn":2},{"ruleId":"218","severity":1,"message":"248","line":48,"column":7,"nodeType":"220","endLine":48,"endColumn":9,"suggestions":"249"},{"ruleId":"210","severity":1,"message":"250","line":55,"column":43,"nodeType":"212","messageId":"213","endLine":55,"endColumn":48},{"ruleId":"210","severity":1,"message":"251","line":55,"column":50,"nodeType":"212","messageId":"213","endLine":55,"endColumn":55},{"ruleId":"242","severity":1,"message":"243","line":28,"column":121,"nodeType":"228","endLine":28,"endColumn":181},{"ruleId":"218","severity":1,"message":"252","line":29,"column":7,"nodeType":"220","endLine":29,"endColumn":9,"suggestions":"253"},"no-native-reassign",["254"],"no-negated-in-lhs",["255"],"no-unused-vars","'Schedule' is defined but never used.","Identifier","unusedVar","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'opt'.","ArrowFunctionExpression","unsafeRefs","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fileUpload'. Either include it or remove the dependency array.","ArrayExpression",["256"],"'formatDate' is defined but never used.","'trainerName' is assigned a value but never used.",["254"],["255"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement",["254"],["255"],"no-redeclare","'information' is already defined.","redeclared","'lesson' is already defined.","'location' is already defined.","'ScrollMenu' is defined but never used.","'isOver' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'map' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'match.params.clientId'. Either include it or remove the dependency array.",["257"],"'fname' is assigned a value but never used.","'lname' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'address', 'city', and 'province'. Either include them or remove the dependency array.",["258"],"no-global-assign","no-unsafe-negation",{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},"Update the dependencies array to be: [fileUpload, selectedFile]",{"range":"265","text":"266"},"Update the dependencies array to be: [match.params.clientId]",{"range":"267","text":"268"},"Update the dependencies array to be: [address, city, province]",{"range":"269","text":"270"},[3292,3306],"[fileUpload, selectedFile]",[1755,1757],"[match.params.clientId]",[1060,1062],"[address, city, province]"]